
<h2 class="sectionedit1" id="start_and_shut-down">Start and shut-down</h2>
<div class="level2">

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Start and shut-down&quot;,&quot;hid&quot;:&quot;start_and_shut-down&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:1,&quot;range&quot;:&quot;1-33&quot;} -->
<h3 class="sectionedit2" id="log_to_grappolo_via_ethernet">log to grappolo via ethernet</h3>
<div class="level3">
<ul>
<li class="level1"><div class="li"> Connect grappolo to ethernet network and turn on the power </div>
</li>
<li class="level1"><div class="li"> from an external laptop or desktop connected to the same network as grappolo do <strong>ifconfig</strong> to find out the network IP address you are logged on. Next type</div>
</li>
</ul>
<pre class="code bash">    <span class="kw2">sudo</span> <span class="kw2">nmap</span> <span class="re5">-sP</span> 144.173.78.1-<span class="nu0">255</span> <span class="sy0">|</span> <span class="kw2">grep</span> <span class="re5">-B2</span> 00:00:00:00:08:<span class="nu0">49</span>
    <span class="co0"># or</span>
    <span class="kw2">sudo</span> <span class="kw2">nmap</span> <span class="re5">-sP</span> 144.173.78.1-<span class="nu0">255</span> <span class="sy0">|</span> <span class="kw2">grep</span> <span class="re5">-B2</span> erox
    <span class="co0"># replace 144.173.78 with the IP adrees of your network</span>
    <span class="co0"># use the resulting stdout IP address to log grappolo via ssh</span>
    <span class="kw2">ssh</span> admin<span class="sy0">@</span>144.173.78.xxx <span class="co0"># pass admin</span>
    <span class="co0"># or</span>
    <span class="kw2">ssh</span> stu1<span class="sy0">@</span>144.173.78.xxx  <span class="co0"># pass stu1</span></pre>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;log to grappolo via ethernet&quot;,&quot;hid&quot;:&quot;log_to_grappolo_via_ethernet&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:2,&quot;range&quot;:&quot;34-660&quot;} -->
<h3 class="sectionedit3" id="log_to_grappolo_via_wifi">log to grappolo via wifi</h3>
<div class="level3">
<ul>
<li class="level1"><div class="li">remove sd card from grappolo 
<div class="notewarning">never remove SD card with power on! 
</div></div>
</li>
<li class="level1"><div class="li">Insert and read sd card from your laptop/desktop</div>
</li>
<li class="level1"><div class="li">edit the /etc/network/interfaces file as sudo user</div>
</li>
</ul>
<pre class="code bash"><span class="kw2">sudo</span> <span class="kw2">nano</span> <span class="sy0">/</span>etc<span class="sy0">/</span>network<span class="sy0">/</span>interfaces</pre>
<ul>
<li class="level1"><div class="li">Add network name and password to wpa-ssid and wpa-psk:
&lt;code bash&gt;
iface wlan0 inet dhcp
wpa-conf /etc/wpa<em>supplicant/wpa</em>supplicant.conf
       wpa-ssid “NETWORK<em>NAME”
       wpa-psk “NETWORK</em>PASSWORD”
&lt;/code&gt;</div>
</li>
</ul>
<div class="notetip">to save and exit nano type ctrl + X and yes
</div>
</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;log to grappolo via wifi&quot;,&quot;hid&quot;:&quot;log_to_grappolo_via_wifi&quot;,&quot;codeblockOffset&quot;:1,&quot;secid&quot;:3,&quot;range&quot;:&quot;661-1230&quot;} -->
<h2 class="sectionedit4" id="start_the_grid_engine">Start the grid engine</h2>
<div class="level2">
<ul>
<li class="level1"><div class="li"> once logged into grappolo, start the grid engine using the startup script:</div>
</li>
</ul>
<pre class="code bash"><span class="kw2">bash</span> grappolo_start.sh
<span class="co0"># enter admin password : admin</span>
<span class="co0"># enter node1 password : node1pw</span>
<span class="co0"># enter node2 password : node2pw</span></pre>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Start the grid engine&quot;,&quot;hid&quot;:&quot;start_the_grid_engine&quot;,&quot;codeblockOffset&quot;:2,&quot;secid&quot;:4,&quot;range&quot;:&quot;1231-1484&quot;} -->
<h2 class="sectionedit5" id="shut_down_grappolo">Shut down grappolo</h2>
<div class="level2">
<pre class="code bash"><span class="co4">admin@grappolo:~$ </span><span class="kw2">ssh</span> node1
<span class="co4">admin@node1:~$ </span><span class="kw2">sudo</span> poweroff <span class="co0"># password: node1pw</span>
<span class="co4">admin@grappolo:~$ </span><span class="kw2">ssh</span> node2 
<span class="co4">admin@node2:~$ </span><span class="kw2">sudo</span> poweroff <span class="co0"># password: node2pw</span>
<span class="co4">admin@grappolo:~$ </span><span class="kw2">sudo</span> poweroff <span class="co0"># password grappolo: admin</span></pre>
<div class="noteimportant">leds from usb will be off, now you can power of grappolo
</div>
</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Shut down grappolo&quot;,&quot;hid&quot;:&quot;shut_down_grappolo&quot;,&quot;codeblockOffset&quot;:3,&quot;secid&quot;:5,&quot;range&quot;:&quot;1485-1831&quot;} -->
<h2 class="sectionedit6" id="submit_jobs_to_grappolo">Submit jobs to GRAPPOLO</h2>
<div class="level2">

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Submit jobs to GRAPPOLO&quot;,&quot;hid&quot;:&quot;submit_jobs_to_grappolo&quot;,&quot;codeblockOffset&quot;:4,&quot;secid&quot;:6,&quot;range&quot;:&quot;1832-1868&quot;} -->
<h3 class="sectionedit7" id="computational_implementation">Computational implementation</h3>
<div class="level3">

<p>
Create a template script <strong>Template2qsub.sh</strong> with all the commands you need to execute for your data processing routine. Save Template2qsub.sh here:  pi@grappolo ~/ost4sem/experiment/scripts/Template2qsub.sh
</p>

<p>
In the example below we perform the following:
</p>
<ul>
<li class="level1"><div class="li"> read the metadata of a raster image (.tif) and print these information on an output txt file</div>
</li>
<li class="level1"><div class="li"> crop the raster image to the extent of a vector file (.shp format)</div>
</li>
<li class="level1"><div class="li"> read the metadata of the newest cropped raster image (.tif) and printe these info on a new txt data.</div>
</li>
</ul>
<pre class="code bash"><span class="co0">#$ -S /bin/bash</span>
<span class="co0"># #$ -o /home/pi/ost4sem/experiment/stdout</span>
<span class="co0"># #$ -e /home/pi/ost4sem/experiment/stderr</span>
<span class="re2">INPUTDIR</span>=~<span class="sy0">/</span>usbstore1<span class="sy0">/</span>input
<span class="re2">OUTPUTDIR</span>=~<span class="sy0">/</span>usbstore1<span class="sy0">/</span>output
<span class="re2">CROPFILE</span>=$<span class="br0">&#40;</span><span class="kw2">basename</span> <span class="re1">$file</span> .tif<span class="br0">&#41;</span>_fr.tif
&nbsp;
gdalinfo <span class="re1">$file</span> <span class="sy0">&gt;</span> <span class="re1">$OUTPUTDIR</span><span class="sy0">/</span>$<span class="br0">&#40;</span><span class="kw2">basename</span> <span class="re1">$file</span> .tif<span class="br0">&#41;</span>.txt
gdalwarp <span class="re5">-cutline</span> <span class="re1">$INPUTDIR</span><span class="sy0">/</span>poly_fr.shp -crop_to_cutline <span class="re1">$file</span> <span class="re1">$OUTPUTDIR</span><span class="sy0">/</span><span class="re1">$CROPFILE</span>
gdalinfo <span class="re1">$OUTPUTDIR</span><span class="sy0">/</span><span class="re1">$CROPFILE</span> <span class="sy0">&gt;</span> <span class="re1">$OUTPUTDIR</span><span class="sy0">/</span>$<span class="br0">&#40;</span><span class="kw2">basename</span> <span class="re1">$CROPFILE</span> .tif<span class="br0">&#41;</span>.txt</pre>

<p>
The <strong>QsubImages.sh</strong> script below will perform the following:
</p>
<ul>
<li class="level1"><div class="li"> List the images you need to process </div>
</li>
<li class="level1"><div class="li"> Sent to process images individually using a dedicated CPU. </div>
</li>
</ul>

<p>
A job submission queuing list is created into a grid engine ( a software dealing with job submission queuing and priority). When the number of process in the queue is higher than the number of CPU available in the cluster, jobs to be processed are waiting. <br/>

The script is found in grappolo at: pi@grpi@grappolo ~/ost4sem/experiment/scripts/QsubImages.sh
</p>
<pre class="code bash"><span class="co0">#!/bin/bash</span>
&nbsp;
<span class="re2">SCRIPTDIR</span>=~<span class="sy0">/</span>ost4sem<span class="sy0">/</span>experiment<span class="sy0">/</span>scripts
<span class="kw1">for</span> <span class="kw2">file</span> <span class="kw1">in</span>  ~<span class="sy0">/</span>ost4sem<span class="sy0">/</span>exercise<span class="sy0">/</span>basic_adv_gdalogr<span class="sy0">/</span>fagus_sylvatica<span class="sy0">/</span><span class="nu0">20</span><span class="sy0">*</span>.tif ; <span class="kw1">do</span> 
qsub <span class="re5">-v</span> <span class="re2">file</span>=<span class="re1">$file</span> <span class="re1">$SCRIPTDIR</span><span class="sy0">/</span>Template2qsub.sh
<span class="kw1">done</span></pre>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Computational implementation&quot;,&quot;hid&quot;:&quot;computational_implementation&quot;,&quot;codeblockOffset&quot;:4,&quot;secid&quot;:7,&quot;range&quot;:&quot;1869-&quot;} -->