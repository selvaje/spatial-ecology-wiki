
<h1 class="sectionedit1" id="scripting_if_else_condition_loops_and_plotting_graphics">Scripting, if else condition, loops and plotting graphics</h1>
<div class="level1">

</div>
<!-- EDIT1 SECTION "Scripting, if else condition, loops and plotting graphics" [1-74] -->
<h2 class="sectionedit2" id="r_script">R script</h2>
<div class="level2">

<p>
An R script is a text file containing a list of R commands that you would enter in the command line of R. Using scripting is useful to carry out stand alone processes and eventually multi-tool tasks within data processing flows that include different applications to take part. Scripting is also required for cluster processing. 
To create an R script you have to write a .txt file and save it with the .R extension.
</p>

<p>
To run a script, let&#039;s say one with the name:
</p>
<pre class="code bash"><span class="sy0">/</span>home<span class="sy0">/</span>path<span class="sy0">/</span>to<span class="sy0">/</span>myscript<span class="sy0">/</span>myscript.R</pre>

<p>
you may use either:
</p>
<pre class="code r">  source(&quot;/home/path/to/myscript/myscript.R&quot;)</pre>

<p>
on the command line of R or you can directly run the script from the Bash shell using the following command
</p>
<pre class="code bash">  R CMD BATCH <span class="sy0">/</span>home<span class="sy0">/</span>path<span class="sy0">/</span>to<span class="sy0">/</span>myscript<span class="sy0">/</span>myscript.R </pre>

<p>
or
</p>
<pre class="code bash"> R  <span class="re5">--no-save</span>  <span class="re5">-q</span> <span class="sy0">&lt;</span>     ost4sem<span class="sy0">/</span>exercise<span class="sy0">/</span>basic_adv_r<span class="sy0">/</span>advance_synecology.R </pre>

<p>
<br/>

<br/>

</p>

</div>
<!-- EDIT2 SECTION "R script" [75-988] -->
<h2 class="sectionedit3" id="r_script_example">R script example</h2>
<div class="level2">

<p>
We create a txt file with the following R commands and save it as myscript.R
</p>
<pre class="code r">  sink(&quot;myscript_output_example.txt&quot;)
  i &lt;- 1:10
  outer(i, i, &quot;*&quot;)
  sink()</pre>

<p>
then we lance it from a Bash terminal and we specify to â€“no-save the R working space once the R terminal will close 
</p>
<pre class="code bash">  R<span class="sy0">&lt;</span>sink.R <span class="re5">--no-save</span></pre>

<p>
We can check the result of the output. A  <em>myscript<em>output</em>example.txt</em> should be available in the working direcory since the R <strong>sink</strong> function is used to divert R output to a connection, and in our example to the output text file.
! remember to clean up your directory once finished
</p>
<pre class="code r">  source(&quot;rm /home/path/to/myscript/myscript.R&quot;)</pre>

</div>
<!-- EDIT3 SECTION "R script example" [989-1707] -->
<h2 class="sectionedit4" id="if_else_condition">if else condition</h2>
<div class="level2">

<p>
<strong> if (logic test) {TRUE} else {FALSE}</strong>
</p>
<pre class="code r">if (data$j==9) {ALPHA=0} else {ALPHA=data$j/45+data$t}</pre>

<p>
<strong>ifelse(test, yes, no)</strong> returns a value with the same shape as test, which is filled with elements selected from either yes or no depending on whether the element of the test is TRUE or FALSE.
</p>
<div class="table sectionedit5"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0" colspan="2"> Arguments </th>
	</tr>
	</thead>
	<tr class="row1">
		<td class="col0 leftalign">test	</td><td class="col1"> an object which can be coerced to logical mode </td>
	</tr>
	<tr class="row2">
		<td class="col0 leftalign">yes	</td><td class="col1"> return values for true elements of test </td>
	</tr>
	<tr class="row3">
		<td class="col0 leftalign">no	</td><td class="col1"> return values for false elements of test </td>
	</tr>
</table></div>
<!-- EDIT5 TABLE [2051-2220] -->
<p>
<strong>Example</strong>
</p>
<pre class="code r">  x &lt;- c(10:-11)
  x.positive = ifelse(x &gt;= 0, x, NA)
#
  sqrt(x)#- gives warning
  sqrt(ifelse(x &gt;= 0, x, NA))# no warning</pre>

</div>
<!-- EDIT4 SECTION "if else condition" [1708-2377] -->
<h2 class="sectionedit6" id="for_loop_and_plotting_graphics">For loop and plotting graphics</h2>
<div class="level2">

<p>
We use a <strong>for loop</strong> function for plotting 30 different graphics. Each graphic represents a different forest tree species and its altitude range of growth according to slope orientation.
</p>
<pre class="code r">sp.name = read.csv(&quot;~/ost4sem/exercise/basic_adv_r/inputs/SPECIES_DEF.txt&quot;,header=TRUE)
main=sp.name$name[sp.name$code==1]
&nbsp;
load(&quot;~/ost4sem/exercise/basic_adv_r/inputs/advanceRdata&quot;)
&nbsp;
FFD = advanceRdata 
&nbsp;
for (i in c(1,5,7,10,11,13,15,17,20,22,29,35,36,41,44,46,48,49,51,54,56,68,100,116,118,123,125,129,130,134)){
&nbsp;
  mod &lt;- paste(&quot;S&quot;,i,sep=&quot;&quot;)
  presence = subset(FFD,FFD[[mod]]==1)
  absence = subset(FFD,FFD[[mod]]!=1)
  png(paste(&quot;~/ost4sem/exercise/basic_adv_r/outputs/altitude_png/sp_&quot;,i,&quot;_altitude.png&quot;,sep=&quot;&quot;),width = 800, height = 800)
&nbsp;
## plot altitude for each Aspect 
&nbsp;
  par(mar=c(5,5,5,1))
  plot(presence$pr205,presence$pr201, main=sp.name$name[sp.name$code==i], col = &quot;green3&quot;,  axes=FALSE, xlab=&quot;Slope Orientation&quot;, ylab=&quot;Mean Altitude    (m)&quot;, axis=FALSE, cex.main=3, cex.lab=2)
  axis(1, at=c(1,2,3,4), labels=c(&quot;North&quot;,&quot;South&quot;,&quot;East&quot;,&quot;West&quot;), cex.axis=1.5)
  axis(2,cex.axis=1.5)
  box()
  dev.off()
}</pre>

<p>
<br/>

</p>
<div class="notetip">see  <a href="http://addictedtor.free.fr/graphiques/" class="urlextern" target="blanc" title="http://addictedtor.free.fr/graphiques/" rel="nofollow noopener">http://addictedtor.free.fr/graphiques/</a> for more graphics examples

</div>
</div>
<!-- EDIT6 SECTION "For loop and plotting graphics" [2378-] -->