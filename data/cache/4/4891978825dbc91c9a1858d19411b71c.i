a:756:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:100:"Burned Area Mapping using Support Vector Machine and Combined Segmentation Random Forest classifiers";i:1;i:1;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:3;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1;}i:4;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:310:"The goal of this exercise is to demonstrate how to use Open Source classifiers. We will focus on illustrating command syntax rather than on generating accurate classification results. A more complex script would generate more accurate results but is inappropriate for the time we have in this training session.";}i:2;i:116;}i:5;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:426;}i:6;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:428;}i:7;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:429;}i:8;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:94:"
This exercise will use several commands from the following open source programming languages:";}i:2;i:431;}i:9;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:525;}i:10;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:527;}i:11;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:527;}i:12;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:527;}i:13;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:527;}i:14;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:531;}i:15;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:50:"http://en.wikipedia.org/wiki/Bash_%28Unix_shell%29";i:1;s:6:" BASH ";}i:2;i:532;}i:16;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:35:" a common Linux scripting language.";}i:2;i:595;}i:17;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:630;}i:18;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:630;}i:19;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:630;}i:20;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:630;}i:21;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:634;}i:22;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:32:"http://en.wikipedia.org/wiki/AWK";i:1;s:5:" AWK ";}i:2;i:635;}i:23;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:63:" a scripting language typically use for text data manipulation.";}i:2;i:680;}i:24;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:743;}i:25;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:743;}i:26;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:743;}i:27;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:743;}i:28;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:747;}i:29;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:41:"http://en.wikipedia.org/wiki/R_Statistics";i:1;s:3:" R ";}i:2;i:748;}i:30;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:88:" a programming language and software environment for statistical computing and graphics.";}i:2;i:799;}i:31;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:887;}i:32;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:887;}i:33;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:887;}i:34;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:887;}i:35;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:891;}i:36;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:33:"http://en.wikipedia.org/wiki/Gdal";i:1;s:10:" GDAL/OGR ";}i:2;i:892;}i:37;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:73:" a library for reading and writing raster/vector geospatial data formats.";}i:2;i:942;}i:38;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1015;}i:39;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1015;}i:40;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1015;}i:41;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1015;}i:42;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:1019;}i:43;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:64:"http://km.fao.org/OFwiki/index.php/Open_Foris_Geospatial_Toolkit";i:1;s:31:" Open Foris Geospatial Toolkit ";}i:2;i:1020;}i:44;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:86:" a collection of prototype command-line utilities for processing of geographical data.";}i:2;i:1123;}i:45;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1209;}i:46;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1209;}i:47;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1209;}i:48;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1209;}i:49;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:1213;}i:50;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:61:"http://spatial-ecology.net/dokuwiki/doku.php?id=wiki:pk_tools";i:1;s:9:" PKTOOLS ";}i:2;i:1214;}i:51;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:101:" a collection of programs written by Pieter Kempeneers in C++ to perform operations on raster images.";}i:2;i:1291;}i:52;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1392;}i:53;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1392;}i:54;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:1392;}i:55;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1392;}i:56;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:1393;}i:57;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1395;}i:58;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:1395;}i:59;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1395;}i:60;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1395;}i:61;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:1399;}i:62;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:23:"http://kate-editor.org/";i:1;s:6:" kate ";}i:2;i:1400;}i:63;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:33:" will be used as the text editor.";}i:2;i:1436;}i:64;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:1469;}i:65;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1471;}i:66;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1471;}i:67;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:1471;}i:68;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1471;}i:69;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:1472;}i:70;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:101:"
Many of the commands that can be invoked by these tools have help information that can be viewed as:";}i:2;i:1474;}i:71;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1575;}i:72;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:1575;}i:73;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1575;}i:74;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1575;}i:75;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:51:" the command name followed by -h (e.g., pkcrop -h )";}i:2;i:1580;}i:76;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:1631;}i:77;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1633;}i:78;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1633;}i:79;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1633;}i:80;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1633;}i:81;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:" or ";}i:2;i:1637;}i:82;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:1641;}i:83;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"man";}i:2;i:1642;}i:84;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:1645;}i:85;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:46:" followed by the command name (e.g., man sort)";}i:2;i:1646;}i:86;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:1692;}i:87;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1694;}i:88;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1694;}i:89;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:1694;}i:90;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1694;}i:91;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:1695;}i:92;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:1697;}i:93;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:1698;}i:94;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:94:"
The burned area mapping will be performed using a summer 2008 WELD seasonal product over the ";}i:2;i:1700;}i:95;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:102:"http://www.npr.org/blogs/thetwo-way/2011/07/28/138789103/tundra-fires-and-climate-change-more-bad-news";i:1;s:21:" Anaktuvuk River Fire";}i:2;i:1794;}i:96;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:76:" that occurred September 2007 in a Tundra region of the Alaskan North Slope.";}i:2;i:1924;}i:97;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2001;}i:98;a:3:{i:0;s:10:"table_open";i:1;a:3:{i:0;i:1;i:1;i:1;i:2;i:2002;}i:2;i:2001;}i:99;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:2001;}i:100;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:2001;}i:101;a:3:{i:0;s:13:"internalmedia";i:1;a:7:{i:0;s:16:":wiki:alaska.png";i:1;N;i:2;N;i:3;s:3:"800";i:4;N;i:5;s:5:"cache";i:6;s:7:"details";}i:2;i:2003;}i:102;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:2027;}i:103;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:2030;}i:104;a:3:{i:0;s:11:"table_close";i:1;a:1:{i:0;i:2030;}i:2;i:2030;}i:105;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2030;}i:106;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:2031;}i:107;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:128:"
The summer 2008 WELD product, separate .tif files for each of the 14 WELD bands, is stored at: /home/user/ost4sem/exercise/weld";}i:2;i:2033;}i:108;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:2161;}i:109;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"data";}i:2;i:2163;}i:110;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:2167;}i:111;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:29:"processing/x6JIatZlSUMMER2008";}i:2;i:2169;}i:112;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:2198;}i:113;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:2201;}i:114;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:2202;}i:115;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:62:"
To save time, we have pre-generated an ESRI shape file (class";}i:2;i:2204;}i:116;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:1;i:1;s:1:"_";}i:2;i:1;i:3;s:1:"_";}i:2;i:2266;}i:117;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:3;i:1;s:1:"b";}i:2;i:3;i:3;s:1:"b";}i:2;i:2267;}i:118;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:4;i:1;s:1:"_";}i:2;i:4;i:3;s:1:"_";}i:2;i:2268;}i:119;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:168:"nb.shp) that contains vector polygons storing the locations of some visually interpreted burned and unburned areas.  This is stored at: /home/user/ost4sem/exercise/weld";}i:2;i:2269;}i:120;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:2437;}i:121;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"data";}i:2;i:2439;}i:122;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:2443;}i:123;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:"processing/shp";}i:2;i:2445;}i:124;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2459;}i:125;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2459;}i:126;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:2462;}i:127;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:44:"
This exercise will consist of 4 main steps:";}i:2;i:2464;}i:128;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2508;}i:129;a:3:{i:0;s:10:"listo_open";i:1;a:0:{}i:2;i:2508;}i:130;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2508;}i:131;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2508;}i:132;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:64:" Working Directory and Data Preparation (using GDAL and PKTOOLS)";}i:2;i:2512;}i:133;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2576;}i:134;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2576;}i:135;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2576;}i:136;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2576;}i:137;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:54:" Support Vector Machine Classification (using PKTOOLS)";}i:2;i:2580;}i:138;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2634;}i:139;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2634;}i:140;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2634;}i:141;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2634;}i:142;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:95:" Combined Segmentation Random Forest Classification (using Open Foris Geospatial Toolkit and R)";}i:2;i:2638;}i:143;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2733;}i:144;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2733;}i:145;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2733;}i:146;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2733;}i:147;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:45:" Result Visualization (using openev and qgis)";}i:2;i:2737;}i:148;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2782;}i:149;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2782;}i:150;a:3:{i:0;s:11:"listo_close";i:1;a:0:{}i:2;i:2782;}i:151;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2782;}i:152;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:2783;}i:153;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:40:"
You can follow the full methodology in ";}i:2;i:2785;}i:154;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:94:"http://www.spatial-ecology.net/ost4sem/exercise/weld_data_processing/classification/burned.pdf";i:1;s:20:"  Data flow diagram ";}i:2;i:2825;}i:155;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2945;}i:156;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2945;}i:157;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:3018;}i:158;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:63:"
These 4 main steps are in the following script and directory: ";}i:2;i:3020;}i:159;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:3083;}i:160;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:43:"
Script:   /home/user/ost4sem/exercise/weld";}i:2;i:3085;}i:161;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:3128;}i:162;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"data";}i:2;i:3130;}i:163;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:3134;}i:164;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:28:"processing/classification.sh";}i:2;i:3136;}i:165;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:3164;}i:166;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:44:"
Directory: /home/user/ost4sem/exercise/weld";}i:2;i:3166;}i:167;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:3210;}i:168;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"data";}i:2;i:3212;}i:169;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:3216;}i:170;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"processing";}i:2;i:3218;}i:171;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:3228;}i:172;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:3230;}i:173;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:3231;}i:174;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:170:"
We are ready to start the exercise, we will first open classification.sh using the text editor kate and then copy and paste each command from the script to the terminal.";}i:2;i:3233;}i:175;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:3403;}i:176;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:3405;}i:177;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:3406;}i:178;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:71:"
Change the directory and open the script classification.sh using kate:";}i:2;i:3408;}i:179;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3479;}i:180;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:287:"cd /home/user/ost4sem/exercise/weld_data_processing/
rm -f $HOME/ost4sem/exercise/weld_data_processing/classification.sh
wget http://www.spatial-ecology.net/ost4sem/exercise/weld_data_processing/classification.sh 
kate /home/user/ost4sem/exercise/weld_data_processing/classification.sh &";}i:2;i:3479;}i:181;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3479;}i:182;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:3777;}i:183;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:3779;}i:184;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3780;}i:185;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3780;}i:186;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:38:"Working Directory and Data Preparation";i:1;i:3;i:2;i:3780;}i:2;i:3780;}i:187;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:3780;}i:188;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3780;}i:189;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:3829;}i:190;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:3831;}i:191;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:3832;}i:192;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:29:"Set your working directories:";}i:2;i:3;i:3;s:29:"Set your working directories:";}i:2;i:3834;}i:193;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:3863;}i:194;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:3865;}i:195;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:3867;}i:196;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:3868;}i:197;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:3870;}i:198;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3871;}i:199;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:229:"INPUTDIR=/home/user/ost4sem/exercise/weld_data_processing/x6JIatZlSUMMER2008
INSHPDIR=/home/user/ost4sem/exercise/weld_data_processing/shp
OUTPUTDIR=/home/user/ost4sem/exercise/weld_data_processing/classification
mkdir $OUTPUTDIR";}i:2;i:3871;}i:200;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3871;}i:201;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:96:"We can check that we set these Linux variables correctly by typing, for example: echo $INSHPDIR ";}i:2;i:4111;}i:202;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4207;}i:203;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4207;}i:204;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:68:"We can now visualize the data for this exercise using commands like:";}i:2;i:4209;}i:205;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4278;}i:206;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:524:"# if you do not have $INSHPDIR/class_b_nb.shp
cd $INSHPDIR/
wget http://www.spatial-ecology.net/ost4sem/exercise/weld_data_processing/shp/class_b_nb.shp
wget http://www.spatial-ecology.net/ost4sem/exercise/weld_data_processing/shp/class_b_nb.shx
wget http://www.spatial-ecology.net/ost4sem/exercise/weld_data_processing/shp/class_b_nb.qpj
wget http://www.spatial-ecology.net/ost4sem/exercise/weld_data_processing/shp/class_b_nb.prj
wget http://www.spatial-ecology.net/ost4sem/exercise/weld_data_processing/shp/class_b_nb.dbf";}i:2;i:4278;}i:207;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:199:"openev $INPUTDIR/Band1_TOA_REF.TIF
openev $INPUTDIR/Band1_TOA_REF.TIF  $INSHPDIR/class_b_nb.shp  # shape file with 2 classes  1=not-burned area, 2=burned area, used by the supervised classification. ";}i:2;i:4818;}i:208;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4818;}i:209;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:5026;}i:210;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:35:"Create a binary WELD bad data mask:";}i:2;i:3;i:3;s:35:"Create a binary WELD bad data mask:";}i:2;i:5028;}i:211;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:5063;}i:212;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:5065;}i:213;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:5067;}i:214;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:5068;}i:215;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:109:"
We will now create a binary mask (with values 0 or 1) that define if a pixel is cloudy (using WELD bands: DT";}i:2;i:5070;}i:216;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:5179;}i:217;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"Cloud";}i:2;i:5181;}i:218;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:5186;}i:219;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:"State.TIF and ACCA";}i:2;i:5188;}i:220;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:5206;}i:221;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:52:"State.TIF) or saturated (using WELD band: Saturation";}i:2;i:5208;}i:222;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:5260;}i:223;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"Flag.TIF)";}i:2;i:5262;}i:224;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:5271;}i:225;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:5273;}i:226;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:5274;}i:227;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:30:"
To do this first stack the DT";}i:2;i:5276;}i:228;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:5306;}i:229;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:"Cloud_State, ACCA";}i:2;i:5308;}i:230;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:5325;}i:231;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:"State and Saturation";}i:2;i:5327;}i:232;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:5347;}i:233;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:"Flag bands together:";}i:2;i:5349;}i:234;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5370;}i:235;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:128:"pkcrop -i $INPUTDIR/DT_Cloud_State.TIF -i $INPUTDIR/ACCA_State.TIF -i $INPUTDIR/Saturation_Flag.TIF -o $OUTPUTDIR/mask_bands.tif";}i:2;i:5370;}i:236;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5370;}i:237;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:177:"Next, using pkgetmask create a binary mask (mask1-0.tif) where any pixel that is cloudy or saturated in any WELD band is assigned a value of 0 (if not it is assigned a 1 value):";}i:2;i:5503;}i:238;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5681;}i:239;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:258:"pkgetmask -ot Int16 -i $OUTPUTDIR/mask_bands.tif -b 0 -b 1 -b 2 --min 1  --max 255  -data 0 -nodata 1 -o  $OUTPUTDIR/mask1-0.tif
pkgetmask -ot Int16 -i $OUTPUTDIR/mask_bands.tif -b 0 -b 1 -b 2 --min 1  --max 255  -data 1 -nodata 0 -o  $OUTPUTDIR/mask0-1.tif
";}i:2;i:5681;}i:240;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5681;}i:241;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:52:"Remove intermediate files created by these commands:";}i:2;i:5947;}i:242;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6000;}i:243;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:29:"rm  $OUTPUTDIR/mask_bands.tif";}i:2;i:6000;}i:244;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6000;}i:245;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:6034;}i:246;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:45:"Stack the 6 reflective wavelength WELD bands:";}i:2;i:3;i:3;s:45:"Stack the 6 reflective wavelength WELD bands:";}i:2;i:6036;}i:247;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:6081;}i:248;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:6083;}i:249;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:6085;}i:250;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:6086;}i:251;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:112:"
Now we will stack the 6 WELD reflective wavelength bands together into a single file called Bands_stack.tif as:";}i:2;i:6088;}i:252;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:6200;}i:253;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:6202;}i:254;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6203;}i:255;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:360:" gdalbuildvrt -overwrite -separate $OUTPUTDIR/Bands_stack.vrt $OUTPUTDIR/mask1-0.tif $INPUTDIR/Band1_TOA_REF.TIF $INPUTDIR/Band2_TOA_REF.TIF  $INPUTDIR/Band3_TOA_REF.TIF  $INPUTDIR/Band4_TOA_REF.TIF  $INPUTDIR/Band5_TOA_REF.TIF  $INPUTDIR/Band7_TOA_REF.TIF 
 gdal_translate  -co  COMPRESS=LZW -co ZLEVEL=9  $OUTPUTDIR/Bands_stack.vrt $OUTPUTDIR/Bands_stack.tif";}i:2;i:6203;}i:256;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6203;}i:257;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:6572;}i:258;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:23:"Rasterize the training:";}i:2;i:3;i:3;s:23:"Rasterize the training:";}i:2;i:6574;}i:259;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:6597;}i:260;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:6599;}i:261;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:6601;}i:262;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:6602;}i:263;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:74:"
Next we will convert the pre-generated ESRI shape file to a raster (class";}i:2;i:6604;}i:264;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:1;i:1;s:1:"_";}i:2;i:1;i:3;s:1:"_";}i:2;i:6678;}i:265;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:3;i:1;s:1:"b";}i:2;i:3;i:3;s:1:"b";}i:2;i:6679;}i:266;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:4;i:1;s:1:"_";}i:2;i:4;i:3;s:1:"_";}i:2;i:6680;}i:267;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:229:"nb.shp) with three classes: 0 unknown, 1 not-burned, 2 burned. To be useful we need to rasterize the shape file with the same resolution and extent as the WELD bands. This generates a training raster map called class_b_nb.tif as:";}i:2;i:6681;}i:268;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6911;}i:269;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:136:"gdal_rasterize  -te  75000 2070010 189990 2200000 -tr 30 30 -l  class_b_nb -a class $INSHPDIR/class_b_nb.shp   $OUTPUTDIR/class_b_nb.tif";}i:2;i:6911;}i:270;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6911;}i:271;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:85:"Use pkinfo to list out how many pixels are in each class of the training raster map: ";}i:2;i:7052;}i:272;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7138;}i:273;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:45:"pkstat -i $OUTPUTDIR/class_b_nb.tif   --hist ";}i:2;i:7138;}i:274;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:7188;}i:275;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:37:"Support Vector Machine Classification";i:1;i:3;i:2;i:7188;}i:2;i:7188;}i:276;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:7188;}i:277;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7188;}i:278;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:7236;}i:279;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:149:"
Support Vector Machine Classification is a popular supervised classifier that has some nice properties (that we do not have time to describe here). ";}i:2;i:7238;}i:280;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7387;}i:281;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7387;}i:282;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:275:"First we will generate a new ESRI training  shape file that contains the 6 WELD reflective wavelength band values, that are not labelled as cloudy or saturated by WELD, at a random sample (0.01%) of the burned and unburned pixel locations defined in the training raster map: ";}i:2;i:7389;}i:283;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7665;}i:284;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:219:"rm $INSHPDIR/class_b_nb_4svm.*
pkextractimg -i $OUTPUTDIR/Bands_stack.tif -r point -polygon  -s $OUTPUTDIR/class_b_nb.tif -t 0.1 -t 0.1 -c 1 -c 2 -bndnodata 0 -srcnodata 0  -f SQLite -o $INSHPDIR/class_b_nb_4svm.sqlite
";}i:2;i:7665;}i:285;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7665;}i:286;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:66:"We can check the contents of the resulting training shape file as:";}i:2;i:7892;}i:287;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7959;}i:288;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:41:"ogrinfo -al $INSHPDIR/class_b_nb_4svm.sql";}i:2;i:7959;}i:289;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7959;}i:290;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:160:"Now we will classify the 6 WELD reflective wavelength band values, that are not labelled as cloudy or saturated by WELD, using this new training shape file as: ";}i:2;i:8005;}i:291;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8166;}i:292;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:160:"pksvm -m $OUTPUTDIR/mask1-0.tif -msknodata 0 -nodata 0  -i $OUTPUTDIR/Bands_stack.tif -t $INSHPDIR/class_b_nb_4svm.sqlite -o $OUTPUTDIR/classification_svm.tif  ";}i:2;i:8166;}i:293;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8166;}i:294;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:139:"This is a computationally demanding  process (can take 3-12 minutes depending on your laptop) and you can terminate it by pressing ctrl+c. ";}i:2;i:8331;}i:295;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8470;}i:296;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8470;}i:297;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:69:"We have already stored a version of the results called classification";}i:2;i:8472;}i:298;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:1;i:1;s:1:"_";}i:2;i:1;i:3;s:1:"_";}i:2;i:8541;}i:299;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:3;i:1;s:3:"svm";}i:2;i:3;i:3;s:3:"svm";}i:2;i:8542;}i:300;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:4;i:1;s:1:"_";}i:2;i:4;i:3;s:1:"_";}i:2;i:8545;}i:301;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"cp.tif";}i:2;i:8546;}i:302;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8552;}i:303;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8552;}i:304;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:48:"We can visualize the classification results as: ";}i:2;i:8554;}i:305;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8603;}i:306;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:40:"openev $OUTPUTDIR/classification_svm.tif";}i:2;i:8603;}i:307;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:8648;}i:308;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:50:"Combined Segmentation Random Forest Classification";i:1;i:3;i:2;i:8648;}i:2;i:8648;}i:309;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:8648;}i:310;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8648;}i:311;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:8709;}i:312;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:471:"
Some researchers like to segment satellite data into objects with similar spectral values, and then classify each segment into different classes. There are many ways of segmenting satellite data, in this exercise we will apply the K-means NN unsupervised classier to the WELD data to generate segments. We will then classify the segments using the Random Forest supervised classifier (a recent classifier with some nice properties that we do not have time to describe). ";}i:2;i:8711;}i:313;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9182;}i:314;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9182;}i:315;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:9184;}i:316;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:"
We will follow this procedure:";}i:2;i:9186;}i:317;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9217;}i:318;a:3:{i:0;s:10:"listo_open";i:1;a:0:{}i:2;i:9217;}i:319;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:9217;}i:320;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9217;}i:321;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:19:" Segment the image,";}i:2;i:9222;}i:322;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9241;}i:323;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9241;}i:324;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:9241;}i:325;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9241;}i:326;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:43:" Allocate unique ID values to each segment,";}i:2;i:9245;}i:327;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9288;}i:328;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9288;}i:329;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:9288;}i:330;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9288;}i:331;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:" Select ";}i:2;i:9292;}i:332;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:9300;}i:333;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"pure";}i:2;i:9301;}i:334;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:9305;}i:335;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:75:" segments that occur only within burned or unburned class training regions,";}i:2;i:9306;}i:336;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9381;}i:337;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9381;}i:338;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:9381;}i:339;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9381;}i:340;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:50:" Calculate the spectral signature of each segment,";}i:2;i:9385;}i:341;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9435;}i:342;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9435;}i:343;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:9435;}i:344;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9435;}i:345;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:74:" Train the Random Forest classifier using the spectral signatures of each ";}i:2;i:9439;}i:346;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:9513;}i:347;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"pure";}i:2;i:9514;}i:348;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:9518;}i:349;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" segment,";}i:2;i:9519;}i:350;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9528;}i:351;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9528;}i:352;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:9528;}i:353;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9528;}i:354;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:96:" Apply the Random Forest classifier to all segments to generate a table of classified segments, ";}i:2;i:9532;}i:355;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9628;}i:356;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9628;}i:357;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:9628;}i:358;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9628;}i:359;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:37:" Generate a classified raster image. ";}i:2;i:9632;}i:360;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9669;}i:361;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9669;}i:362;a:3:{i:0;s:11:"listo_close";i:1;a:0:{}i:2;i:9669;}i:363;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9669;}i:364;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:9670;}i:365;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:9672;}i:366;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:9673;}i:367;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:18:"Segment the image:";}i:2;i:3;i:3;s:18:"Segment the image:";}i:2;i:9675;}i:368;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:9693;}i:369;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:9695;}i:370;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:9697;}i:371;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:9698;}i:372;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:515:"
We will segment the 6 WELD reflective wavelength band values, that are not labelled as cloudy or saturated by WELD, using the K-means unsuperivised NN classifier. In this example we tell the K-means unsupervised NN classifier to examine 1% of the WELD data and then label the resulting segments for the entire image into one of 12 classes. Note, we select 12 arbitrarily (and set quite low so the following runs quickly, if we used a number >12 there would be more segments but they would take longer to generate).";}i:2;i:9700;}i:373;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:19:"markdowku_linebreak";i:1;a:3:{i:0;s:3:"  
";i:1;i:5;i:2;i:10215;}i:2;i:5;i:3;s:3:"  
";}i:2;i:10215;}i:374;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10218;}i:375;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:442:"gdalbuildvrt -overwrite -separate $OUTPUTDIR/Bands_stack.vrt $INPUTDIR/Band1_TOA_REF.TIF $INPUTDIR/Band2_TOA_REF.TIF  $INPUTDIR/Band3_TOA_REF.TIF  $INPUTDIR/Band4_TOA_REF.TIF  $INPUTDIR/Band5_TOA_REF.TIF  $INPUTDIR/Band7_TOA_REF.TIF 
gdal_translate  -co  COMPRESS=LZW -co ZLEVEL=9  $OUTPUTDIR/Bands_stack.vrt $OUTPUTDIR/Bands_stack.tif
oft-cluster.bash  $OUTPUTDIR/Bands_stack.tif  $OUTPUTDIR/12classes1perc.tif 12  1  $OUTPUTDIR/mask1-0.tif ";}i:2;i:10218;}i:376;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:10218;}i:377;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:60:"Check eventually the results of otbcli_KMeansClassification ";}i:2;i:10669;}i:378;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10729;}i:379;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:10729;}i:380;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:49:"Visualize the resulting segmentation results as: ";}i:2;i:10731;}i:381;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10781;}i:382;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:36:"openev $OUTPUTDIR/12classes1perc.tif";}i:2;i:10781;}i:383;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:10781;}i:384;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:10821;}i:385;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:10823;}i:386;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:10824;}i:387;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:42:"Allocate unique ID values to each segment:";}i:2;i:3;i:3;s:42:"Allocate unique ID values to each segment:";}i:2;i:10826;}i:388;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:10868;}i:389;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:10870;}i:390;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:10872;}i:391;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:10873;}i:392;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:100:"
Each segment is allocated a unique ID number (this process does not use the segment class values): ";}i:2;i:10875;}i:393;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10976;}i:394;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:102:"oft-clump  -um $OUTPUTDIR/mask1-0.tif    $OUTPUTDIR/12classes1perc.tif  $OUTPUTDIR/clumpIDsegments.tif";}i:2;i:10976;}i:395;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:10976;}i:396;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:58:"Visualize the resulting labelled segmentation results as: ";}i:2;i:11083;}i:397;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:11142;}i:398;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:38:"openev  $OUTPUTDIR/clumpIDsegments.tif";}i:2;i:11142;}i:399;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:11142;}i:400;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:11186;}i:401;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:7:"Select ";}i:2;i:3;i:3;s:7:"Select ";}i:2;i:11188;}i:402;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:11195;}i:403;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"pure";}i:2;i:3;i:3;s:4:"pure";}i:2;i:11196;}i:404;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:11200;}i:405;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:10:" segments:";}i:2;i:3;i:3;s:10:" segments:";}i:2;i:11201;}i:406;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:11211;}i:407;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:11213;}i:408;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:11215;}i:409;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:11216;}i:410;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:114:"
We need to be able to select those segments that occur only within the burned or unburned class training regions.";}i:2;i:11218;}i:411;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:11333;}i:412;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:106:"oft-stat $OUTPUTDIR/clumpIDsegments.tif  $OUTPUTDIR/class_b_nb.tif  $OUTPUTDIR/stat_clumpID_class_b_nb.txt";}i:2;i:11333;}i:413;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:11333;}i:414;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:35:"The resulting output text file stat";}i:2;i:11444;}i:415;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:11479;}i:416;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"clumpID";}i:2;i:11481;}i:417;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:11488;}i:418;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"class";}i:2;i:11490;}i:419;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:11495;}i:420;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"b";}i:2;i:11497;}i:421;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:11498;}i:422;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:126:"nb.txt is defined with one row per segment and contains summary statistics of the values in the training raster  (recall class";}i:2;i:11500;}i:423;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:1;i:1;s:1:"_";}i:2;i:1;i:3;s:1:"_";}i:2;i:11626;}i:424;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:3;i:1;s:1:"b";}i:2;i:3;i:3;s:1:"b";}i:2;i:11627;}i:425;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:4;i:1;s:1:"_";}i:2;i:4;i:3;s:1:"_";}i:2;i:11628;}i:426;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:117:"nb.tif has pixels defined as one of three classes: 0 unknown, 1 not-burned, 2 burned).  The columns of text file stat";}i:2;i:11629;}i:427;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:1;i:1;s:1:"_";}i:2;i:1;i:3;s:1:"_";}i:2;i:11746;}i:428;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:3;i:1;s:7:"clumpID";}i:2;i:3;i:3;s:7:"clumpID";}i:2;i:11747;}i:429;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:4;i:1;s:1:"_";}i:2;i:4;i:3;s:1:"_";}i:2;i:11754;}i:430;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"class";}i:2;i:11755;}i:431;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:1;i:1;s:1:"_";}i:2;i:1;i:3;s:1:"_";}i:2;i:11760;}i:432;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:3;i:1;s:1:"b";}i:2;i:3;i:3;s:1:"b";}i:2;i:11761;}i:433;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:4;i:1;s:1:"_";}i:2;i:4;i:3;s:1:"_";}i:2;i:11762;}i:434;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"nb.txt are:";}i:2;i:11763;}i:435;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:11774;}i:436;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:59:"
segment ID, number of pixels in segment, mean of the class";}i:2;i:11776;}i:437;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:11835;}i:438;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"b";}i:2;i:11837;}i:439;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:11838;}i:440;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:60:"nb.tif segment pixel values, standard deviation of the class";}i:2;i:11840;}i:441;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:1;i:1;s:1:"_";}i:2;i:1;i:3;s:1:"_";}i:2;i:11900;}i:442;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:3;i:1;s:1:"b";}i:2;i:3;i:3;s:1:"b";}i:2;i:11901;}i:443;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:4;i:1;s:1:"_";}i:2;i:4;i:3;s:1:"_";}i:2;i:11902;}i:444;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:27:"nb.tif segment pixel values";}i:2;i:11903;}i:445;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:11930;}i:446;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:11932;}i:447;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:11933;}i:448;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:35:"
Examine the first 12 lines of stat";}i:2;i:11935;}i:449;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:11970;}i:450;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"clumpID";}i:2;i:11972;}i:451;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:11979;}i:452;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"class";}i:2;i:11981;}i:453;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:11986;}i:454;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"b_nb.txt as:";}i:2;i:11988;}i:455;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:12001;}i:456;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:47:"head -12 $OUTPUTDIR/stat_clumpID_class_b_nb.txt";}i:2;i:12001;}i:457;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:12001;}i:458;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:19:"We will now select ";}i:2;i:12053;}i:459;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:12072;}i:460;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"pure";}i:2;i:12073;}i:461;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:12077;}i:462;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:107:" segments that occur only within burned or unburned class training regions defined if the mean of the class";}i:2;i:12078;}i:463;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:12185;}i:464;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"b";}i:2;i:12187;}i:465;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:12188;}i:466;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:129:"nb.tif segment pixel values is equal to 1 or to 2 respectively. Moreover, in order to have a robust training we will select only ";}i:2;i:12190;}i:467;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:12319;}i:468;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"pure";}i:2;i:12320;}i:469;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:12324;}i:470;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:42:" segments that are defined by >= 4 pixels.";}i:2;i:12325;}i:471;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:12368;}i:472;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:212:"awk '{ if ($2 >= 4) { if($3==1 || $3==2  ) { print $1, int($3) }}}'  $OUTPUTDIR/stat_clumpID_class_b_nb.txt  > $OUTPUTDIR/pure_clumpID.txt
sort -k 1,1 $OUTPUTDIR/pure_clumpID.txt   > $OUTPUTDIR/pure_clumpID_s.txt";}i:2;i:12368;}i:473;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:12368;}i:474;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:12587;}i:475;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:12589;}i:476;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:12590;}i:477;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:49:"Calculate the spectral signature of each segment:";}i:2;i:3;i:3;s:49:"Calculate the spectral signature of each segment:";}i:2;i:12592;}i:478;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:12641;}i:479;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:12643;}i:480;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:12645;}i:481;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:12646;}i:482;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:120:"
We will compute the mean reflectance of the pixels in each segment for each of the 6 WELD reflective wavelength bands. ";}i:2;i:12648;}i:483;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:12768;}i:484;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:12768;}i:485;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:69:"We will do this for all the segments including the non-pure ones as: ";}i:2;i:12770;}i:486;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:12840;}i:487;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:107:"oft-stat $OUTPUTDIR/clumpIDsegments.tif  $OUTPUTDIR/Bands_stack.tif  $OUTPUTDIR/clumpID_bandAVG_bandSTD.txt";}i:2;i:12840;}i:488;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:12840;}i:489;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:38:"The resulting output text file clumpID";}i:2;i:12952;}i:490;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:12990;}i:491;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"bandAVG";}i:2;i:12992;}i:492;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:12999;}i:493;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:159:"bandSTD.txt is defined with one row per segment and contains summary statistics of the the 6 WELD reflective wavelength bands. The columns of text file clumpID";}i:2;i:13001;}i:494;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:13160;}i:495;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"bandAVG";}i:2;i:13162;}i:496;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:13169;}i:497;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:"bandSTD.txt are:
";}i:2;i:13171;}i:498;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:13188;}i:499;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:222:"
segment ID, number of pixels in segment, mean of the segment pixel values for each of the 6 WELD bands (6 columns of these), standard deviation of the segment pixel values for each of the 6 WELD bands (6 columns of these)";}i:2;i:13190;}i:500;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:13412;}i:501;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:13414;}i:502;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:13414;}i:503;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:"Examine clumpID";}i:2;i:13418;}i:504;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:1;i:1;s:1:"_";}i:2;i:1;i:3;s:1:"_";}i:2;i:13433;}i:505;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:3;i:1;s:7:"bandAVG";}i:2;i:3;i:3;s:7:"bandAVG";}i:2;i:13434;}i:506;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:4;i:1;s:1:"_";}i:2;i:4;i:3;s:1:"_";}i:2;i:13441;}i:507;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:"bandSTD.txt as:";}i:2;i:13442;}i:508;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:13458;}i:509;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:43:"head $OUTPUTDIR/clumpID_bandAVG_bandSTD.txt";}i:2;i:13458;}i:510;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:13458;}i:511;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:140:"From this file we need only the segment ID and the mean values for each of the 6 WELD bands. We can strip this information out using AWK as:";}i:2;i:13506;}i:512;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:13647;}i:513;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:187:"awk '{ print $1, $3,$4,$5,$6,$7,$8 }' $OUTPUTDIR/clumpID_bandAVG_bandSTD.txt > $OUTPUTDIR/clumpID_bandAVG.txt
sort -k 1,1 $OUTPUTDIR/clumpID_bandAVG.txt > $OUTPUTDIR/clumpID_bandAVG_s.txt";}i:2;i:13647;}i:514;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:13647;}i:515;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:42:"We now need to combine the two tables pure";}i:2;i:13841;}i:516;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:13883;}i:517;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"clumpID";}i:2;i:13885;}i:518;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:13892;}i:519;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:"s.txt and  clumpID";}i:2;i:13894;}i:520;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:13912;}i:521;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"bandAVG";}i:2;i:13914;}i:522;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:13921;}i:523;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:47:"s.txt outputting  only the rows describing the ";}i:2;i:13923;}i:524;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:13970;}i:525;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"pure";}i:2;i:13971;}i:526;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:13975;}i:527;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:129:" segments. The easiest way to do this is with the join command matching the first columns (segment ID) in the first (labelled as ";}i:2;i:13976;}i:528;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:14105;}i:529;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"-1";}i:2;i:14106;}i:530;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:14108;}i:531;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:26:") and second (labelled as ";}i:2;i:14109;}i:532;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:14135;}i:533;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"-2";}i:2;i:14136;}i:534;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:14138;}i:535;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:") files:";}i:2;i:14139;}i:536;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:19:"markdowku_linebreak";i:1;a:3:{i:0;s:3:"  
";i:1;i:5;i:2;i:14147;}i:2;i:5;i:3;s:3:"  
";}i:2;i:14147;}i:537;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:14150;}i:538;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:120:"join -1 1 -2 1  $OUTPUTDIR/pure_clumpID_s.txt   $OUTPUTDIR/clumpID_bandAVG_s.txt > $OUTPUTDIR/pure_clumpID_bandAVG_s.txt";}i:2;i:14150;}i:539;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:14150;}i:540;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"Examine pure";}i:2;i:14275;}i:541;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:14287;}i:542;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"clumpID";}i:2;i:14289;}i:543;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:14296;}i:544;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"bandAVG";}i:2;i:14298;}i:545;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:14305;}i:546;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"s.txt as:";}i:2;i:14307;}i:547;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:14317;}i:548;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:43:"head $OUTPUTDIR/pure_clumpID_bandAVG_s.txt
";}i:2;i:14317;}i:549;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:14317;}i:550;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:68:"It is a good idea to attach column names to the top of this file as:";}i:2;i:14366;}i:551;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:14435;}i:552;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:180:"echo "ID Class MeanB1 MeanB2 MeanB3 MeanB4 MeanB5 MeanB7" > $OUTPUTDIR/pure_clumpID_bandAVG_h.txt
cat $OUTPUTDIR/pure_clumpID_bandAVG_s.txt >> $OUTPUTDIR/pure_clumpID_bandAVG_h.txt";}i:2;i:14435;}i:553;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:14435;}i:554;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:47:"Examine the resulting column labelled file pure";}i:2;i:14622;}i:555;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:1;i:1;s:1:"_";}i:2;i:1;i:3;s:1:"_";}i:2;i:14669;}i:556;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:3;i:1;s:7:"clumpID";}i:2;i:3;i:3;s:7:"clumpID";}i:2;i:14670;}i:557;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:4;i:1;s:1:"_";}i:2;i:4;i:3;s:1:"_";}i:2;i:14677;}i:558;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:"bandAVG_h.txt as:";}i:2;i:14678;}i:559;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:14696;}i:560;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:42:"head $OUTPUTDIR/pure_clumpID_bandAVG_h.txt";}i:2;i:14696;}i:561;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:14696;}i:562;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:14744;}i:563;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:23:"Train the Random Forest";}i:2;i:3;i:3;s:23:"Train the Random Forest";}i:2;i:14746;}i:564;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:14769;}i:565;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:14771;}i:566;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:14773;}i:567;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:14774;}i:568;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:87:"
We will train the Random Forest classifier using the mean spectral signatures of each ";}i:2;i:14776;}i:569;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:14863;}i:570;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"pure";}i:2;i:14864;}i:571;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:14868;}i:572;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:56:" segment using the R software package. 
To enter R type:";}i:2;i:14869;}i:573;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:14926;}i:574;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:1:"R";}i:2;i:14926;}i:575;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:14926;}i:576;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:125:"If you enter R correctly, you will see several lines that describe the version of R you have and how to search for help in R.";}i:2;i:14932;}i:577;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:15057;}i:578;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:15059;}i:579;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:15060;}i:580;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:52:"
First we must load the R Random Forest library as: ";}i:2;i:15062;}i:581;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:15115;}i:582;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:21:"library(randomForest)";}i:2;i:15115;}i:583;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:15115;}i:584;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:36:"We will then load the text file pure";}i:2;i:15141;}i:585;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:15177;}i:586;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"clumpID";}i:2;i:15179;}i:587;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:15186;}i:588;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"bandAVG";}i:2;i:15188;}i:589;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:15195;}i:590;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:"h.txt into R as:";}i:2;i:15197;}i:591;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:15214;}i:592;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:149:"training_bandAVG <- read.table('/home/user/ost4sem/exercise/weld_data_processing/classification/pure_clumpID_bandAVG_h.txt', sep=" " , header = TRUE)";}i:2;i:15214;}i:593;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:15214;}i:594;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:61:"To examine the first row of what you have loaded into R type:";}i:2;i:15368;}i:595;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:15430;}i:596;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:21:"training_bandAVG[1, ]";}i:2;i:15430;}i:597;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:15430;}i:598;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:67:"To examine the first five rows of what you have loaded into R type:";}i:2;i:15456;}i:599;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:15524;}i:600;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:23:"training_bandAVG[1:5, ]";}i:2;i:15524;}i:601;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:15524;}i:602;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:89:"We need to first define the response variable (burned or unburned) and call is Class as: ";}i:2;i:15552;}i:603;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:15641;}i:604;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:64:"
training_bandAVG$Class  <-  as.factor (training_bandAVG$Class)
";i:1;N;i:2;N;}i:2;i:15648;}i:605;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:15648;}i:606;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:205:"We will now develop a random forest training set using the data. The parameters ntree and mytry control the complexity of the random forest (and are set here so that it runs quickly in about 2-5 minutes): ";}i:2;i:15722;}i:607;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:15928;}i:608;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:113:"fitRF <- randomForest(Class~MeanB1+MeanB2+MeanB3+MeanB4+MeanB5+MeanB7, ntree=100, mytry=4, data=training_bandAVG)";}i:2;i:15928;}i:609;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:15928;}i:610;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:16046;}i:611;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:16049;}i:612;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:16050;}i:613;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:50:"Apply the Random Forest classifier to all segments";}i:2;i:3;i:3;s:50:"Apply the Random Forest classifier to all segments";}i:2;i:16052;}i:614;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:16102;}i:615;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:16104;}i:616;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:16106;}i:617;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:16107;}i:618;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:109:"
We apply the Random Forest classifier to all the segments to generate a table of classified segment values.
";}i:2;i:16109;}i:619;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:16218;}i:620;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:41:"
First we must load the text file segment";}i:2;i:16220;}i:621;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:1;i:1;s:1:"_";}i:2;i:1;i:3;s:1:"_";}i:2;i:16261;}i:622;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:3;i:1;s:7:"bandAVG";}i:2;i:3;i:3;s:7:"bandAVG";}i:2;i:16262;}i:623;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:4;i:1;s:1:"_";}i:2;i:4;i:3;s:1:"_";}i:2;i:16269;}i:624;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"s.txt into R:";}i:2;i:16270;}i:625;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:16284;}i:626;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:128:"clumpID_bandAVG <- read.table('/home/user/ost4sem/exercise/weld_data_processing/classification/clumpID_bandAVG_s.txt', sep=" ") ";}i:2;i:16284;}i:627;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:16284;}i:628;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:62:"Examine the first five rows of what you have loaded into R as:";}i:2;i:16417;}i:629;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:16480;}i:630;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:22:"clumpID_bandAVG[1:5, ]";}i:2;i:16480;}i:631;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:16480;}i:632;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:41:"We must label the column names of clumpID";}i:2;i:16507;}i:633;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:1;i:1;s:1:"_";}i:2;i:1;i:3;s:1:"_";}i:2;i:16548;}i:634;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:3;i:1;s:35:"bandAVG in the same way as training";}i:2;i:3;i:3;s:35:"bandAVG in the same way as training";}i:2;i:16549;}i:635;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:4;i:1;s:1:"_";}i:2;i:4;i:3;s:1:"_";}i:2;i:16584;}i:636;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:25:"bandAVG, to do this type:";}i:2;i:16585;}i:637;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:16611;}i:638;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:227:"names(clumpID_bandAVG)[2] <- "MeanB1"
names(clumpID_bandAVG)[3] <- "MeanB2"
names(clumpID_bandAVG)[4] <- "MeanB3"
names(clumpID_bandAVG)[5] <- "MeanB4"
names(clumpID_bandAVG)[6] <- "MeanB5"
names(clumpID_bandAVG)[7] <- "MeanB7"";}i:2;i:16611;}i:639;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:16611;}i:640;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:71:"Re-examine the first five rows (the columns should now be labelled) as:";}i:2;i:16853;}i:641;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:16925;}i:642;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:23:"clumpID_bandAVG[1:5, ]
";}i:2;i:16925;}i:643;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:16925;}i:644;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:102:"Now we will predict for each segment what class it is using the random forest (this takes < 1 minute):";}i:2;i:16954;}i:645;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:17057;}i:646;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:54:"predict_class <- predict ( fitRF , clumpID_bandAVG ) 
";}i:2;i:17057;}i:647;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:17057;}i:648;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:107:"Now we need to save the resulting table of classified segment values back out of R to the output directory:";}i:2;i:17117;}i:649;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:17224;}i:650;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:167:"
write.table (file = '/home/user/ost4sem/exercise/weld_data_processing/classification/predict_class.txt',  predict_class   , sep=" " ,   col.names=FALSE, quote=FALSE) ";}i:2;i:17224;}i:651;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:17224;}i:652;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:70:"Now close R (do not save the workspace image when prompted, just type ";}i:2;i:17398;}i:653;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:17468;}i:654;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"n";}i:2;i:17469;}i:655;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:17470;}i:656;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"):";}i:2;i:17471;}i:657;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:17474;}i:658;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:4:"q()
";}i:2;i:17474;}i:659;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:17474;}i:660;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:70:"Be sure that you exit correctly from R and run the following commands.";}i:2;i:17484;}i:661;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:17554;}i:662;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:17556;}i:663;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:17557;}i:664;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:17559;}i:665;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:17560;}i:666;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:34:"Generate a classified raster image";}i:2;i:3;i:3;s:34:"Generate a classified raster image";}i:2;i:17562;}i:667;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:17596;}i:668;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:17598;}i:669;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:17600;}i:670;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:17601;}i:671;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:42:"
We need to combine the results in predict";}i:2;i:17603;}i:672;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:1;i:1;s:1:"_";}i:2;i:1;i:3;s:1:"_";}i:2;i:17645;}i:673;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:3;i:1;s:22:"class.txt with clumpID";}i:2;i:3;i:3;s:22:"class.txt with clumpID";}i:2;i:17646;}i:674;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:4;i:1;s:1:"_";}i:2;i:4;i:3;s:1:"_";}i:2;i:17668;}i:675;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:138:"bandAVG_s.txt, these files have the same number of corresponding rows. Please have a look at the first 10 lines of each of these files as:";}i:2;i:17669;}i:676;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:17808;}i:677;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:67:"head $OUTPUTDIR/clumpID_bandAVG_s.txt $OUTPUTDIR/predict_class.txt ";}i:2;i:17808;}i:678;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:17808;}i:679;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:27:"The first column of clumpID";}i:2;i:17880;}i:680;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:17907;}i:681;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"bandAVG";}i:2;i:17909;}i:682;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:17916;}i:683;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:88:"s.txt is the segment ID, the second column of predict_class.txt is the predicted class. ";}i:2;i:17918;}i:684;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:18006;}i:685;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:18006;}i:686;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:101:"We really only want the segment ID and the predicted class, and we can combine them into one file as:";}i:2;i:18008;}i:687;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:18110;}i:688;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:278:"awk '{ print $2  }'   $OUTPUTDIR/predict_class.txt   >    $OUTPUTDIR/predict_class_2.txt
awk '{ print $1  }'   $OUTPUTDIR/clumpID_bandAVG_s.txt    >    $OUTPUTDIR/clumpID_s.txt
paste -d " " $OUTPUTDIR/clumpID_s.txt  $OUTPUTDIR/predict_class_2.txt > $OUTPUTDIR/clumpID_class.txt ";}i:2;i:18110;}i:689;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:18110;}i:690;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:"Examine clumpID";}i:2;i:18397;}i:691;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:28:"markdowku_escapespecialchars";i:1;a:2:{i:0;i:5;i:1;s:2:"\_";}i:2;i:5;i:3;s:2:"\_";}i:2;i:18412;}i:692;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:"class.txt as: ";}i:2;i:18414;}i:693;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:18429;}i:694;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:33:"head $OUTPUTDIR/clumpID_class.txt";}i:2;i:18429;}i:695;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:18429;}i:696;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:185:"We now use this file to classify the labelled segmentation image clumpIDsegments.tif and we use the binary WELD bad data mask mask1-0.tif to not classify cloudy or saturated pixels as: ";}i:2;i:18467;}i:697;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:18653;}i:698;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:111:"oft-reclass  -um  $OUTPUTDIR/mask1-0.tif  -oi  $OUTPUTDIR/classification_rf.tif  $OUTPUTDIR/clumpIDsegments.tif";}i:2;i:18653;}i:699;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:18653;}i:700;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:104:"The program oft-reclass will prompt for the following parameters, please just enter the inputs as below:";}i:2;i:18769;}i:701;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:19:"markdowku_linebreak";i:1;a:3:{i:0;s:4:"   
";i:1;i:5;i:2;i:18873;}i:2;i:5;i:3;s:4:"   
";}i:2;i:18873;}i:702;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:45:"
-Input reclass file name?  clumpID_class.txt";}i:2;i:18877;}i:703;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:18922;}i:704;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:40:"
-Nbr of out bands per input channel? 1 ";}i:2;i:18924;}i:705;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:18964;}i:706;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:25:"
-Col of input value?  1 ";}i:2;i:18966;}i:707;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:18991;}i:708;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:26:"
-Col of output value?  2 ";}i:2;i:18993;}i:709;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:19019;}i:710;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:"
-NODATA value?  0";}i:2;i:19021;}i:711;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:19039;}i:712;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:19041;}i:713;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:19041;}i:714;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:46:"We can visualize the classification result as:";}i:2;i:19044;}i:715;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:19091;}i:716;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:40:"openev $OUTPUTDIR/classification_rf.tif ";}i:2;i:19091;}i:717;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:19091;}i:718;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:19136;}i:719;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:64:"
For you reference the following screenshots show classification";}i:2;i:19138;}i:720;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:1;i:1;s:1:"_";}i:2;i:1;i:3;s:1:"_";}i:2;i:19202;}i:721;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:3;i:1;s:33:"svm.tif (left) and classification";}i:2;i:3;i:3;s:33:"svm.tif (left) and classification";}i:2;i:19203;}i:722;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:4;i:1;s:1:"_";}i:2;i:4;i:3;s:1:"_";}i:2;i:19236;}i:723;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:"rf.tif (right)";}i:2;i:19237;}i:724;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:19251;}i:725;a:3:{i:0;s:10:"table_open";i:1;a:3:{i:0;i:2;i:1;i:1;i:2;i:19254;}i:2;i:19253;}i:726;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:19253;}i:727;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:19253;}i:728;a:3:{i:0;s:13:"internalmedia";i:1;a:7:{i:0;s:13:":wiki:svm.png";i:1;N;i:2;N;i:3;s:3:"380";i:4;N;i:5;s:5:"cache";i:6;s:7:"details";}i:2;i:19255;}i:729;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:19276;}i:730;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:19276;}i:731;a:3:{i:0;s:13:"internalmedia";i:1;a:7:{i:0;s:16:":wiki:random.png";i:1;N;i:2;N;i:3;s:3:"380";i:4;N;i:5;s:5:"cache";i:6;s:7:"details";}i:2;i:19277;}i:732;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:19301;}i:733;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:19302;}i:734;a:3:{i:0;s:11:"table_close";i:1;a:1:{i:0;i:19302;}i:2;i:19302;}i:735;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:19302;}i:736;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:19304;}i:737;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:19306;}i:738;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:19307;}i:739;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:19309;}i:740;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:19309;}i:741;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:19309;}i:742;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:19309;}i:743;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:19313;}i:744;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:11:"weld_visual";i:1;s:17:" WELD TOA vs. SR ";}i:2;i:19314;}i:745;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:19348;}i:746;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:19348;}i:747;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:19348;}i:748;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:19348;}i:749;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:19352;}i:750;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:16:"weld_visual_fire";i:1;s:23:" WELD visual firer TOA ";}i:2;i:19353;}i:751;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:19398;}i:752;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:19398;}i:753;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:19398;}i:754;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:19404;}i:755;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:19404;}}