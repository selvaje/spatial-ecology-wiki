a:84:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:8:"pkmosaic";i:1;i:1;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:3;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1;}i:4;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"NAME";}i:2;i:24;}i:5;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:28;}i:6;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:44:" pkmosaic - mosaic and composit raster files";}i:2;i:28;}i:7;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:28;}i:8;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"SYNOPSIS";}i:2;i:77;}i:9;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:91;}i:10;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:41:"
   pkmosaic -i input -o output [OPTION]
";i:1;s:4:"bash";i:2;N;}i:2;i:91;}i:11;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:91;}i:12;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"DESCRIPTION";}i:2;i:154;}i:13;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:165;}i:14;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:81:" Create mosaics and composit raster files using different compositing rules
     ";}i:2;i:165;}i:15;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:165;}i:16;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"OPTIONS";}i:2;i:252;}i:17;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:265;}i:18;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:3490:"
   -i     --input                Input image file(s). If input contains multiple images, a multi-band output is created (default: <empty string>)
   -o     --output               Output image file (default: <empty string>)
   -p     --projection           projection in EPSG format (leave blank to copy from input file, use EPSG:3035 to use European projection and to force to European grid (default: <empty string>)
   -e     --extent               get boundary from extent from polygons in vector file (default: <empty string>)
   -ulx   --ulx                  Upper left x value bounding box (in geocoordinates if georef is true) (default: 0)
   -uly   --uly                  Upper left y value bounding box (in geocoordinates if georef is true) (default: 0)
   -lrx   --lrx                  Lower right x value bounding box (in geocoordinates if georef is true) (default: 0)
   -lry   --lry                  Lower right y value bounding box (in geocoordinates if georef is true) (default: 0)
   -b     --band                 band index to crop (-1: crop all bands) (default: -1)
   -ot    --otype                Data type for output image ({Byte/Int16/UInt16/UInt32/Int32/Float32/Float64/CInt16/CInt32/CFloat32/CFloat64}). Empty string: inherit type from input image (default: <empty string>)
   -of    --oformat              Output image format (see also gdal_translate). Empty string: inherit from input image (default: <empty string>)
   -ct    --ct                   color table (file with 5 columns: id R G B ALFA (0: transparent, 255: solid) (default: <empty string>)
   -dx    --dx                   Output resolution in x (in meter) (0.0: keep original resolution) (default: 0)
   -dy    --dy                   Output resolution in y (in meter) (0.0: keep original resolution) (default: 0)
   -co    --co                   options: NAME=VALUE [-co COMPRESS=LZW] [-co INTERLEAVE=BAND] (default: INTERLEAVE=BAND)
   -f     --flag                 Flag value to put in image if out of bounds. (default: 0)
   -r     --resample             Resampling method (0: nearest neighbour, 1: bi-linear interpolation). (default: 0)
          --description          Set image description (default: <empty string>)
   -m     --mrule                Mosaic rule for mosaic (0: overwrite, 1: max ndvi, 2: max Band, 3: min Band, 4: valid Band, 5: mean value, 6: max voting (only for byte images), 7: median, 8: (weighted) sum (default: 0)
   -rb    --rband                band index used for the rule (for ndvi, use --ruleBand=redBand --ruleBand=nirBand (default: 0)
   -vb    --validBand            valid band index(es) (default: 0)
   -t     --invalid              invalid value for valid band (default: 0)
   -min   --min                  flag values smaller or equal to this value as invalid. (default: -1e+08)
   -max   --max                  flag values larger or equal to this value as invalid. (default: 1e+08)
   -file   --file                 write number of observations for each pixels as additional layer in mosaic (default: false)
   -w     --weight               Weights (type: short) for the mosaic, use one weight for each input file in same order as input files are provided). Use value 1 for equal weights. (default: 1)
   -c     --class                classes for multi-band output image: each band represents the number of observations for one specific class. Use value 0 for no multi-band output image). (default: 0)
   -v     --verbose              verbose (default: false)
";i:1;s:4:"bash";i:2;N;}i:2;i:265;}i:19;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3770;}i:20;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:8:"Examples";i:1;i:1;i:2;i:3770;}i:2;i:3770;}i:21;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:3770;}i:22;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:967:"
pkmosaic -i input1.tif -i input2.tif -o output.tif # create mosaic from two input images. If images overlap, keep only last image (default rule)

pkmosaic -i input1.tif -i input2.tif -o output.tif -m 4 --validBand 1 -t 255 -f 0 # create mosaic from two input images. Values of 255 in band 1 (starting from 0) are masked as invalid (rule=4). Typical use when multi-band image contains cloud mask

pkmosaic -i input1.tif -i input2.tif -o output.tif -m 1 --rband=0 --rband=1 -t 255 -f 0 # create maximum NDVI (normalized difference vegetation index) composit. Values of 255 in band 0 (default) are masked as invalid and flagged as 0 if no other valid coverage. Typical use for (e.g., MODIS) images where red and near infrared spectral bands are stored in bands 0 and 1 respectively

pkmosaic -i input1.tif -i input2.tif -i input3.tif -o output.tif -m 5 -w 0.75 -w 1.5 -w 0.75 # create composite image using weighted mean: output=(3/4*input1+6/4*input2+3/4*input2)/3.0 
";i:1;s:4:"bash";i:2;N;}i:2;i:3798;}i:23;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4779;}i:24;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:17:"Advanced examples";i:1;i:2;i:2;i:4779;}i:2;i:4779;}i:25;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:4779;}i:26;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:308:"
pkmosaic -i large.tif $(for IMAGE in *.tif;do pkinfo -i $IMAGE --cover $(pkinfo -i coverage.tif -bb);done) -m 4 -min 0 -o output.tif # create composit of all images found in current directory that cover (part of) coverage.tif. Values smaller or equal to 0 are invalid and flagged as 0 (default flag value) 
";i:1;s:4:"bash";i:2;N;}i:2;i:4814;}i:27;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:5136;}i:28;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:26:"Frequently Asked Questions";i:1;i:2;i:2;i:5136;}i:2;i:5136;}i:29;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:5136;}i:30;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5136;}i:31;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:"Q1: How do I use the flags -t (";}i:2;i:5175;}i:32;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:5206;}i:33;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:"invalid), -min (";}i:2;i:5208;}i:34;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:5224;}i:35;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:"min) and -max (";}i:2;i:5226;}i:36;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:5241;}i:37;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"max)?";}i:2;i:5243;}i:38;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5248;}i:39;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5248;}i:40;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:64:"Answer: For individual invalid value(s) in input image, use -t (";}i:2;i:5250;}i:41;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:5314;}i:42;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"invalid)";}i:2;i:5316;}i:43;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5324;}i:44;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5324;}i:45;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:59:"Usage:
use unique value for each invalid bands set in -vb (";}i:2;i:5326;}i:46;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:5385;}i:47;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:75:"validBand) or 
use a single value that will be applied to all invalid bands";}i:2;i:5387;}i:48;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5462;}i:49;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5462;}i:50;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"Example:";}i:2;i:5464;}i:51;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5478;}i:52;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:76:"
pkmosaic -i input1.tif -i input2.tif -o output.tif -t 0 -t 255 -vb 0 -vb 1
";i:1;s:4:"bash";i:2;N;}i:2;i:5478;}i:53;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5478;}i:54;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:71:"will consider 0 in band 0 and 255 in band 1 of input images as no value";}i:2;i:5568;}i:55;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5645;}i:56;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:69:"
pkmosaic -i input1.tif -i input2.tif -o output.tif -t 0 -vb 0 -vb 1
";i:1;s:4:"bash";i:2;N;}i:2;i:5645;}i:57;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5645;}i:58;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:65:"will consider 0 in both bands 0 and 1 of input images as no value";}i:2;i:5728;}i:59;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5793;}i:60;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5793;}i:61;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:58:"For range(s) of invalid values in input images: use -min (";}i:2;i:5795;}i:62;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:5853;}i:63;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:"min) and -max (";}i:2;i:5855;}i:64;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:5870;}i:65;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:68:"max)
Usage:
use unique range set for each invalid bands set in -vb (";}i:2;i:5872;}i:66;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:5940;}i:67;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"validBand)";}i:2;i:5942;}i:68;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5952;}i:69;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5952;}i:70;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"Example:";}i:2;i:5954;}i:71;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5968;}i:72;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:94:"
pkmosaic -i input1.tif -i input2.tif -o output.tif -min 0 -max 200 -min 0 -max 2 -vb 0 -vb 1
";i:1;s:4:"bash";i:2;N;}i:2;i:5968;}i:73;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5968;}i:74;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:183:"will consider all negative values in band 0 and 1 of input images as invalid. Values larger or equal to 200 in band 0 will be invalid, as well as values larger or equal to 2 in band 1";}i:2;i:6076;}i:75;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6259;}i:76;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6259;}i:77;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:155:"Q2: If I take the mean value as composit rule for multi-band input images, will the output image contain the mean value of overlapping images in each band?";}i:2;i:6262;}i:78;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6417;}i:79;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6417;}i:80;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"Answer: Yes";}i:2;i:6419;}i:81;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6430;}i:82;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:6430;}i:83;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:6430;}}