
<h1 class="sectionedit1" id="hands-on_grassfirst_steps">Hands-on GRASS: First steps</h1>
<div class="level1">

<p>
The object of this page is to start using Grass and to get familiar with some general GIS operations.
We are going to use a command line approach. This is to enable carrying out stand-alone processes in the future, and understand step by step each function and the options per function which are available.
Let´s start using grass.<br/>

<br/>

<a href="http://www.spatial-ecology.net/ost4sem/exercise/basic_adv_grass/basic_grass.sh" class="urlextern" target="blanc" title="http://www.spatial-ecology.net/ost4sem/exercise/basic_adv_grass/basic_grass.sh" rel="nofollow noopener">download the script</a> or VM@: ~/ost4sem/exercise/basic_adv_grass/basic_grass.sh
<br/>

</p>

</div>
<!-- EDIT1 SECTION "Hands-on GRASS: First steps" [1-548] -->
<h3 class="sectionedit2" id="starting_grass">Starting Grass</h3>
<div class="level3">

<p>
Every Grass project has a predefined data structure<br/>

</p>
<ul>
<li class="level1"><div class="li">GISDBASE - Grass data are stored in a directory referred to as a DATABASE  “GISDBASE”. This directory has to be created with mkdir or a file manager, before starting to work with GRASS. Within this DATABASE, the projects are organized by project areas stored in subdirectories called LOCATIONs.
</div>
</li>
<li class="level1"><div class="li">LOCATION - A Location is defined by its coordinate system, map projection and geographical boundaries. The subdirectories and files defining a LOCATION are created automatically when GRASS is started for the first time with a new LOCATION.
</div>
</li>
<li class="level1"><div class="li">MAPSET - Locations can have many MAPSETs. Each MAPSET is a LOCATION&#039;s subdirectory. A new MAPSET can be added at GRASS startup. 
<br/>

<div class="noteimportant">
A common problem of basic users is not really using grass but starting a grass section. The main reason is due to the grass data structure and the way a grass section has to be set up before starting! 

</div>
<p>
<br/>

To remove a MAPSET, remove it&#039;s directory using your file manager or by
</p>

<p>
   rm -rf /path/./mapset<em>to</em>delete
The wxGUI graphical user interface provides options to rename/remove LOCATIONs and MAPSETs. 
</p>

<p>
There are several ways to use and open Grass. The simplest way is to open a terminal and type:
   grass72 -gui
</p>
</div>
</li>
</ul>

<p>
A second option is to use the Python <abbr title="Graphical User Interface">GUI</abbr> by typing in the terminal:
</p>
<pre class="code">grass72 -wxpython</pre>

<p>
the Graphical User Interface <abbr title="Graphical User Interface">GUI</abbr> will ask you to define the GISDBASE, LOCATION and MAPSET to use. If you want you can 
select the <em>Location wizard</em> to create a new location with newest projection parameters or the <em>Create mapset</em> button to create a new mapset inside a pre-existing location.<br/>

</p>

<p>
To enter grass in command line:
</p>
<pre class="code"> grass72 -text ~/ost4sem/grassdb/europe/PERMANENT</pre>

<p>
Using the above command line we have already entered into the Grass environment with the GISDBASE, LOCATION and MAPSET defined by the ~/ost4sem/grassdb/europe/PCEM path
</p>
<div class="notetip">Once you are running Grass through the bash shell terminal you can always start the graphical user interface with:<pre class="code"> g.gui wxpython &amp;</pre>

</div>
</div>
<!-- EDIT2 SECTION "Starting Grass" [549-2660] -->
<h2 class="sectionedit3" id="grass_command_structure">GRASS COMMAND STRUCTURE</h2>
<div class="level2">

<p>
<br/>

</p>
<div class="table sectionedit4"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0">prefix </th><th class="col1 leftalign"> function    </th><th class="col2 leftalign"> class type of command          </th><th class="col3 leftalign"> example                               </th>
	</tr>
	</thead>
	<tr class="row1">
		<td class="col0 leftalign">d.*    </td><td class="col1 centeralign">   display   </td><td class="col2 centeralign">    graphical output          </td><td class="col3 leftalign"> d.rast: views raster map                </td>
	</tr>
	<tr class="row2">
		<td class="col0 leftalign">       </td><td class="col1 leftalign">             </td><td class="col2 leftalign">                              </td><td class="col3 leftalign"> d.vect: views vector map                </td>
	</tr>
	<tr class="row3">
		<td class="col0 leftalign">db.*   </td><td class="col1 centeralign">  database   </td><td class="col2 leftalign"> database management          </td><td class="col3 leftalign"> db.select: selects value(s) from table  </td>
	</tr>
	<tr class="row4">
		<td class="col0 leftalign">g.*    </td><td class="col1 centeralign">  general    </td><td class="col2 leftalign"> general file operations      </td><td class="col3 leftalign"> g.rename: renames map                   </td>
	</tr>
	<tr class="row5">
		<td class="col0 leftalign">i.*    </td><td class="col1 centeralign">  imagery    </td><td class="col2 leftalign"> image processing             </td><td class="col3 leftalign"> i.smap: image classifier                </td>
	</tr>
	<tr class="row6">
		<td class="col0 leftalign">ps.*   </td><td class="col1 rightalign">  postscript </td><td class="col2 leftalign"> map creation format          </td><td class="col3 leftalign"> ps.map: map creation in Postscript      </td>
	</tr>
	<tr class="row7">
		<td class="col0 leftalign" rowspan="2">r.*    </td><td class="col1 leftalign" rowspan="2"> raster      </td><td class="col2 leftalign" rowspan="2"> raster data processing       </td><td class="col3"> r.buffer: buffer around raster features </td>
	</tr>
	<tr class="row8">
		<td class="col0 leftalign"> r.mapcalc: map algebra                  </td>
	</tr>
	<tr class="row9">
		<td class="col0 leftalign">r3.*   </td><td class="col1 leftalign"> voxel       </td><td class="col2"> raster voxel data processing </td><td class="col3 leftalign"> r3.mapcalc: volume map algebra          </td>
	</tr>
	<tr class="row10">
		<td class="col0 leftalign">v.*    </td><td class="col1 leftalign"> vector      </td><td class="col2 leftalign"> vector data processing       </td><td class="col3 leftalign"> v.overlay: vector map intersections     </td>
	</tr>
</table></div>
<!-- EDIT4 TABLE [2701-3767] -->
<p>
<br/>

<br/>

</p>
<div class="notetip">For detailed instructions on grass command syntax and use, go to the <a href="http://grass.osgeo.org/gdp/html_grass70/index.html" class="urlextern" target="blanc" title="http://grass.osgeo.org/gdp/html_grass70/index.html" rel="nofollow noopener">GRASSonline manual</a> or type <strong>man</strong> and  function name. As an example <pre class="code">man r.info</pre>

</div>
<p>
<br/>

</p>

</div>
<!-- EDIT3 SECTION "GRASS COMMAND STRUCTURE" [2661-4002] -->
<h3 class="sectionedit5" id="grass_working_environment">Grass working environment</h3>
<div class="level3">

<p>
The <strong>g.gisenv</strong> command informs you of your current grass environment settings
</p>
<pre class="code"> g.gisenv</pre>

<p>
If you started grass correctly you should visualize the following lines on your terminal 
</p>
<pre class="code">GISDBASE=/home/user/ost4sem/grassdb
LOCATION_NAME=europe
MAPSET=PERMANENT
MONITOR=x2
GRASS_GUI=text
GRASS 7.0.0 (europe):~ &gt; </pre>
<div class="noteimportant">Running grass through the bash shell terminal allows you to use all command line functionality of both grass and shell. As an example you can type<pre class="code">ls</pre>

<p>
and visualize all files available in your shell current working directory. This means that all your output files produced by bash command lines functionality will be saved in the current working directory (if not specified differently). Many non-geographical grass output features such as text file reports or images will be saved as well in the current working directory. The <strong> GRASS 7.0.0 (europe):~ &gt; </strong> inform you are currently working in the home folder. See
</p>
<pre class="code">pwd</pre>

<p>
for double checking the same information using a bash command instead of the grass <strong> g.gisenv </strong> command.
</p>

</div><div class="notetip">It is a good working habit within Grass to set bash shell working directory the same as your GRASS LOCATION folder. <pre class="code">cd ~/ost4sem/grassdb/europe/</pre>

<p>
On the terminal you will no longer see 
</p>
<pre class="code"> GRASS 7.0.0 (europe):~ &gt;</pre>

<p>
but<br/>
   GRASS 7.0.0 (europe):~/ost4sem/grassdb/europe &gt;
and you will be aware tif your current bash shell working directory match your grass location directory.
</p>

</div>
</div>
<!-- EDIT5 SECTION "Grass working environment" [4003-5520] -->
<h3 class="sectionedit6" id="grass_mapset">Grass MAPSET</h3>
<div class="level3">

<p>
We have explained that grass projects can be organised in MAPSETs by users, by themes, by extent or locations, and grouped within the same grass LOCATION. This LOCATION will group several MAPSETS defined by a common projection and is able to access a common set of maps in the PERMANENT MAPSET forlder.
When we work in a specific MAPSET we will have no rights to write or delete maps in a different MAPSET. For doing so you will have to change your working MAPSET directory and then delete or produce new maps.
</p>

<p>
The <strong>g.mapset</strong> command allows you to change the Grass working directory and successively generate, delete or modify maps as you wish.
</p>
<pre class="code">g.mapset -l
g.mapset mapset=PCEM
g.gisenv </pre>

<p>
Now you should see the following settings:
</p>
<pre class="code">GRASS 7.0.0 (europe):~/ost4sem/grassdb/europe &gt; g.gisenv
GISDBASE=/home/user/ost4sem/grassdb
LOCATION_NAME=europe
MAPSET=PCEM
MONITOR=x2
GRASS_GUI=text
GRASS 7.0.0 (europe):~/ost4sem/grassdb/europe &gt;</pre>
<div class="notetip">From grass 6.3 only the -c flag creates a new mapset if it doesn&#039;t exist.; -l List available mapsets (!)

</div>
</div>
<!-- EDIT6 SECTION "Grass MAPSET" [5521-6624] -->
<h3 class="sectionedit7" id="manage_maps">Manage maps</h3>
<div class="level3">

<p>
To list your available maps:
</p>
<pre class="code">g.list type=vect -p
g.list vect  -p
g.list rast -p</pre>

<p>
The user can add, modify, and delete data layers that exist under his current mapset. Although the user can also access (i.e., use) data that are stored under other mapsets in the same GRASS location, the user can only make permanent changes (create or modify data) located in the current mapset. To access maps in a different current mapset we use the addmapset option in the g.mapset function. As an example:
</p>
<pre class="code">g.mapsets mapset=Vmodel operation=add</pre>

<p>
Now we can access the Vmodel mapset and eventually <strong>copy</strong> a map from the Vmodel mapset to our current mapset directory using the g.copy function:
</p>
<pre class="code">g.copy rast=potveg_ita@Vmodel,pvegita 
g.list rast -p</pre>

<p>
And delete a map with the <strong>g.remove</strong> command 
</p>
<pre class="code">g.remove -f type=rast name=pvegita
# g.remove rast=pvegita old syntax in grass 6.4
g.list rast</pre>

<p>
You can access but not delete or modify a map in a different mapset from your current
</p>
<pre class="code">  g.remove -f type=rast name=potveg_europe@Vmodel
  g.remove -f type=rast name=potveg_europe</pre>
<div class="noteimportant">We have to be careful in Grass to understand the possible differences existing in the same MAPSET between the whole extent and resolution of the MAPSET itself, the extent, resolution and geographic location of our working region, and the extent and location of what we are visualising.<br/>

</div>
</div>
<!-- EDIT7 SECTION "Manage maps" [6625-8041] -->
<h3 class="sectionedit8" id="region_settings">Region settings</h3>
<div class="level3">

<p>
In GRASS, a <strong>region</strong> refers to a geographic area with some defined boundaries, based on a specific map coordinate system and map projection. <a href="http://grass.itc.it/grass64/manuals/html64_user/g.region.html" class="urlextern" target="blanc" title="http://grass.itc.it/grass64/manuals/html64_user/g.region.html" rel="nofollow noopener">Grass region definition and details</a>.  This crucial Grass setting will allow us to define within MAPSET settings a particular region of work.<br/>
Once defined the grass region, grass modules (or programs) will operate within this region. The user can create, modify, and store as many geographic region definitions as desired for any given mapset. However, only one of these geographic region definitions will be current at any given moment, for a specified mapset. GRASS programs that respect the geographic region settings will use the current geographic region settings. 
</p>

<p>
To query your current region settings type
</p>
<pre class="code"> g.region -p
 </pre>

<p>
and to reset region settings to their original extent type 
</p>
<pre class="code"> g.region -d</pre>
<div class="noteclassic"> -p stands for “print” ; -d stands for default

</div>
<p>
You can modify your default g. region with a -s flag within the PERMANENT directory. 
</p>

<p>
Now we will define a new study area for the Scandinavia region.
</p>
<pre class="code">g.region -p
g.region n=6015390 e=5676400 s=3303955 w=3876180 res=1000 save=scandinavia --overwrite
g.region -p</pre>

<p>
You will visualize the current and newest region settings saved as <em>scandinavia</em>  <br/>

</p>

<p>
If you open Qgis
</p>
<pre class="code"> qgis &amp; </pre>

<p>
You can load a raster map on Qgis from the menue:
Plugin GRASS &gt; add GRASS raster layer &gt;
</p>
<ul>
<li class="level1"><div class="li"> Gisdbase : /home/user/ost4sem/grassdb</div>
</li>
<li class="level1"><div class="li"> Location : europe</div>
</li>
<li class="level1"><div class="li"> Mapset   : PERMANENT</div>
</li>
<li class="level1"><div class="li"> Map name : fnfpc</div>
</li>
</ul>

<p>
If you click on “ <em>Display current Grass region</em> ” you will see the Scandinavia area within a red frame.
</p>

<p>
Back to GRASS if you reset the default grass region 
</p>
<pre class="code">g.region -d</pre>

<p>
And when you look again at Qgis, you can visualise the red frame changing position by clicking twice on  “ <em>Display current Grass region</em> ”.
</p>

<p>
<br/>

</p>

</div>
<!-- EDIT8 SECTION "Region settings" [8042-9970] -->
<h3 class="sectionedit9" id="clipping_maps_and_changing_resolution_use">Clipping maps and changing resolution use</h3>
<div class="level3">

<p>
g.region allow us to do two basic GIS function: resample and clip.<br/>

We would like to have 3 new maps of forest/non-forest percentage clipped and resampled with a different resolution from a forest/non-forest map. The original forest/non-forest map has the European extent and 1km resolution. We need to generate:<br/>

</p>
<ul>
<li class="level1"><div class="li"> Italian extent map at 20km resolution,</div>
</li>
<li class="level1"><div class="li"> Alpine extent map at 10km resolution </div>
</li>
<li class="level1"><div class="li"> Alpine and Carpathians extent map at 5km reslution.</div>
</li>
</ul>

<p>
In the europe LOCATION  different g.region exists:
</p>
<pre class="code">ls PERMANENT/windows/ 
ls */windows/</pre>

<p>
The g.region are saved in the following folders and named as follow:
</p>
<ul>
<li class="level1"><div class="li"> EUforest/windows/:   europe</div>
</li>
<li class="level1"><div class="li"> PCEMstat/windows/:   alpine</div>
</li>
<li class="level1"><div class="li"> PCEM/windows/:   alp_car</div>
</li>
<li class="level1"><div class="li"> Vmodel/windows/:   italy</div>
</li>
<li class="level1"><div class="li"> PERMANENT/windows/:   scandinavia</div>
</li>
</ul>

<p>
The Italian g.region is in Vmodel mapset, the Alpine and Carpathiens g.region is in PCEM mapset, and the Alpine region is in PCEMstat.
</p>
<pre class="code bash">  g.region italy<span class="sy0">@</span>Vmodel <span class="re5">-p</span> 
<span class="co0">#projection: 99 (Lambert Azimuthal Equal Area)</span>
<span class="co0">#zone:       0</span>
<span class="co0">#datum:      ** unknown (default: WGS84) **</span>
<span class="co0">#ellipsoid:  grs80</span>
<span class="co0">#north:      2900000</span>
<span class="co0">#south:      1400000</span>
<span class="co0">#west:       3960000</span>
<span class="co0">#east:       5100000</span>
<span class="co0">#nsres:      1000</span>
<span class="co0">#ewres:      1000</span>
<span class="co0">#rows:       1500</span>
<span class="co0">#cols:       1140</span>
<span class="co0">#cells:      1710000</span></pre>

<p>
we see that the Italian g.region has 1km res and is 1500 x 1140 pixels
</p>

<p>
We now resample the g.region at 20km using the <strong>res=new_res</strong> option and will set 75 x 57 pixels of 20k resolution
</p>
<pre class="code bash">  g.region <span class="re2">res</span>=<span class="nu0">20000</span> <span class="re5">-p</span> 
<span class="co0">#  projection: 99 (Lambert Azimuthal Equal Area)</span>
<span class="co0">#  zone:       0</span>
<span class="co0">#  datum:      ** unknown (default: WGS84) **</span>
<span class="co0">#  ellipsoid:  grs80</span>
<span class="co0">#  north:      2900000</span>
<span class="co0">#  south:      1400000</span>
<span class="co0">#  west:       3960000</span>
<span class="co0">#  east:       5100000</span>
<span class="co0">#  nsres:      20000</span>
<span class="co0">#  ewres:      20000</span>
<span class="co0">#  rows:       75</span>
<span class="co0">#  cols:       57</span>
<span class="co0">#  cells:      4275</span></pre>

<p>
we can create a new forest/non-forest map with the new extent and resolution using r.mapcalc function <a href="http://grass.osgeo.org/gdp/html_grass64/r.mapcalc.html" class="urlextern" target="blanc" title="http://grass.osgeo.org/gdp/html_grass64/r.mapcalc.html" rel="nofollow noopener">r.mapcalc details</a>
</p>
<pre class="code">r.mapcalc &quot;fnfpc_italy20k = fnfpc&quot; </pre>

<p>
Now create the two other maps:
</p>
<pre class="code bash">  g.region alpine<span class="sy0">@</span>PCEMstat <span class="re2">res</span>=<span class="nu0">10000</span> <span class="re5">-p</span>
<span class="co0">#projection: 99 (Lambert Azimuthal Equal Area)</span>
<span class="co0">#zone:       0</span>
<span class="co0">#datum:      ** unknown (default: WGS84) **</span>
<span class="co0">#ellipsoid:  grs80</span>
<span class="co0">#north:      2751000</span>
<span class="co0">#south:      2310000</span>
<span class="co0">#west:       3960000</span>
<span class="co0">#east:       4700000</span>
<span class="co0">#nsres:      10022.72727273</span>
<span class="co0">#ewres:      10000</span>
<span class="co0">#rows:       44</span>
<span class="co0">#cols:       74</span>
<span class="co0">#cells:      3256</span>
  r.mapcalc <span class="st0">&quot;fnfpc_alpine10k = fnfpc&quot;</span> 
&nbsp;
  g.region alp_car<span class="sy0">@</span>PCEM <span class="re2">res</span>=<span class="nu0">5000</span> <span class="re5">-p</span>
<span class="co0">#projection: 99 (Lambert Azimuthal Equal Area)</span>
<span class="co0">#zone:       0</span>
<span class="co0">#datum:      ** unknown (default: WGS84) **</span>
<span class="co0">#ellipsoid:  grs80</span>
<span class="co0">#north:      3070000</span>
<span class="co0">#south:      2270000</span>
<span class="co0">#west:       3900000</span>
<span class="co0">#east:       5660000</span>
<span class="co0">#nsres:      5000</span>
<span class="co0">#ewres:      5000</span>
<span class="co0">#rows:       160</span>
<span class="co0">#cols:       352</span>
<span class="co0">#cells:      56320</span>
  r.mapcalc <span class="st0">&quot;fnfpc_alpine_carpatien5k = fnfpc&quot;</span> </pre>
<div class="notetip">You can save a new extent and resolution as <strong>g.mapset</strong> with the save=name<em>new</em> option<pre class="code">g.region alp_car@PCEM res=5000 -p save=alp_car_5km_res</pre>

</div>
<p>
<br/>

</p>

</div>
<!-- EDIT9 SECTION "Clipping maps and changing resolution use" [9971-13054] -->
<h2 class="sectionedit10" id="visualize_maps">Visualize maps</h2>
<div class="level2">

<p>
In the forest non forest map <strong>fnfpc</strong> each pixel value corresponds to ha of tree cover or percentage cover within each sq km pixel.<br/>

Lets visualise the map in different ways.<br/>

<br/>

</p>

</div>

<h5 id="qgis">Qgis</h5>
<div class="level5">

<p>
The Qgis is a very simple and practical tools for visualising maps. Open Qgis and visualize the maps you just created:
Plugin GRASS &gt; add GRASS raster layer &gt;
</p>
<ul>
<li class="level1"><div class="li"> Gisdbase : /home/user/ost4sem/grassdb</div>
</li>
<li class="level1"><div class="li"> Location : europe</div>
</li>
<li class="level1"><div class="li"> Mapset   : PERMANENT</div>
</li>
<li class="level1"><div class="li"> Map name : fnfpc<em>alpine</em>carpatien5k</div>
</li>
</ul>

</div>

<h5 id="grass_gui">GRASS GUI</h5>
<div class="level5">

<p>
Also grass has a <abbr title="Graphical User Interface">GUI</abbr> for vitalising maps. Open it and charge the maps just created
</p>
<pre class="code"> g.gui tcltk     </pre>

<p>
Click on: add raster layer  &gt; Base map (select your maps and refresh the Map display window.
<br/>

</p>

</div>

<h5 id="grass_display_monitor">GRASS display monitor</h5>
<div class="level5">

<p>
In grass we can visualize maps in different monitors. To list available monitors, type:
</p>
<pre class="code"> d.mon -l</pre>

<p>
We can open a monitor and display a raster 
</p>
<pre class="code"> g.region rast=fnfpc
 d.mon start=wx0
 d.rast fnfpc</pre>

<p>
and do the same thing for the other maps in different monitors
</p>
<pre class="code"> d.mon start=wx1    
 d.rast fnfpc_alpine10k </pre>
<div class="notewarning">wrong vizualisation extent

</div><pre class="code"> g.region rast=fnfpc_alpine10k 
 d.mon start=wx1    
 d.rast fnfpc_alpine10k </pre>
<pre class="code"> g.region rast=fnfpc_alpine_carpatien5k
 d.mon start=x3
 d.rast fnfpc_alpine_carpatien5k
 
 g.region rast=fnfpc_italy20k
 d.mon start=x4
 d.rast fnfpc_italy20k</pre>

<p>
And we can also change the resolution of the visualization
</p>
<pre class="code"> g.region rast=fnfpc res=50000
 d.mon start=x5
 d.rast fnfpc</pre>

<p>
<br/>

</p>

<p>
The following table give some general info on the display functions of GRASS:
<br/>

</p>
<div class="table sectionedit11"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0">Command </th><th class="col1"> Action </th>
	</tr>
	</thead>
	<tr class="row1">
		<td class="col0 leftalign">d.mon start=x0	 </td><td class="col1"> Opens the terminal x0 </td>
	</tr>
	<tr class="row2">
		<td class="col0 leftalign">d.mon stop=x0	 </td><td class="col1"> Closes the terminal x0 </td>
	</tr>
	<tr class="row3">
		<td class="col0">d.mon select=x0 </td><td class="col1"> Selects the terminal x0 </td>
	</tr>
	<tr class="row4">
		<td class="col0 leftalign">d.mon -l        </td><td class="col1"> Displays the list of available monitors </td>
	</tr>
	<tr class="row5">
		<td class="col0 leftalign">d.frame -e      </td><td class="col1"> Manages display frames on the user&#039;s graphics monitor </td>
	</tr>
	<tr class="row6">
		<td class="col0 leftalign">d.vect col=red  </td><td class="col1"> Displays and overlays vector map layers in the red color</td>
	</tr>
	<tr class="row7">
		<td class="col0 leftalign">d.rast          </td><td class="col1"> Displays and overlays raster map layers </td>
	</tr>
	<tr class="row8">
		<td class="col0 leftalign">d.m             </td><td class="col1"> Display manager for GRASS </td>
	</tr>
	<tr class="row9">
		<td class="col0 leftalign">d.what.vect     </td><td class="col1"> Allows the user to interactively query a vector map </td>
	</tr>
	<tr class="row10">
		<td class="col0 leftalign">d.legend        </td><td class="col1"> Displays a legend for a raster map </td>
	</tr>
</table></div>
<!-- EDIT11 TABLE [14652-15254] -->
<p>
<br/>

</p>
<div class="notetip">here <a href="http://grass.itc.it/gdp/html_grass64/display.html" class="urlextern" target="blanc" title="http://grass.itc.it/gdp/html_grass64/display.html" rel="nofollow noopener"> is a detailed explanation and full list of d. modules</a>

</div>
<p>
<br/>

Let&#039;s have a look now at the Pinus cembra distribution map, downloaded from the Euforgen database
</p>
<pre class="code"> 
 g.region rast=pcem_euforgen
 d.mon start=wx1
 d.rast pcem_euforgen
 d.vect map=EUcountry@EUforest fcolor=&quot;none&quot; col=red</pre>

</div>
<!-- EDIT10 SECTION "Visualize maps" [13055-15659] -->
<h2 class="sectionedit12" id="generating_multiple_maps_with_standardized_settings">Generating multiple maps with standardized settings</h2>
<div class="level2">

<p>
Lets rename our maps for simplification
</p>
<pre class="code">g.copy rast=fnfpc,eu1 
g.copy rast=fnfpc_alpine_carpatien5k,ac5 
g.copy rast=fnfpc_alpine10k,a10
g.copy rast=fnfpc_italy20k,i20</pre>

<p>
And remove rasters with old names
</p>
<pre class="code">g.remove -f type=raster name=fnfpc_alpine_carpatien5k
g.remove -f type=raster name=fnfpc_alpine10k
g.remove -f type=raster name=fnfpc_italy20k</pre>
<div class="notetip">You can use the <em>g.rename rast=oldname,newname</em> function instead of <em>g.copy</em> and <em>g.remove</em> if you are dealing with maps in the same mapsets and you hgave rights to rename them 
</div>
<p>
We also need to <a href="http://grasswiki.osgeo.org/wiki/Convert_all_GRASS_6_vector_maps_to_GRASS_7" class="urlextern" target="blanc" title="http://grasswiki.osgeo.org/wiki/Convert_all_GRASS_6_vector_maps_to_GRASS_7" rel="nofollow noopener"> convert </a> vector topology from grass 6 to grass 7 version
</p>
<pre class="code bash">  g.copy <span class="re2">vect</span>=EUcountry<span class="sy0">@</span>EUforest,EUcountry
  v.build.all</pre>
<pre class="code bash"><span class="kw1">for</span> map <span class="kw1">in</span> a10 ac5 eu1 i20 ; <span class="kw1">do</span>
 g.region <span class="re2">rast</span>=<span class="re1">$map</span>
 <span class="kw2">cat</span> ~<span class="sy0">/</span>ost4sem<span class="sy0">/</span>exercise<span class="sy0">/</span>basic_adv_grass<span class="sy0">/</span>green_palett_5class <span class="sy0">|</span> r.colors <span class="re2">map</span>=<span class="re1">$map</span>  <span class="re2">rules</span>=<span class="st0">&quot;-&quot;</span> 
 d.mon <span class="re2">start</span>=png 
 d.rast <span class="re1">$map</span> 
 d.vect <span class="re2">map</span>=EUcountry <span class="re2">fcolor</span>=<span class="st0">&quot;none&quot;</span> <span class="re2">color</span>=<span class="kw2">red</span>
 d.mon <span class="re2">stop</span>=png
 <span class="kw2">mv</span>  map.png ~<span class="sy0">/</span>ost4sem<span class="sy0">/</span>exercise<span class="sy0">/</span>basic_adv_grass<span class="sy0">/</span>output_map_<span class="re1">$map</span>.png
<span class="kw1">done</span> </pre>

<p>
<br/>

</p>

<p>
below the whole procedure in a script to generate multiple maps with different resolution and extents.<br/>

</p>
<dl class="code">
<dt><a href="/dokuwiki/doku.php?do=export_code&amp;id=wiki:basicgrass7&amp;codeblock=5" title="Download Snippet" class="mediafile mf_sh">- grass_basic.sh</a></dt>
<dd><pre class="code bash">grass <span class="re5">-text</span> ~<span class="sy0">/</span>ost4sem<span class="sy0">/</span>grassdb<span class="sy0">/</span>europe<span class="sy0">/</span>PCEM
g.mapsets <span class="re2">mapset</span>=Vmodel <span class="re2">operation</span>=add
g.region <span class="re2">n</span>=<span class="nu0">6015390</span> <span class="re2">e</span>=<span class="nu0">5676400</span> <span class="re2">s</span>=<span class="nu0">3303955</span> <span class="re2">w</span>=<span class="nu0">3876180</span> <span class="re2">res</span>=<span class="nu0">1000</span> <span class="re2">save</span>=scandinavia <span class="re5">--overwrite</span>
g.region italy<span class="sy0">@</span>Vmodel <span class="re5">-p</span> 
g.region <span class="re2">res</span>=<span class="nu0">20000</span> <span class="re5">-p</span> 
r.mapcalc <span class="st0">&quot;fnfpc_italy20k = fnfpc&quot;</span> <span class="re5">--overwrite</span>
g.region alpine<span class="sy0">@</span>PCEMstat <span class="re2">res</span>=<span class="nu0">10000</span> <span class="re5">-p</span>
r.mapcalc <span class="st0">&quot;fnfpc_alpine10k = fnfpc&quot;</span> <span class="re5">--overwrite</span>
g.region alp_car<span class="sy0">@</span>PCEM <span class="re2">res</span>=<span class="nu0">5000</span> <span class="re5">-p</span>
r.mapcalc <span class="st0">&quot;fnfpc_alpine_carpatien5k = fnfpc&quot;</span> <span class="re5">--overwrite</span>
g.copy <span class="re2">rast</span>=fnfpc,eu1 
g.copy <span class="re2">rast</span>=fnfpc_alpine_carpatien5k,ac5 
g.copy <span class="re2">rast</span>=fnfpc_alpine10k,a10
g.copy <span class="re2">rast</span>=fnfpc_italy20k,i20
g.remove <span class="re5">-f</span> <span class="re2">type</span>=raster <span class="re2">name</span>=fnfpc 
g.remove <span class="re5">-f</span> <span class="re2">type</span>=raster <span class="re2">name</span>=fnfpc_alpine_carpatien5k 
g.remove <span class="re5">-f</span> <span class="re2">type</span>=raster <span class="re2">name</span>=fnfpc_alpine10k
g.remove <span class="re5">-f</span> <span class="re2">type</span>=raster <span class="re2">name</span>=fnfpc_italy20k
g.copy <span class="re2">vect</span>=EUcountry<span class="sy0">@</span>EUforest,EUcountry
v.build.all
<span class="kw1">for</span> map <span class="kw1">in</span> a10 ac5 eu1 i20 ; <span class="kw1">do</span>
 g.region <span class="re2">rast</span>=<span class="re1">$map</span>
 <span class="kw2">cat</span> ~<span class="sy0">/</span>ost4sem<span class="sy0">/</span>exercise<span class="sy0">/</span>basic_adv_grass<span class="sy0">/</span>green_palett_5class <span class="sy0">|</span> r.colors <span class="re2">map</span>=<span class="re1">$map</span>  <span class="re2">rules</span>=<span class="st0">&quot;-&quot;</span> 
 d.mon <span class="re2">start</span>=png 
 d.rast <span class="re1">$map</span> 
 d.vect <span class="re2">map</span>=EUcountry <span class="re2">fcolor</span>=<span class="st0">&quot;none&quot;</span> <span class="re2">color</span>=<span class="kw2">red</span>
 d.mon <span class="re2">stop</span>=png
 <span class="kw2">mv</span>  map.png ~<span class="sy0">/</span>ost4sem<span class="sy0">/</span>exercise<span class="sy0">/</span>basic_adv_grass<span class="sy0">/</span>output_map_<span class="re1">$map</span>.png
<span class="kw1">done</span></pre>
</dd></dl>

</div>
<!-- EDIT12 SECTION "Generating multiple maps with standardized settings" [15660-] -->