
<h1 class="sectionedit1" id="geospatial_python_crash_course_part_2">Geospatial Python crash course, part 2</h1>
<div class="level1">

</div>
<!-- EDIT1 SECTION "Geospatial Python crash course, part 2" [1-54] -->
<h2 class="sectionedit2" id="some_examples_of_code">Some examples of code</h2>
<div class="level2">

<p>
Some example of reasonable complicated programs:
</p>
<dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/01/SimpleGIS.py" class="mediafile mf_py">01/SimpleGIS.py</a></dt>
<dd><pre class="code file python"><span class="kw1">import</span> <span class="kw3">turtle</span> <span class="kw1">as</span> t
&nbsp;
<span class="co1"># DATA MODEL</span>
<span class="co1"># All layers will have a name, 1+ points, and population count</span>
NAME <span class="sy0">=</span> <span class="nu0">0</span>
POINTS <span class="sy0">=</span> <span class="nu0">1</span>
POP <span class="sy0">=</span> <span class="nu0">2</span>
&nbsp;
<span class="co1"># Create the state layer</span>
state <span class="sy0">=</span> <span class="br0">&#91;</span><span class="st0">&quot;COLORADO&quot;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="br0">&#91;</span>-<span class="nu0">109</span><span class="sy0">,</span> <span class="nu0">37</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span>-<span class="nu0">109</span><span class="sy0">,</span> <span class="nu0">41</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span>-<span class="nu0">102</span><span class="sy0">,</span> <span class="nu0">41</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span>-<span class="nu0">102</span><span class="sy0">,</span> <span class="nu0">37</span><span class="br0">&#93;</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="nu0">5187582</span><span class="br0">&#93;</span>
&nbsp;
<span class="co1"># Cities layer list</span>
<span class="co1"># city = [name, [point], population]</span>
cities <span class="sy0">=</span> <span class="br0">&#91;</span><span class="br0">&#93;</span>
&nbsp;
<span class="co1"># Add Denver</span>
cities.<span class="me1">append</span><span class="br0">&#40;</span><span class="br0">&#91;</span><span class="st0">&quot;DENVER&quot;</span><span class="sy0">,</span><span class="br0">&#91;</span>-<span class="nu0">104.98</span><span class="sy0">,</span> <span class="nu0">39.74</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="nu0">634265</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
<span class="co1"># Add Boulder</span>
cities.<span class="me1">append</span><span class="br0">&#40;</span><span class="br0">&#91;</span><span class="st0">&quot;BOULDER&quot;</span><span class="sy0">,</span><span class="br0">&#91;</span>-<span class="nu0">105.27</span><span class="sy0">,</span> <span class="nu0">40.02</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="nu0">98889</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
<span class="co1"># Add Durango</span>
cities.<span class="me1">append</span><span class="br0">&#40;</span><span class="br0">&#91;</span><span class="st0">&quot;DURANGO&quot;</span><span class="sy0">,</span><span class="br0">&#91;</span>-<span class="nu0">107.88</span><span class="sy0">,</span><span class="nu0">37.28</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="nu0">17069</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
&nbsp;
<span class="co1"># MAP GRAPHICS RENDERING</span>
map_width <span class="sy0">=</span> <span class="nu0">800</span>
map_height <span class="sy0">=</span> <span class="nu0">500</span>
&nbsp;
<span class="co1"># State Bounding Box</span>
<span class="co1"># Use Python min/max function to get bounding box</span>
minx <span class="sy0">=</span> <span class="nu0">180</span>
maxx <span class="sy0">=</span> -<span class="nu0">180</span>
miny <span class="sy0">=</span> <span class="nu0">90</span>
maxy <span class="sy0">=</span> -<span class="nu0">90</span> 
<span class="kw1">for</span> x<span class="sy0">,</span>y <span class="kw1">in</span> state<span class="br0">&#91;</span>POINTS<span class="br0">&#93;</span>:
  <span class="kw1">if</span> x <span class="sy0">&lt;</span> minx: minx <span class="sy0">=</span> x
  <span class="kw1">elif</span> x <span class="sy0">&gt;</span> maxx: maxx <span class="sy0">=</span> x
  <span class="kw1">if</span> y <span class="sy0">&lt;</span> miny: miny <span class="sy0">=</span> y
  <span class="kw1">elif</span> y <span class="sy0">&gt;</span> maxy: maxy <span class="sy0">=</span> y
<span class="co1"># Get earth distance on each axis</span>
dist_x <span class="sy0">=</span> maxx - minx
dist_y <span class="sy0">=</span> maxy - miny
&nbsp;
<span class="co1"># Scaling ratio each axis </span>
<span class="co1"># to map points from world to screen</span>
x_ratio <span class="sy0">=</span> map_width / dist_x
y_ratio <span class="sy0">=</span> map_height / dist_y
&nbsp;
<span class="co1"># Function to convert lat/lon to screen coordinates</span>
<span class="kw1">def</span> convert<span class="br0">&#40;</span>point<span class="br0">&#41;</span>:
  lon <span class="sy0">=</span> point<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>
  lat <span class="sy0">=</span> point<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span>
  x <span class="sy0">=</span> map_width - <span class="br0">&#40;</span><span class="br0">&#40;</span>maxx - lon<span class="br0">&#41;</span> * x_ratio<span class="br0">&#41;</span>
  y <span class="sy0">=</span> map_height - <span class="br0">&#40;</span><span class="br0">&#40;</span>maxy - lat<span class="br0">&#41;</span> * y_ratio<span class="br0">&#41;</span>
  <span class="co1"># Python turtle graphics start in the middle of the screen</span>
  <span class="co1"># so we must offset the points so they are centered</span>
  x <span class="sy0">=</span> x - <span class="br0">&#40;</span>map_width/<span class="nu0">2</span><span class="br0">&#41;</span>
  y <span class="sy0">=</span> y - <span class="br0">&#40;</span>map_height/<span class="nu0">2</span><span class="br0">&#41;</span>
  <span class="kw1">return</span> <span class="br0">&#91;</span>x<span class="sy0">,</span>y<span class="br0">&#93;</span>
&nbsp;
<span class="co1"># Draw the state</span>
t.<span class="me1">up</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
first_pixel <span class="sy0">=</span> <span class="kw2">None</span>
<span class="kw1">for</span> point <span class="kw1">in</span> state<span class="br0">&#91;</span>POINTS<span class="br0">&#93;</span>:
  pixel <span class="sy0">=</span> convert<span class="br0">&#40;</span>point<span class="br0">&#41;</span>
  <span class="kw1">if</span> <span class="kw1">not</span> first_pixel:
    first_pixel <span class="sy0">=</span> pixel
  t.<span class="me1">goto</span><span class="br0">&#40;</span>pixel<span class="br0">&#41;</span>
  t.<span class="me1">down</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="co1"># Go back to the first point</span>
t.<span class="me1">goto</span><span class="br0">&#40;</span>first_pixel<span class="br0">&#41;</span>
<span class="co1"># Label the state</span>
t.<span class="me1">up</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
t.<span class="me1">goto</span><span class="br0">&#40;</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
t.<span class="me1">write</span><span class="br0">&#40;</span>state<span class="br0">&#91;</span>NAME<span class="br0">&#93;</span><span class="sy0">,</span> align<span class="sy0">=</span><span class="st0">&quot;center&quot;</span><span class="sy0">,</span> font<span class="sy0">=</span><span class="br0">&#40;</span><span class="st0">&quot;Arial&quot;</span><span class="sy0">,</span><span class="nu0">16</span><span class="sy0">,</span><span class="st0">&quot;bold&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
&nbsp;
<span class="co1"># Draw the cities</span>
<span class="kw1">for</span> city <span class="kw1">in</span> cities:
  pixel <span class="sy0">=</span> convert<span class="br0">&#40;</span>city<span class="br0">&#91;</span>POINTS<span class="br0">&#93;</span><span class="br0">&#41;</span>
  t.<span class="me1">up</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
  t.<span class="me1">goto</span><span class="br0">&#40;</span>pixel<span class="br0">&#41;</span>
  <span class="co1"># Place a point for the city</span>
  t.<span class="me1">dot</span><span class="br0">&#40;</span><span class="nu0">10</span><span class="br0">&#41;</span>
  <span class="co1"># Label the city</span>
  t.<span class="me1">write</span><span class="br0">&#40;</span>city<span class="br0">&#91;</span>NAME<span class="br0">&#93;</span> + <span class="st0">&quot;, Pop.: &quot;</span> + <span class="kw2">str</span><span class="br0">&#40;</span>city<span class="br0">&#91;</span>POP<span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">,</span> align<span class="sy0">=</span><span class="st0">&quot;left&quot;</span><span class="br0">&#41;</span>
  t.<span class="me1">up</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp;
<span class="co1"># Perform an attribute query</span>
<span class="co1"># Question: Which city has the largest population?</span>
<span class="co1"># Write the result but make sure it's under the map</span>
biggest_city <span class="sy0">=</span> <span class="kw2">max</span><span class="br0">&#40;</span>cities<span class="sy0">,</span> key<span class="sy0">=</span><span class="kw1">lambda</span> city:city<span class="br0">&#91;</span>POP<span class="br0">&#93;</span><span class="br0">&#41;</span>
t.<span class="me1">goto</span><span class="br0">&#40;</span><span class="nu0">0</span><span class="sy0">,</span> -<span class="nu0">1</span>*<span class="br0">&#40;</span><span class="br0">&#40;</span>map_height/<span class="nu0">2</span><span class="br0">&#41;</span>+<span class="nu0">20</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
t.<span class="me1">write</span><span class="br0">&#40;</span><span class="st0">&quot;The biggest city is: &quot;</span> +  biggest_city<span class="br0">&#91;</span>NAME<span class="br0">&#93;</span><span class="br0">&#41;</span>
&nbsp;
<span class="co1"># Perform a spatial query</span>
<span class="co1"># Question: Which is the western most city?</span>
<span class="co1"># Write the result but make sure it's under the other question</span>
western_city <span class="sy0">=</span> <span class="kw2">min</span><span class="br0">&#40;</span>cities<span class="sy0">,</span> key<span class="sy0">=</span><span class="kw1">lambda</span> city:city<span class="br0">&#91;</span>POINTS<span class="br0">&#93;</span><span class="br0">&#41;</span>
t.<span class="me1">goto</span><span class="br0">&#40;</span><span class="nu0">0</span><span class="sy0">,</span> -<span class="nu0">1</span>*<span class="br0">&#40;</span><span class="br0">&#40;</span>map_height/<span class="nu0">2</span><span class="br0">&#41;</span>+<span class="nu0">40</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
t.<span class="me1">write</span><span class="br0">&#40;</span><span class="st0">&quot;The western-most city is: &quot;</span> + western_city<span class="br0">&#91;</span>NAME<span class="br0">&#93;</span><span class="br0">&#41;</span>
&nbsp;
<span class="co1"># Hide our map pen</span>
t.<span class="me1">pen</span><span class="br0">&#40;</span>shown<span class="sy0">=</span><span class="kw2">False</span><span class="br0">&#41;</span>
t.<span class="me1">done</span><span class="br0">&#40;</span><span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/02/fmtDecode.py" class="mediafile mf_py">02/fmtDecode.py</a></dt>
<dd><pre class="code file python"><span class="st0">&quot;&quot;&quot;
fmtDecode.py - Simple program to manually decode binary formats.
&quot;&quot;&quot;</span>
&nbsp;
<span class="kw1">import</span> <span class="kw3">struct</span>
<span class="kw1">import</span> <span class="kw3">pickle</span>
<span class="kw1">import</span> <span class="kw3">os</span>
&nbsp;
<span class="kw1">def</span> export<span class="br0">&#40;</span><span class="br0">&#41;</span>:
    <span class="kw1">print</span> <span class="st0">&quot;Saving results&quot;</span>
    out <span class="sy0">=</span> <span class="kw2">None</span>
    <span class="kw1">if</span> cached:
      out <span class="sy0">=</span> <span class="kw2">file</span><span class="br0">&#40;</span>oname<span class="sy0">,</span> <span class="st0">&quot;a&quot;</span><span class="br0">&#41;</span>
    <span class="kw1">else</span>:
      out <span class="sy0">=</span> <span class="kw2">file</span><span class="br0">&#40;</span>oname<span class="sy0">,</span> <span class="st0">&quot;w&quot;</span><span class="br0">&#41;</span>
      out.<span class="me1">write</span><span class="br0">&#40;</span>header<span class="br0">&#41;</span>
    <span class="kw1">for</span> record <span class="kw1">in</span> fileDesc:
        <span class="kw1">for</span> field <span class="kw1">in</span> record:
            out.<span class="me1">write</span><span class="br0">&#40;</span><span class="st0">&quot;%s<span class="es0">\t</span>&quot;</span> % field<span class="br0">&#41;</span>
        out.<span class="me1">write</span><span class="br0">&#40;</span><span class="st0">&quot;<span class="es0">\n</span>&quot;</span><span class="br0">&#41;</span>
    out.<span class="me1">close</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
    <span class="kw3">pickle</span>.<span class="me1">dump</span><span class="br0">&#40;</span>cached<span class="sy0">,</span> <span class="kw2">file</span><span class="br0">&#40;</span>pickleJar<span class="sy0">,</span> <span class="st0">&quot;w&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
&nbsp;
header <span class="sy0">=</span> <span class="st0">&quot;POSTION<span class="es0">\t</span>FIELD<span class="es0">\t</span>SAMPLE<span class="es0">\t</span>TYPE<span class="es0">\t</span>BYTE_ORDER<span class="es0">\n</span>&quot;</span>
fileDesc <span class="sy0">=</span> <span class="br0">&#91;</span><span class="br0">&#93;</span>
files <span class="sy0">=</span> <span class="kw3">os</span>.<span class="me1">listdir</span><span class="br0">&#40;</span><span class="st0">&quot;.&quot;</span><span class="br0">&#41;</span>
count <span class="sy0">=</span> <span class="nu0">1</span>
<span class="kw1">print</span> <span class="st0">&quot;Available Files:&quot;</span>
&nbsp;
<span class="kw1">for</span> f <span class="kw1">in</span> files:
  <span class="kw1">print</span> <span class="st0">&quot; %s. %s&quot;</span> % <span class="br0">&#40;</span>count<span class="sy0">,</span> f<span class="br0">&#41;</span>
  count +<span class="sy0">=</span> <span class="nu0">1</span>
&nbsp;
fnum <span class="sy0">=</span> <span class="kw2">raw_input</span><span class="br0">&#40;</span><span class="st0">&quot;Enter the number of the file to decode: &quot;</span><span class="br0">&#41;</span>
fname <span class="sy0">=</span> files<span class="br0">&#91;</span><span class="kw2">int</span><span class="br0">&#40;</span>fnum<span class="br0">&#41;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>
base <span class="sy0">=</span> <span class="kw3">os</span>.<span class="me1">path</span>.<span class="me1">splitext</span><span class="br0">&#40;</span>fname<span class="br0">&#41;</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>
&nbsp;
pickleJar <span class="sy0">=</span> <span class="st0">&quot;%s.p&quot;</span> % base
&nbsp;
cached <span class="sy0">=</span> <span class="br0">&#91;</span><span class="br0">&#93;</span>
&nbsp;
<span class="kw1">if</span> <span class="kw3">os</span>.<span class="me1">path</span>.<span class="me1">exists</span><span class="br0">&#40;</span>pickleJar<span class="br0">&#41;</span>:
    <span class="kw1">print</span> <span class="st0">&quot;Cached session available.&quot;</span>
    <span class="kw1">print</span> 
    useCache <span class="sy0">=</span> <span class="kw2">raw_input</span><span class="br0">&#40;</span><span class="st0">&quot;Use it? Yes (Y), No (N)?&quot;</span><span class="br0">&#41;</span>
    <span class="kw1">if</span> <span class="st0">&quot;y&quot;</span> <span class="kw1">in</span> useCache.<span class="me1">lower</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="kw1">or</span> useCache <span class="sy0">==</span> <span class="st0">&quot;&quot;</span>:
        cached <span class="sy0">=</span> <span class="kw3">pickle</span>.<span class="me1">load</span><span class="br0">&#40;</span><span class="kw2">open</span><span class="br0">&#40;</span>pickleJar<span class="sy0">,</span> <span class="st0">&quot;r&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
    <span class="kw1">else</span>: cached <span class="sy0">=</span> <span class="br0">&#91;</span><span class="br0">&#93;</span>
&nbsp;
oname <span class="sy0">=</span> <span class="st0">&quot;%s_decode.txt&quot;</span> % base
&nbsp;
f <span class="sy0">=</span> <span class="kw2">open</span><span class="br0">&#40;</span>fname<span class="sy0">,</span> <span class="st0">&quot;rb&quot;</span><span class="br0">&#41;</span>
loc <span class="sy0">=</span> f.<span class="me1">tell</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
f.<span class="me1">seek</span><span class="br0">&#40;</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">2</span><span class="br0">&#41;</span>
eof <span class="sy0">=</span> f.<span class="me1">tell</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
f.<span class="me1">seek</span><span class="br0">&#40;</span><span class="nu0">0</span><span class="br0">&#41;</span>
prev <span class="sy0">=</span> <span class="nu0">0</span>
&nbsp;
<span class="kw1">if</span> <span class="kw2">len</span><span class="br0">&#40;</span>cached<span class="br0">&#41;</span><span class="sy0">&gt;</span><span class="nu0">0</span>:
    <span class="kw1">print</span> <span class="st0">&quot;Using cache...&quot;</span>
    f.<span class="me1">seek</span><span class="br0">&#40;</span>cached<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
    prev <span class="sy0">=</span> cached<span class="br0">&#91;</span>-<span class="nu0">2</span><span class="br0">&#93;</span>
&nbsp;
<span class="kw1">print</span> <span class="st0">&quot;Starting at byte %s...&quot;</span> % f.<span class="me1">tell</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">try</span>:
    formats <span class="sy0">=</span> <span class="br0">&#123;</span><span class="st0">&quot;char&quot;</span>:<span class="br0">&#123;</span><span class="st0">&quot;format&quot;</span>:<span class="st0">&quot;c&quot;</span><span class="sy0">,</span><span class="st0">&quot;len&quot;</span>:<span class="nu0">1</span><span class="br0">&#125;</span><span class="sy0">,</span>
               <span class="st0">&quot;signed char&quot;</span>:<span class="br0">&#123;</span><span class="st0">&quot;format&quot;</span>:<span class="st0">&quot;b&quot;</span><span class="sy0">,</span><span class="st0">&quot;len&quot;</span>:<span class="nu0">1</span><span class="br0">&#125;</span><span class="sy0">,</span>
               <span class="st0">&quot;unsigned char&quot;</span>:<span class="br0">&#123;</span><span class="st0">&quot;format&quot;</span>:<span class="st0">&quot;B&quot;</span><span class="sy0">,</span><span class="st0">&quot;len&quot;</span>:<span class="nu0">1</span><span class="br0">&#125;</span><span class="sy0">,</span>
               <span class="st0">&quot;_Bool&quot;</span>:<span class="br0">&#123;</span><span class="st0">&quot;format&quot;</span>:<span class="st0">&quot;?&quot;</span><span class="sy0">,</span><span class="st0">&quot;len&quot;</span>:<span class="nu0">1</span><span class="br0">&#125;</span><span class="sy0">,</span>
               <span class="st0">&quot;short&quot;</span>:<span class="br0">&#123;</span><span class="st0">&quot;format&quot;</span>:<span class="st0">&quot;h&quot;</span><span class="sy0">,</span><span class="st0">&quot;len&quot;</span>:<span class="nu0">2</span><span class="br0">&#125;</span><span class="sy0">,</span>
               <span class="st0">&quot;unsigned short&quot;</span>:<span class="br0">&#123;</span><span class="st0">&quot;format&quot;</span>:<span class="st0">&quot;h&quot;</span><span class="sy0">,</span><span class="st0">&quot;len&quot;</span>:<span class="nu0">2</span><span class="br0">&#125;</span><span class="sy0">,</span>
               <span class="st0">&quot;int&quot;</span>:<span class="br0">&#123;</span><span class="st0">&quot;format&quot;</span>:<span class="st0">&quot;i&quot;</span><span class="sy0">,</span><span class="st0">&quot;len&quot;</span>:<span class="nu0">4</span><span class="br0">&#125;</span><span class="sy0">,</span>
               <span class="st0">&quot;unsigned int&quot;</span>:<span class="br0">&#123;</span><span class="st0">&quot;format&quot;</span>:<span class="st0">&quot;I&quot;</span><span class="sy0">,</span><span class="st0">&quot;len&quot;</span>:<span class="nu0">4</span><span class="br0">&#125;</span><span class="sy0">,</span>
               <span class="st0">&quot;long&quot;</span>:<span class="br0">&#123;</span><span class="st0">&quot;format&quot;</span>:<span class="st0">&quot;l&quot;</span><span class="sy0">,</span><span class="st0">&quot;len&quot;</span>:<span class="nu0">4</span><span class="br0">&#125;</span><span class="sy0">,</span>
               <span class="st0">&quot;unsigned long&quot;</span>:<span class="br0">&#123;</span><span class="st0">&quot;format&quot;</span>:<span class="st0">&quot;L&quot;</span><span class="sy0">,</span><span class="st0">&quot;len&quot;</span>:<span class="nu0">4</span><span class="br0">&#125;</span><span class="sy0">,</span>
               <span class="st0">&quot;long long&quot;</span>:<span class="br0">&#123;</span><span class="st0">&quot;format&quot;</span>:<span class="st0">&quot;q&quot;</span><span class="sy0">,</span><span class="st0">&quot;len&quot;</span>:<span class="nu0">8</span><span class="br0">&#125;</span><span class="sy0">,</span>
               <span class="st0">&quot;unsigned long long&quot;</span>:<span class="br0">&#123;</span><span class="st0">&quot;format&quot;</span>:<span class="st0">&quot;Q&quot;</span><span class="sy0">,</span><span class="st0">&quot;len&quot;</span>:<span class="nu0">8</span><span class="br0">&#125;</span><span class="sy0">,</span>
               <span class="st0">&quot;float&quot;</span>:<span class="br0">&#123;</span><span class="st0">&quot;format&quot;</span>:<span class="st0">&quot;f&quot;</span><span class="sy0">,</span><span class="st0">&quot;len&quot;</span>:<span class="nu0">4</span><span class="br0">&#125;</span><span class="sy0">,</span>
               <span class="st0">&quot;double&quot;</span>:<span class="br0">&#123;</span><span class="st0">&quot;format&quot;</span>:<span class="st0">&quot;d&quot;</span><span class="sy0">,</span><span class="st0">&quot;len&quot;</span>:<span class="nu0">8</span><span class="br0">&#125;</span><span class="br0">&#125;</span>
&nbsp;
    <span class="kw1">while</span> f.<span class="me1">tell</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy0">&lt;</span> eof:
        record <span class="sy0">=</span> <span class="br0">&#91;</span><span class="br0">&#93;</span>
        start <span class="sy0">=</span> f.<span class="me1">tell</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
        record.<span class="me1">append</span><span class="br0">&#40;</span><span class="st0">&quot;%s<span class="es0">\t</span>&quot;</span> % start<span class="br0">&#41;</span>
        cached.<span class="me1">append</span><span class="br0">&#40;</span>start<span class="br0">&#41;</span>
        fields <span class="sy0">=</span> <span class="br0">&#91;</span><span class="br0">&#93;</span>
        <span class="kw1">print</span> 
        count <span class="sy0">=</span> <span class="nu0">1</span>
        <span class="kw1">try</span>:
          <span class="co1"># Little endian formats</span>
          <span class="kw1">for</span> fmt <span class="kw1">in</span> formats:
            form <span class="sy0">=</span> formats<span class="br0">&#91;</span>fmt<span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">&quot;format&quot;</span><span class="br0">&#93;</span>
            <span class="kw3">bytes</span> <span class="sy0">=</span> formats<span class="br0">&#91;</span>fmt<span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">&quot;len&quot;</span><span class="br0">&#93;</span>
            field <span class="sy0">=</span> <span class="kw3">struct</span>.<span class="me1">unpack</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;%s&quot;</span> % form<span class="sy0">,</span> f.<span class="me1">read</span><span class="br0">&#40;</span><span class="kw3">bytes</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
            <span class="kw1">print</span> <span class="st0">&quot;%s. Little %s: %s&quot;</span> % <span class="br0">&#40;</span>count<span class="sy0">,</span> fmt<span class="sy0">,</span> field<span class="br0">&#41;</span>
            count +<span class="sy0">=</span> <span class="nu0">1</span>
            f.<span class="me1">seek</span><span class="br0">&#40;</span>start<span class="br0">&#41;</span>
            fields.<span class="me1">append</span><span class="br0">&#40;</span><span class="br0">&#91;</span><span class="kw2">str</span><span class="br0">&#40;</span>field<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">,</span> fmt<span class="sy0">,</span> <span class="st0">&quot;little&quot;</span><span class="sy0">,</span> <span class="kw2">str</span><span class="br0">&#40;</span><span class="kw3">bytes</span><span class="br0">&#41;</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
        <span class="kw1">except</span>: <span class="kw1">pass</span>                  
&nbsp;
        <span class="kw1">try</span>:
          <span class="co1"># Big endian formats</span>
          <span class="kw1">for</span> fmt <span class="kw1">in</span> formats:
            form <span class="sy0">=</span> formats<span class="br0">&#91;</span>fmt<span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">&quot;format&quot;</span><span class="br0">&#93;</span>
            <span class="kw3">bytes</span> <span class="sy0">=</span> formats<span class="br0">&#91;</span>fmt<span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">&quot;len&quot;</span><span class="br0">&#93;</span>
            field <span class="sy0">=</span> <span class="kw3">struct</span>.<span class="me1">unpack</span><span class="br0">&#40;</span><span class="st0">&quot;&gt;%s&quot;</span> % form<span class="sy0">,</span> f.<span class="me1">read</span><span class="br0">&#40;</span><span class="kw3">bytes</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
            <span class="kw1">print</span> <span class="st0">&quot;%s. Big %s: %s&quot;</span> % <span class="br0">&#40;</span>count<span class="sy0">,</span> fmt<span class="sy0">,</span> field<span class="br0">&#41;</span>
            count +<span class="sy0">=</span> <span class="nu0">1</span>
            f.<span class="me1">seek</span><span class="br0">&#40;</span>start<span class="br0">&#41;</span>
            fields.<span class="me1">append</span><span class="br0">&#40;</span><span class="br0">&#91;</span><span class="kw2">str</span><span class="br0">&#40;</span>field<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">,</span> fmt<span class="sy0">,</span> <span class="st0">&quot;big&quot;</span><span class="sy0">,</span> <span class="kw2">str</span><span class="br0">&#40;</span><span class="kw3">bytes</span><span class="br0">&#41;</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
        <span class="kw1">except</span>: <span class="kw1">pass</span>                  
&nbsp;
        <span class="kw1">print</span> <span class="st0">&quot;%s. Go back to previous&quot;</span> % count
        <span class="kw1">print</span>
        <span class="kw1">print</span> <span class="st0">&quot;Current location: %s&quot;</span> % f.<span class="me1">tell</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
        choice <span class="sy0">=</span> <span class="kw2">raw_input</span><span class="br0">&#40;</span><span class="st0">&quot;Enter the number of one of the above options: &quot;</span><span class="br0">&#41;</span>
        choice <span class="sy0">=</span> <span class="kw2">int</span><span class="br0">&#40;</span>choice.<span class="me1">strip</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
        desc <span class="sy0">=</span> <span class="st0">&quot;&quot;</span>
        <span class="kw1">if</span> choice <span class="sy0">!=</span> count:
          desc <span class="sy0">=</span> <span class="kw2">raw_input</span><span class="br0">&#40;</span><span class="st0">&quot;Enter a field description: &quot;</span><span class="br0">&#41;</span>
          record.<span class="me1">append</span><span class="br0">&#40;</span><span class="st0">&quot;%s<span class="es0">\t</span>&quot;</span> % desc<span class="br0">&#41;</span>
          record.<span class="me1">append</span><span class="br0">&#40;</span><span class="st0">&quot;%s<span class="es0">\t</span>&quot;</span> % fields<span class="br0">&#91;</span>choice-<span class="nu0">1</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
          record.<span class="me1">append</span><span class="br0">&#40;</span><span class="st0">&quot;%s<span class="es0">\t</span>&quot;</span> % fields<span class="br0">&#91;</span>choice-<span class="nu0">1</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
          record.<span class="me1">append</span><span class="br0">&#40;</span><span class="st0">&quot;%s<span class="es0">\t</span>&quot;</span> % fields<span class="br0">&#91;</span>choice-<span class="nu0">1</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="nu0">2</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
          f.<span class="me1">seek</span><span class="br0">&#40;</span>start + <span class="kw2">int</span><span class="br0">&#40;</span>fields<span class="br0">&#91;</span>choice-<span class="nu0">1</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="nu0">3</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
          prev <span class="sy0">=</span> start
          fileDesc.<span class="me1">append</span><span class="br0">&#40;</span>record<span class="br0">&#41;</span>
        <span class="kw1">elif</span> choice <span class="sy0">==</span> count:
            f.<span class="me1">seek</span><span class="br0">&#40;</span>prev<span class="br0">&#41;</span>
            <span class="kw1">print</span> <span class="st0">&quot;Going back to previous field.&quot;</span>          
    f.<span class="me1">close</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
    export<span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="kw1">except</span> <span class="kw2">KeyboardInterrupt</span>:
    <span class="kw1">print</span>
    reverse <span class="sy0">=</span> <span class="kw2">input</span><span class="br0">&#40;</span><span class="st0">&quot;How many records back? &quot;</span><span class="br0">&#41;</span>
    <span class="kw1">for</span> i <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span>reverse<span class="br0">&#41;</span>:
        cached.<span class="me1">pop</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
    <span class="kw3">pickle</span>.<span class="me1">dump</span><span class="br0">&#40;</span>cached<span class="sy0">,</span> <span class="kw2">file</span><span class="br0">&#40;</span>pickleJar<span class="sy0">,</span> <span class="st0">&quot;w&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
    <span class="kw1">print</span> <span class="st0">&quot;The program will exit.  Restart and use cached version.&quot;</span>
&nbsp;
<span class="kw1">except</span>:
    export<span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp;
&nbsp;
&nbsp;
&nbsp;
&nbsp;
&nbsp;</pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/02/GeoJSON.py" class="mediafile mf_py">02/GeoJSON.py</a></dt>
<dd><pre class="code file python"><span class="kw3">gc</span> <span class="sy0">=</span> <span class="br0">&#123;</span> <span class="st0">&quot;type&quot;</span>: <span class="st0">&quot;GeometryCollection&quot;</span><span class="sy0">,</span>
  <span class="st0">&quot;geometries&quot;</span>: <span class="br0">&#91;</span>
    <span class="br0">&#123;</span> <span class="st0">&quot;type&quot;</span>: <span class="st0">&quot;Point&quot;</span><span class="sy0">,</span>
      <span class="st0">&quot;coordinates&quot;</span>: <span class="br0">&#91;</span>-<span class="nu0">89.33</span><span class="sy0">,</span> <span class="nu0">30.0</span><span class="br0">&#93;</span>
      <span class="br0">&#125;</span><span class="sy0">,</span>
    <span class="br0">&#123;</span> <span class="st0">&quot;type&quot;</span>: <span class="st0">&quot;LineString&quot;</span><span class="sy0">,</span>
      <span class="st0">&quot;coordinates&quot;</span>: <span class="br0">&#91;</span> <span class="br0">&#91;</span>-<span class="nu0">89.33</span><span class="sy0">,</span> <span class="nu0">30.30</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span>-<span class="nu0">89.36</span><span class="sy0">,</span> <span class="nu0">30.28</span><span class="br0">&#93;</span> <span class="br0">&#93;</span>
      <span class="br0">&#125;</span>
  <span class="br0">&#93;</span>
<span class="br0">&#125;</span>
<span class="kw1">print</span> <span class="kw3">gc</span>
&nbsp;
&nbsp;</pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/02/structDemo.py" class="mediafile mf_py">02/structDemo.py</a></dt>
<dd><pre class="code file python"><span class="st0">&quot;&quot;&quot;
structDemo.py - demonstrate using the struct module
by reading the bounding box from a shapefile. 
&quot;&quot;&quot;</span>
<span class="kw1">import</span> <span class="kw3">struct</span>
<span class="co1"># Open the shapefile</span>
f <span class="sy0">=</span> <span class="kw2">open</span><span class="br0">&#40;</span><span class="st0">&quot;hancock.shp&quot;</span><span class="sy0">,</span><span class="st0">&quot;rb&quot;</span><span class="br0">&#41;</span>
<span class="co1"># Go to the start of the</span>
<span class="co1"># bounding box coordinates</span>
f.<span class="me1">seek</span><span class="br0">&#40;</span><span class="nu0">36</span><span class="br0">&#41;</span>
<span class="co1"># Read min-x,min-y,max-x,max-y</span>
<span class="co1"># in little endian format</span>
<span class="kw1">print</span> <span class="kw3">struct</span>.<span class="me1">unpack</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;d&quot;</span><span class="sy0">,</span> f.<span class="me1">read</span><span class="br0">&#40;</span><span class="nu0">8</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
<span class="kw1">print</span> <span class="kw3">struct</span>.<span class="me1">unpack</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;d&quot;</span><span class="sy0">,</span> f.<span class="me1">read</span><span class="br0">&#40;</span><span class="nu0">8</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
<span class="kw1">print</span> <span class="kw3">struct</span>.<span class="me1">unpack</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;d&quot;</span><span class="sy0">,</span> f.<span class="me1">read</span><span class="br0">&#40;</span><span class="nu0">8</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
<span class="kw1">print</span> <span class="kw3">struct</span>.<span class="me1">unpack</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;d&quot;</span><span class="sy0">,</span> f.<span class="me1">read</span><span class="br0">&#40;</span><span class="nu0">8</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
<span class="co1"># Read all 4 values at once</span>
f.<span class="me1">seek</span><span class="br0">&#40;</span><span class="nu0">36</span><span class="br0">&#41;</span>
<span class="kw1">print</span> <span class="kw3">struct</span>.<span class="me1">unpack</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;dddd&quot;</span><span class="sy0">,</span> f.<span class="me1">read</span><span class="br0">&#40;</span><span class="nu0">32</span><span class="br0">&#41;</span><span class="br0">&#41;</span></pre>
</dd></dl>
</div>
<!-- EDIT2 SECTION "Some examples of code" [55-454] -->
<h2 class="sectionedit3" id="playing_with_network">Playing with network</h2>
<div class="level2">

<p>
Python is a general purpose language, so it can be used for network applications.
</p>
<dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/04/01_urlretrieve.py" class="mediafile mf_py">04/01_urlretrieve.py</a></dt>
<dd><pre class="code file python"><span class="co1"># Retrieve a file using urllib</span>
<span class="kw1">import</span> <span class="kw3">urllib</span>
url <span class="sy0">=</span> <span class="st0">&quot;http://spatial-ecology.net/dokuwiki/lib/exe/fetch.php?media=wiki:python:hancock.zip&quot;</span>
fileName <span class="sy0">=</span> <span class="st0">&quot;hancock.zip&quot;</span>
<span class="kw3">urllib</span>.<span class="me1">urlretrieve</span><span class="br0">&#40;</span>url<span class="sy0">,</span> fileName<span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/04/02_earthquake-data.py" class="mediafile mf_py">04/02_earthquake-data.py</a></dt>
<dd><pre class="code file python"><span class="co1"># Read data from a url - in this case recent USGS earthquakes</span>
<span class="kw1">import</span> <span class="kw3">urllib</span>
url <span class="sy0">=</span> <span class="st0">&quot;http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_hour.csv&quot;</span>
earthquakes <span class="sy0">=</span> <span class="kw3">urllib</span>.<span class="me1">urlopen</span><span class="br0">&#40;</span>url<span class="br0">&#41;</span>
<span class="co1"># Read the first two earthquakes</span>
<span class="kw1">print</span> earthquakes.<span class="kw3">readline</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="kw1">print</span> earthquakes.<span class="kw3">readline</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="co1"># Iterate through the rest</span>
<span class="kw1">for</span> record <span class="kw1">in</span> earthquakes: 
  <span class="kw1">print</span> record</pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/04/03_ftp.py" class="mediafile mf_py">04/03_ftp.py</a></dt>
<dd><pre class="code file python"><span class="co1"># Read tsunami monitoring data via ftp</span>
<span class="kw1">import</span> <span class="kw3">ftplib</span>
server <span class="sy0">=</span> <span class="st0">&quot;ftp.ngdc.noaa.gov&quot;</span>
<span class="kw2">dir</span> <span class="sy0">=</span> <span class="st0">&quot;hazards/DART/20070815_peru&quot;</span>
fileName <span class="sy0">=</span> <span class="st0">&quot;21415_from_20070727_08_55_15_tides.txt&quot;</span>
ftp <span class="sy0">=</span> <span class="kw3">ftplib</span>.<span class="me1">FTP</span><span class="br0">&#40;</span>server<span class="br0">&#41;</span>
ftp.<span class="me1">login</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
ftp.<span class="me1">cwd</span><span class="br0">&#40;</span><span class="kw2">dir</span><span class="br0">&#41;</span>
out <span class="sy0">=</span> <span class="kw2">open</span><span class="br0">&#40;</span>fileName<span class="sy0">,</span> <span class="st0">&quot;wb&quot;</span><span class="br0">&#41;</span>
ftp.<span class="me1">retrbinary</span><span class="br0">&#40;</span><span class="st0">&quot;RETR &quot;</span> + fileName<span class="sy0">,</span> out.<span class="me1">write</span><span class="br0">&#41;</span>
out.<span class="me1">close</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
dart <span class="sy0">=</span> <span class="kw2">open</span><span class="br0">&#40;</span>fileName<span class="br0">&#41;</span>
<span class="kw1">for</span> line <span class="kw1">in</span> dart:
  <span class="kw1">if</span> <span class="st0">&quot;LAT,&quot;</span> <span class="kw1">in</span> line:
    <span class="kw1">print</span> line
    <span class="kw1">break</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/04/04_ftp-url.py" class="mediafile mf_py">04/04_ftp-url.py</a></dt>
<dd><pre class="code file python"><span class="co1"># Read FTP data via the web</span>
<span class="kw1">import</span> <span class="kw3">urllib</span>
ftpURL <span class="sy0">=</span> <span class="st0">&quot;ftp://anonymous:anonymous@&quot;</span>
server <span class="sy0">=</span> <span class="st0">&quot;ftp.ngdc.noaa.gov&quot;</span>
<span class="kw2">dir</span> <span class="sy0">=</span> <span class="st0">&quot;hazards/DART/20070815_peru&quot;</span>
fileName <span class="sy0">=</span> <span class="st0">&quot;21415_from_20070727_08_55_15_tides.txt&quot;</span>
dart <span class="sy0">=</span> <span class="kw3">urllib</span>.<span class="me1">urlopen</span><span class="br0">&#40;</span>ftpURL + server + <span class="st0">&quot;/&quot;</span> + <span class="kw2">dir</span> + <span class="st0">&quot;/&quot;</span> + fileName<span class="br0">&#41;</span>
<span class="kw1">for</span> line <span class="kw1">in</span> dart:
  <span class="kw1">if</span> <span class="st0">&quot;LAT,&quot;</span> <span class="kw1">in</span> line:
    <span class="kw1">print</span> line
    <span class="kw1">break</span></pre>
</dd></dl>
</div>
<!-- EDIT3 SECTION "Playing with network" [455-899] -->
<h2 class="sectionedit4" id="zip_files_and_others">Zip files and others</h2>
<div class="level2">

<p>
It can be used to manipulate archive files:
</p>
<dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/04/05_zipfile.py" class="mediafile mf_py">04/05_zipfile.py</a></dt>
<dd><pre class="code file python"><span class="co1"># Unzip a shapefile</span>
<span class="kw1">import</span> <span class="kw3">zipfile</span>
<span class="kw2">zip</span> <span class="sy0">=</span> <span class="kw2">open</span><span class="br0">&#40;</span><span class="st0">&quot;hancock.zip&quot;</span><span class="sy0">,</span> <span class="st0">&quot;rb&quot;</span><span class="br0">&#41;</span>
zipShape <span class="sy0">=</span> <span class="kw3">zipfile</span>.<span class="me1">ZipFile</span><span class="br0">&#40;</span><span class="kw2">zip</span><span class="br0">&#41;</span>
shpName<span class="sy0">,</span> shxName<span class="sy0">,</span> dbfName <span class="sy0">=</span> zipShape.<span class="me1">namelist</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
shpFile <span class="sy0">=</span> <span class="kw2">open</span><span class="br0">&#40;</span>shpName<span class="sy0">,</span> <span class="st0">&quot;wb&quot;</span><span class="br0">&#41;</span>
shxFile <span class="sy0">=</span> <span class="kw2">open</span><span class="br0">&#40;</span>shxName<span class="sy0">,</span> <span class="st0">&quot;wb&quot;</span><span class="br0">&#41;</span>
dbfFile <span class="sy0">=</span> <span class="kw2">open</span><span class="br0">&#40;</span>dbfName<span class="sy0">,</span> <span class="st0">&quot;wb&quot;</span><span class="br0">&#41;</span>
shpFile.<span class="me1">write</span><span class="br0">&#40;</span>zipShape.<span class="me1">read</span><span class="br0">&#40;</span>shpName<span class="br0">&#41;</span><span class="br0">&#41;</span>
shxFile.<span class="me1">write</span><span class="br0">&#40;</span>zipShape.<span class="me1">read</span><span class="br0">&#40;</span>shxName<span class="br0">&#41;</span><span class="br0">&#41;</span>
dbfFile.<span class="me1">write</span><span class="br0">&#40;</span>zipShape.<span class="me1">read</span><span class="br0">&#40;</span>dbfName<span class="br0">&#41;</span><span class="br0">&#41;</span>
shpFile.<span class="me1">close</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
shxFile.<span class="me1">close</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
dbfFile.<span class="me1">close</span><span class="br0">&#40;</span><span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/04/06_zipfile-loop.py" class="mediafile mf_py">04/06_zipfile-loop.py</a></dt>
<dd><pre class="code file python"><span class="co1"># Unzip a shapefile with a for loop</span>
<span class="kw1">import</span> <span class="kw3">zipfile</span>
<span class="kw2">zip</span> <span class="sy0">=</span> <span class="kw2">open</span><span class="br0">&#40;</span><span class="st0">&quot;hancock.zip&quot;</span><span class="sy0">,</span> <span class="st0">&quot;rb&quot;</span><span class="br0">&#41;</span>
zipShape <span class="sy0">=</span> <span class="kw3">zipfile</span>.<span class="me1">ZipFile</span><span class="br0">&#40;</span><span class="kw2">zip</span><span class="br0">&#41;</span>
<span class="kw1">for</span> fileName <span class="kw1">in</span> zipShape.<span class="me1">namelist</span><span class="br0">&#40;</span><span class="br0">&#41;</span>:
  out <span class="sy0">=</span> <span class="kw2">open</span><span class="br0">&#40;</span>fileName<span class="sy0">,</span> <span class="st0">&quot;wb&quot;</span><span class="br0">&#41;</span>
  out.<span class="me1">write</span><span class="br0">&#40;</span>zipShape.<span class="me1">read</span><span class="br0">&#40;</span>fileName<span class="br0">&#41;</span><span class="br0">&#41;</span>
  out.<span class="me1">close</span><span class="br0">&#40;</span><span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/04/07_tarfile-create.py" class="mediafile mf_py">04/07_tarfile-create.py</a></dt>
<dd><pre class="code file python"><span class="co1"># Add a shapefile to a tar archive</span>
<span class="kw1">import</span> <span class="kw3">tarfile</span>
tar <span class="sy0">=</span> <span class="kw3">tarfile</span>.<span class="kw2">open</span><span class="br0">&#40;</span><span class="st0">&quot;hancock.tar.gz&quot;</span><span class="sy0">,</span> <span class="st0">&quot;w:gz&quot;</span><span class="br0">&#41;</span>
tar.<span class="me1">add</span><span class="br0">&#40;</span><span class="st0">&quot;hancock.shp&quot;</span><span class="br0">&#41;</span>
tar.<span class="me1">add</span><span class="br0">&#40;</span><span class="st0">&quot;hancock.shx&quot;</span><span class="br0">&#41;</span>
tar.<span class="me1">add</span><span class="br0">&#40;</span><span class="st0">&quot;hancock.dbf&quot;</span><span class="br0">&#41;</span>
tar.<span class="me1">close</span><span class="br0">&#40;</span><span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/04/08_tarfile-extract.py" class="mediafile mf_py">04/08_tarfile-extract.py</a></dt>
<dd><pre class="code file python"><span class="co1"># Extract a shapefile from a gzipped tar archive</span>
<span class="kw1">import</span> <span class="kw3">tarfile</span>
tar <span class="sy0">=</span> <span class="kw3">tarfile</span>.<span class="kw2">open</span><span class="br0">&#40;</span><span class="st0">&quot;hancock.tar.gz&quot;</span><span class="sy0">,</span> <span class="st0">&quot;r:gz&quot;</span><span class="br0">&#41;</span>
tar.<span class="me1">extractall</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
tar.<span class="me1">close</span><span class="br0">&#40;</span><span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/04/09_cloud-zipfile.py" class="mediafile mf_py">04/09_cloud-zipfile.py</a></dt>
<dd><pre class="code file python"><span class="co1"># Extract a zipped shapefile via a url</span>
<span class="kw1">import</span> <span class="kw3">urllib</span>
<span class="kw1">import</span> <span class="kw3">zipfile</span>
<span class="kw1">import</span> <span class="kw3">StringIO</span>
<span class="kw1">import</span> <span class="kw3">struct</span>
url <span class="sy0">=</span> <span class="st0">&quot;http://spatial-ecology.net/dokuwiki/lib/exe/fetch.php?media=wiki:python:hancock.zip&quot;</span>
cloudshape <span class="sy0">=</span> <span class="kw3">urllib</span>.<span class="me1">urlopen</span><span class="br0">&#40;</span>url<span class="br0">&#41;</span>
memoryshape <span class="sy0">=</span> <span class="kw3">StringIO</span>.<span class="kw3">StringIO</span><span class="br0">&#40;</span>cloudshape.<span class="me1">read</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
zipshape <span class="sy0">=</span> <span class="kw3">zipfile</span>.<span class="me1">ZipFile</span><span class="br0">&#40;</span>memoryshape<span class="br0">&#41;</span>
cloudshp <span class="sy0">=</span> zipshape.<span class="me1">read</span><span class="br0">&#40;</span><span class="st0">&quot;hancock.shp&quot;</span><span class="br0">&#41;</span>
<span class="co1"># Access Python string as an array</span>
<span class="co1"># read shapefile boundingbox</span>
<span class="kw3">struct</span>.<span class="me1">unpack</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;dddd&quot;</span><span class="sy0">,</span> cloudshp<span class="br0">&#91;</span><span class="nu0">36</span>:<span class="nu0">68</span><span class="br0">&#93;</span><span class="br0">&#41;</span></pre>
</dd></dl>
</div>
<!-- EDIT4 SECTION "Zip files and others" [900-1405] -->
<h2 class="sectionedit5" id="playing_with_xml">Playing with XML</h2>
<div class="level2">

<p>
Many useful file formats are of XML type (e.g. KML) and Python has a good deals of modules to manage them:
</p>
<dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/04/10_kml-minidom.py" class="mediafile mf_py">04/10_kml-minidom.py</a></dt>
<dd><pre class="code file python"><span class="co1"># Parse KML and count placemarks</span>
<span class="kw1">from</span> <span class="kw3">xml</span>.<span class="me1">dom</span> <span class="kw1">import</span> minidom
kml <span class="sy0">=</span> minidom.<span class="me1">parse</span><span class="br0">&#40;</span><span class="st0">&quot;time-stamp-point.kml&quot;</span><span class="br0">&#41;</span>
Placemarks <span class="sy0">=</span> kml.<span class="me1">getElementsByTagName</span><span class="br0">&#40;</span><span class="st0">&quot;Placemark&quot;</span><span class="br0">&#41;</span>
<span class="co1"># Count placemarks</span>
<span class="kw1">print</span> <span class="kw2">len</span><span class="br0">&#40;</span>Placemarks<span class="br0">&#41;</span>
<span class="co1"># Check the first one</span>
<span class="kw1">print</span> Placemarks<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>
<span class="kw1">print</span> Placemarks<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>.<span class="me1">toxml</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="co1"># Extract the coordinates</span>
coordinates <span class="sy0">=</span> Placemarks<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>.<span class="me1">getElementsByTagName</span><span class="br0">&#40;</span><span class="st0">&quot;coordinates&quot;</span><span class="br0">&#41;</span>
point <span class="sy0">=</span> coordinates<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>.<span class="me1">firstChild</span>.<span class="me1">data</span>
<span class="kw1">print</span> point
<span class="co1"># Extract x,y,z values as floats</span>
x<span class="sy0">,</span>y<span class="sy0">,</span>z <span class="sy0">=</span> point.<span class="me1">split</span><span class="br0">&#40;</span><span class="st0">&quot;,&quot;</span><span class="br0">&#41;</span>
<span class="kw1">print</span> x
<span class="kw1">print</span> y
<span class="kw1">print</span> z
x <span class="sy0">=</span> <span class="kw2">float</span><span class="br0">&#40;</span>x<span class="br0">&#41;</span>
y <span class="sy0">=</span> <span class="kw2">float</span><span class="br0">&#40;</span>y<span class="br0">&#41;</span>
z <span class="sy0">=</span> <span class="kw2">float</span><span class="br0">&#40;</span>z<span class="br0">&#41;</span>
<span class="kw1">print</span> x<span class="sy0">,</span>y<span class="sy0">,</span>z
<span class="co1"># Use list comprehensions for efficiency</span>
x<span class="sy0">,</span>y<span class="sy0">,</span>z <span class="sy0">=</span> <span class="br0">&#91;</span><span class="kw2">float</span><span class="br0">&#40;</span>c<span class="br0">&#41;</span> <span class="kw1">for</span> c <span class="kw1">in</span> point.<span class="me1">split</span><span class="br0">&#40;</span><span class="st0">&quot;,&quot;</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
<span class="kw1">print</span> x<span class="sy0">,</span>y<span class="sy0">,</span>z</pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/04/12_make-kml-strings.py" class="mediafile mf_py">04/12_make-kml-strings.py</a></dt>
<dd><pre class="code file python"><span class="co1"># Build KML manually using strings</span>
<span class="kw3">xml</span> <span class="sy0">=</span> <span class="st0">&quot;&quot;&quot;&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&quot;&quot;&quot;</span>
<span class="kw3">xml</span> +<span class="sy0">=</span> <span class="st0">&quot;&quot;&quot;&lt;kml xmlns=&quot;http://www.opengis.net/kml/2.2&quot;&gt;&quot;&quot;&quot;</span>
<span class="kw3">xml</span> +<span class="sy0">=</span> <span class="st0">&quot;&quot;&quot;  &lt;Placemark&gt;&quot;&quot;&quot;</span>
<span class="kw3">xml</span> +<span class="sy0">=</span> <span class="st0">&quot;&quot;&quot;    &lt;name&gt;Office&lt;/name&gt;&quot;&quot;&quot;</span>
<span class="kw3">xml</span> +<span class="sy0">=</span> <span class="st0">&quot;&quot;&quot;    &lt;description&gt;Office Building&lt;/description&gt;&quot;&quot;&quot;</span>
<span class="kw3">xml</span> +<span class="sy0">=</span> <span class="st0">&quot;&quot;&quot;    &lt;Point&gt;&quot;&quot;&quot;</span>
<span class="kw3">xml</span> +<span class="sy0">=</span> <span class="st0">&quot;&quot;&quot;      &lt;coordinates&gt;&quot;&quot;&quot;</span>
<span class="kw3">xml</span> +<span class="sy0">=</span> <span class="st0">&quot;&quot;&quot;        -122.087461,37.422069&quot;&quot;&quot;</span>
<span class="kw3">xml</span> +<span class="sy0">=</span> <span class="st0">&quot;&quot;&quot;      &lt;/coordinates&gt;&quot;&quot;&quot;</span>
<span class="kw3">xml</span> +<span class="sy0">=</span> <span class="st0">&quot;&quot;&quot;    &lt;/Point&gt;&quot;&quot;&quot;</span>
<span class="kw3">xml</span> +<span class="sy0">=</span> <span class="st0">&quot;&quot;&quot;  &lt;/Placemark&gt;&quot;&quot;&quot;</span>
<span class="kw3">xml</span> +<span class="sy0">=</span> <span class="st0">&quot;&quot;&quot;&lt;/kml&gt;&quot;&quot;&quot;</span>
<span class="kw1">print</span> <span class="kw3">xml</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/04/13_make-kml-etree.py" class="mediafile mf_py">04/13_make-kml-etree.py</a></dt>
<dd><pre class="code file python"><span class="co1"># Build kml with eTree</span>
<span class="kw1">try</span>:
    <span class="kw1">import</span> <span class="kw3">xml</span>.<span class="me1">etree</span>.<span class="me1">cElementTree</span> <span class="kw1">as</span> ET
<span class="kw1">except</span> <span class="kw2">ImportError</span>:
    <span class="kw1">import</span> <span class="kw3">xml</span>.<span class="me1">etree</span>.<span class="me1">ElementTree</span> <span class="kw1">as</span> ET      
&nbsp;
root <span class="sy0">=</span> ET.<span class="me1">Element</span><span class="br0">&#40;</span><span class="st0">&quot;kml&quot;</span><span class="br0">&#41;</span>
root.<span class="me1">attrib</span><span class="br0">&#91;</span><span class="st0">&quot;xmlns&quot;</span><span class="br0">&#93;</span> <span class="sy0">=</span> <span class="st0">&quot;http://www.opengis.net/kml/2.2&quot;</span>
placemark <span class="sy0">=</span> ET.<span class="me1">SubElement</span><span class="br0">&#40;</span>root<span class="sy0">,</span> <span class="st0">&quot;Placemark&quot;</span><span class="br0">&#41;</span>
office <span class="sy0">=</span> ET.<span class="me1">SubElement</span><span class="br0">&#40;</span>placemark<span class="sy0">,</span> <span class="st0">&quot;name&quot;</span><span class="br0">&#41;</span>
office.<span class="me1">text</span> <span class="sy0">=</span> <span class="st0">&quot;Office&quot;</span>
point <span class="sy0">=</span> ET.<span class="me1">SubElement</span><span class="br0">&#40;</span>placemark<span class="sy0">,</span> <span class="st0">&quot;Point&quot;</span><span class="br0">&#41;</span>
coordinates <span class="sy0">=</span> ET.<span class="me1">SubElement</span><span class="br0">&#40;</span>point<span class="sy0">,</span> <span class="st0">&quot;coordinates&quot;</span><span class="br0">&#41;</span>
coordinates.<span class="me1">text</span> <span class="sy0">=</span> <span class="st0">&quot;-122.087461,37.422069&quot;</span>
tree <span class="sy0">=</span> ET.<span class="me1">ElementTree</span><span class="br0">&#40;</span>root<span class="br0">&#41;</span>
tree.<span class="me1">write</span><span class="br0">&#40;</span><span class="st0">&quot;placemark.kml&quot;</span><span class="sy0">,</span> xml_declaration<span class="sy0">=</span><span class="kw2">True</span><span class="sy0">,</span>encoding<span class="sy0">=</span><span class="st0">'utf-8'</span><span class="sy0">,</span>method<span class="sy0">=</span><span class="st0">&quot;xml&quot;</span><span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/04/14_gpx-soup.py" class="mediafile mf_py">04/14_gpx-soup.py</a></dt>
<dd><pre class="code file python"><span class="co1"># Parse broken GPX data with BeautifulSoup</span>
<span class="kw1">from</span> BeautifulSoup <span class="kw1">import</span> BeautifulStoneSoup
gpx <span class="sy0">=</span> <span class="kw2">open</span><span class="br0">&#40;</span><span class="st0">&quot;broken_data.gpx&quot;</span><span class="br0">&#41;</span>
soup <span class="sy0">=</span> BeautifulStoneSoup<span class="br0">&#40;</span>gpx.<span class="me1">read</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
<span class="co1"># Check the first track point</span>
<span class="kw1">print</span> soup.<span class="me1">trkpt</span>
<span class="co1"># Find the rest of the track points and count them</span>
tracks <span class="sy0">=</span> soup.<span class="me1">findAll</span><span class="br0">&#40;</span><span class="st0">&quot;trkpt&quot;</span><span class="br0">&#41;</span>
<span class="kw1">print</span> <span class="kw2">len</span><span class="br0">&#40;</span>tracks<span class="br0">&#41;</span>                                                                              
<span class="co1"># Save the fixed xml file</span>
fixed <span class="sy0">=</span> <span class="kw2">open</span><span class="br0">&#40;</span><span class="st0">&quot;fixed_data.gpx&quot;</span><span class="sy0">,</span> <span class="st0">&quot;w&quot;</span><span class="br0">&#41;</span>
fixed.<span class="me1">write</span><span class="br0">&#40;</span>soup.<span class="me1">prettify</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
fixed.<span class="me1">close</span><span class="br0">&#40;</span><span class="br0">&#41;</span></pre>
</dd></dl>
</div>
<!-- EDIT5 SECTION "Playing with XML" [1406-1967] -->
<h2 class="sectionedit6" id="playing_with_some_geospatial_modules">Playing with some geospatial modules</h2>
<div class="level2">

<p>
Some very basic geospatial snippets of code;
</p>
<dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/04/15_shapely-wkt.py" class="mediafile mf_py">04/15_shapely-wkt.py</a></dt>
<dd><pre class="code file python"><span class="kw1">import</span> shapely.<span class="me1">wkt</span>
wktPoly <span class="sy0">=</span> <span class="st0">&quot;POLYGON((0 0,4 0,4 4,0 4,0 0),(1 1, 2 1, 2 2, 1 2,1 1))&quot;</span>
poly <span class="sy0">=</span> shapely.<span class="me1">wkt</span>.<span class="me1">loads</span><span class="br0">&#40;</span>wktPoly<span class="br0">&#41;</span>
<span class="kw1">print</span> poly.<span class="me1">area</span>
<span class="kw1">print</span> poly.<span class="me1">wkt</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/04/16_ogr-wkt.py" class="mediafile mf_py">04/16_ogr-wkt.py</a></dt>
<dd><pre class="code file python"><span class="co1"># Convert a shapefile to WKT using ogr</span>
<span class="kw1">from</span> osgeo <span class="kw1">import</span> ogr
shape <span class="sy0">=</span> ogr.<span class="me1">Open</span><span class="br0">&#40;</span><span class="st0">&quot;polygon.shp&quot;</span><span class="br0">&#41;</span>
layer <span class="sy0">=</span> shape.<span class="me1">GetLayer</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
feature <span class="sy0">=</span> layer.<span class="me1">GetNextFeature</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
geom <span class="sy0">=</span> feature.<span class="me1">GetGeometryRef</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
wkt <span class="sy0">=</span> geom.<span class="me1">ExportToWkt</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="co1"># View the WKT</span>
<span class="kw1">print</span> wkt
<span class="co1"># Ingest the WKT we made and check the envelope</span>
poly <span class="sy0">=</span> ogr.<span class="me1">CreateGeometryFromWkt</span><span class="br0">&#40;</span>wkt<span class="br0">&#41;</span>
<span class="kw1">print</span> poly.<span class="me1">GetEnvelope</span><span class="br0">&#40;</span><span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/04/17_json.py" class="mediafile mf_py">04/17_json.py</a></dt>
<dd><pre class="code file python"><span class="co1"># Parse GeoJson data</span>
jsdata <span class="sy0">=</span> <span class="st0">&quot;&quot;&quot;{ 
&quot;type&quot;: &quot;Feature&quot;, 
&quot;id&quot;: &quot;OpenLayers.Feature.Vector_314&quot;, 
&quot;properties&quot;: {}, 
&quot;geometry&quot;: { 
    &quot;type&quot;: &quot;Point&quot;, 
    &quot;coordinates&quot;: [ 97.03125, 39.7265625 ] 
}, 
&quot;crs&quot;: { 
    &quot;type&quot;: &quot;name&quot;, 
    &quot;properties&quot;: { 
        &quot;name&quot;: &quot;urn:ogc:def:crs:OGC:1.3:CRS84&quot; 
    } 
} 
}&quot;&quot;&quot;</span>
<span class="co1"># Try to eval() the data</span>
point <span class="sy0">=</span> <span class="kw2">eval</span><span class="br0">&#40;</span>jsdata<span class="br0">&#41;</span>
<span class="kw1">print</span> point<span class="br0">&#91;</span><span class="st0">&quot;geometry&quot;</span><span class="br0">&#93;</span>
<span class="co1"># Use the json module</span>
<span class="kw1">import</span> json
<span class="kw1">print</span> json.<span class="me1">loads</span><span class="br0">&#40;</span>jsdata<span class="br0">&#41;</span>
<span class="co1"># Parse and then dump GeoJSON</span>
pydata <span class="sy0">=</span> json.<span class="me1">loads</span><span class="br0">&#40;</span>jsdata<span class="br0">&#41;</span>
<span class="kw1">print</span> json.<span class="me1">dumps</span><span class="br0">&#40;</span>pydata<span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/04/18_geojson.py" class="mediafile mf_py">04/18_geojson.py</a></dt>
<dd><pre class="code file python"><span class="co1"># Read and write GeoJson using the geojson module </span>
<span class="kw1">import</span> geojson
p <span class="sy0">=</span> geojson.<span class="me1">Point</span><span class="br0">&#40;</span><span class="br0">&#91;</span>-<span class="nu0">92</span><span class="sy0">,</span> <span class="nu0">37</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
geojs <span class="sy0">=</span> geojson.<span class="me1">dumps</span><span class="br0">&#40;</span>p<span class="br0">&#41;</span>
<span class="kw1">print</span> geojs
<span class="co1"># Use __geo_interface__ between geojson and shapely</span>
<span class="kw1">from</span> shapely.<span class="me1">geometry</span> <span class="kw1">import</span> asShape
point <span class="sy0">=</span> asShape<span class="br0">&#40;</span>p<span class="br0">&#41;</span>
<span class="kw1">print</span> point.<span class="me1">wkt</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/04/19_ogr.py" class="mediafile mf_py">04/19_ogr.py</a></dt>
<dd><pre class="code file python"><span class="co1">#Examine a shapefile with ogr                                                                        </span>
&nbsp;
<span class="kw1">from</span> osgeo <span class="kw1">import</span> ogr
<span class="co1"># open the shapefile</span>
shp <span class="sy0">=</span> ogr.<span class="me1">Open</span><span class="br0">&#40;</span><span class="st0">&quot;point.shp&quot;</span><span class="br0">&#41;</span>
<span class="co1"># Get the layer</span>
layer <span class="sy0">=</span> shp.<span class="me1">GetLayer</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="co1"># Loop through the features</span>
<span class="co1"># and print information about them</span>
<span class="kw1">for</span> feature <span class="kw1">in</span> layer:
  geometry <span class="sy0">=</span> feature.<span class="me1">GetGeometryRef</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
  <span class="kw1">print</span> geometry.<span class="me1">GetX</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span> geometry.<span class="me1">GetY</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span> feature.<span class="me1">GetField</span><span class="br0">&#40;</span><span class="st0">&quot;FIRST_FLD&quot;</span><span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/04/20_pyshp.py" class="mediafile mf_py">04/20_pyshp.py</a></dt>
<dd><pre class="code file python"><span class="co1"># Examine a shapefile with pyshp                                                                                     import shapefile</span>
<span class="kw1">import</span> shapefile
&nbsp;
shp <span class="sy0">=</span> shapefile.<span class="me1">Reader</span><span class="br0">&#40;</span><span class="st0">&quot;point&quot;</span><span class="br0">&#41;</span>
<span class="kw1">for</span> feature <span class="kw1">in</span> shp.<span class="me1">shapeRecords</span><span class="br0">&#40;</span><span class="br0">&#41;</span>:
  point <span class="sy0">=</span> feature.<span class="me1">shape</span>.<span class="me1">points</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>
  rec <span class="sy0">=</span> feature.<span class="me1">record</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>
  <span class="kw1">print</span> point<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="sy0">,</span> point<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span><span class="sy0">,</span> rec</pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/04/21_dbfpy.py" class="mediafile mf_py">04/21_dbfpy.py</a></dt>
<dd><pre class="code file python"><span class="co1"># Examine and update a dbf file with dbfpy</span>
<span class="kw1">from</span> dbfpy <span class="kw1">import</span> dbf
db <span class="sy0">=</span> dbf.<span class="me1">Dbf</span><span class="br0">&#40;</span><span class="st0">&quot;GIS_CensusTract_poly.dbf&quot;</span><span class="br0">&#41;</span>
<span class="kw1">print</span> db<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>
rec <span class="sy0">=</span> db<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>
field <span class="sy0">=</span> rec<span class="br0">&#91;</span><span class="st0">&quot;POPULAT10&quot;</span><span class="br0">&#93;</span>
rec<span class="br0">&#91;</span><span class="st0">&quot;POPULAT10&quot;</span><span class="br0">&#93;</span> <span class="sy0">=</span> field
rec<span class="br0">&#91;</span><span class="st0">&quot;POPULAT10&quot;</span><span class="br0">&#93;</span> <span class="sy0">=</span> field+<span class="nu0">1</span>
rec.<span class="me1">store</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="kw1">del</span> rec
<span class="kw1">print</span> db<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">&quot;POPULAT10&quot;</span><span class="br0">&#93;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/04/22_shapely.py" class="mediafile mf_py">04/22_shapely.py</a></dt>
<dd><pre class="code file python"><span class="co1"># Create a polygon buffer with shapely</span>
&nbsp;
<span class="kw1">from</span> shapely <span class="kw1">import</span> wkt<span class="sy0">,</span> geometry
<span class="co1"># Create a simple wkt polygon string</span>
wktPoly <span class="sy0">=</span> <span class="st0">&quot;POLYGON((0 0,4 0,4 4,0 4,0 0))&quot;</span>
<span class="co1"># Load the polygon into shapely</span>
poly <span class="sy0">=</span> wkt.<span class="me1">loads</span><span class="br0">&#40;</span>wktPoly<span class="br0">&#41;</span>
<span class="co1"># Check the area</span>
<span class="kw1">print</span> poly.<span class="me1">area</span>
<span class="co1"># Create a buffer</span>
buf <span class="sy0">=</span> poly.<span class="me1">buffer</span><span class="br0">&#40;</span><span class="nu0">5.0</span><span class="br0">&#41;</span>
<span class="co1"># Get the buffer area</span>
<span class="kw1">print</span> buf.<span class="me1">area</span>
<span class="co1"># Compute the difference between the two</span>
<span class="kw1">print</span> buf.<span class="me1">difference</span><span class="br0">&#40;</span>poly<span class="br0">&#41;</span>.<span class="me1">area</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/04/23_gdal.py" class="mediafile mf_py">04/23_gdal.py</a></dt>
<dd><pre class="code file python"><span class="co1"># Open a raster with gal</span>
<span class="kw1">from</span> osgeo <span class="kw1">import</span> gdal
raster <span class="sy0">=</span> gdal.<span class="me1">Open</span><span class="br0">&#40;</span><span class="st0">&quot;SatImage.tif&quot;</span><span class="br0">&#41;</span>
<span class="kw1">print</span> raster.<span class="me1">RasterCount</span>
<span class="kw1">print</span> raster.<span class="me1">RasterXSize</span>
<span class="kw1">print</span> raster.<span class="me1">RasterYSize</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/04/24_numpy.py" class="mediafile mf_py">04/24_numpy.py</a></dt>
<dd><pre class="code file python"><span class="co1"># Numpy/gdalnumeric - Read an image, extract a band, save a new image</span>
<span class="kw1">from</span> osgeo <span class="kw1">import</span> gdalnumeric
srcArray <span class="sy0">=</span> gdalnumeric.<span class="me1">LoadFile</span><span class="br0">&#40;</span><span class="st0">&quot;SatImage.tif&quot;</span><span class="br0">&#41;</span>
band1 <span class="sy0">=</span> srcArray<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>
gdalnumeric.<span class="me1">SaveArray</span><span class="br0">&#40;</span>band1<span class="sy0">,</span> <span class="st0">&quot;band1.jpg&quot;</span><span class="sy0">,</span> format<span class="sy0">=</span><span class="st0">&quot;JPEG&quot;</span><span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/04/25_PIL.py" class="mediafile mf_py">04/25_PIL.py</a></dt>
<dd><pre class="code file python"><span class="co1"># Rasterize a shapefile with PIL</span>
<span class="kw1">import</span> shapefile
<span class="kw1">import</span> Image<span class="sy0">,</span> ImageDraw
r <span class="sy0">=</span> shapefile.<span class="me1">Reader</span><span class="br0">&#40;</span><span class="st0">&quot;hancock.shp&quot;</span><span class="br0">&#41;</span>
xdist <span class="sy0">=</span> r.<span class="me1">bbox</span><span class="br0">&#91;</span><span class="nu0">2</span><span class="br0">&#93;</span> - r.<span class="me1">bbox</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>
ydist <span class="sy0">=</span> r.<span class="me1">bbox</span><span class="br0">&#91;</span><span class="nu0">3</span><span class="br0">&#93;</span> - r.<span class="me1">bbox</span><span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span>
iwidth <span class="sy0">=</span> <span class="nu0">400</span>
iheight <span class="sy0">=</span> <span class="nu0">600</span>
xratio <span class="sy0">=</span> iwidth/xdist
yratio <span class="sy0">=</span> iheight/ydist
pixels <span class="sy0">=</span> <span class="br0">&#91;</span><span class="br0">&#93;</span>
<span class="kw1">for</span> x<span class="sy0">,</span>y <span class="kw1">in</span> r.<span class="me1">shapes</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>.<span class="me1">points</span>:
  px <span class="sy0">=</span> <span class="kw2">int</span><span class="br0">&#40;</span>iwidth - <span class="br0">&#40;</span><span class="br0">&#40;</span>r.<span class="me1">bbox</span><span class="br0">&#91;</span><span class="nu0">2</span><span class="br0">&#93;</span> - x<span class="br0">&#41;</span> * xratio<span class="br0">&#41;</span><span class="br0">&#41;</span>
  py <span class="sy0">=</span> <span class="kw2">int</span><span class="br0">&#40;</span><span class="br0">&#40;</span>r.<span class="me1">bbox</span><span class="br0">&#91;</span><span class="nu0">3</span><span class="br0">&#93;</span> - y<span class="br0">&#41;</span> * yratio<span class="br0">&#41;</span>
  pixels.<span class="me1">append</span><span class="br0">&#40;</span><span class="br0">&#40;</span>px<span class="sy0">,</span>py<span class="br0">&#41;</span><span class="br0">&#41;</span>
img <span class="sy0">=</span> Image.<span class="kw3">new</span><span class="br0">&#40;</span><span class="st0">&quot;RGB&quot;</span><span class="sy0">,</span> <span class="br0">&#40;</span>iwidth<span class="sy0">,</span> iheight<span class="br0">&#41;</span><span class="sy0">,</span> <span class="st0">&quot;white&quot;</span><span class="br0">&#41;</span>
draw <span class="sy0">=</span> ImageDraw.<span class="me1">Draw</span><span class="br0">&#40;</span>img<span class="br0">&#41;</span>
draw.<span class="me1">polygon</span><span class="br0">&#40;</span>pixels<span class="sy0">,</span> outline<span class="sy0">=</span><span class="st0">&quot;rgb(203, 196, 190)&quot;</span><span class="sy0">,</span> fill<span class="sy0">=</span><span class="st0">&quot;rgb(198, 204, 189)&quot;</span><span class="br0">&#41;</span>
img.<span class="me1">save</span><span class="br0">&#40;</span><span class="st0">&quot;hancock.png&quot;</span><span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/04/26_PNGC.py" class="mediafile mf_py">04/26_PNGC.py</a></dt>
<dd><pre class="code file python"><span class="co1"># Rasterize a shapefile with PNGCanvas</span>
<span class="kw1">import</span> shapefile
<span class="kw1">import</span> pngcanvas
r <span class="sy0">=</span> shapefile.<span class="me1">Reader</span><span class="br0">&#40;</span><span class="st0">&quot;hancock.shp&quot;</span><span class="br0">&#41;</span>
xdist <span class="sy0">=</span> r.<span class="me1">bbox</span><span class="br0">&#91;</span><span class="nu0">2</span><span class="br0">&#93;</span> - r.<span class="me1">bbox</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>
ydist <span class="sy0">=</span> r.<span class="me1">bbox</span><span class="br0">&#91;</span><span class="nu0">3</span><span class="br0">&#93;</span> - r.<span class="me1">bbox</span><span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span>
iwidth <span class="sy0">=</span> <span class="nu0">400</span>
iheight <span class="sy0">=</span> <span class="nu0">600</span>
xratio <span class="sy0">=</span> iwidth/xdist
yratio <span class="sy0">=</span> iheight/ydist
pixels <span class="sy0">=</span> <span class="br0">&#91;</span><span class="br0">&#93;</span>
<span class="kw1">for</span> x<span class="sy0">,</span>y <span class="kw1">in</span> r.<span class="me1">shapes</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>.<span class="me1">points</span>:
  px <span class="sy0">=</span> <span class="kw2">int</span><span class="br0">&#40;</span>iwidth - <span class="br0">&#40;</span><span class="br0">&#40;</span>r.<span class="me1">bbox</span><span class="br0">&#91;</span><span class="nu0">2</span><span class="br0">&#93;</span> - x<span class="br0">&#41;</span> * xratio<span class="br0">&#41;</span><span class="br0">&#41;</span>
  py <span class="sy0">=</span> <span class="kw2">int</span><span class="br0">&#40;</span><span class="br0">&#40;</span>r.<span class="me1">bbox</span><span class="br0">&#91;</span><span class="nu0">3</span><span class="br0">&#93;</span> - y<span class="br0">&#41;</span> * yratio<span class="br0">&#41;</span>
  pixels.<span class="me1">append</span><span class="br0">&#40;</span><span class="br0">&#91;</span>px<span class="sy0">,</span>py<span class="br0">&#93;</span><span class="br0">&#41;</span>
c <span class="sy0">=</span> pngcanvas.<span class="me1">PNGCanvas</span><span class="br0">&#40;</span>iwidth<span class="sy0">,</span>iheight<span class="br0">&#41;</span>
c.<span class="me1">polyline</span><span class="br0">&#40;</span>pixels<span class="br0">&#41;</span>
f <span class="sy0">=</span> <span class="kw2">file</span><span class="br0">&#40;</span><span class="st0">&quot;hancock_pngcvs.png&quot;</span><span class="sy0">,</span> <span class="st0">&quot;wb&quot;</span><span class="br0">&#41;</span>
f.<span class="me1">write</span><span class="br0">&#40;</span>c.<span class="me1">dump</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
f.<span class="me1">close</span><span class="br0">&#40;</span><span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/04/27_PDF.py" class="mediafile mf_py">04/27_PDF.py</a></dt>
<dd><pre class="code file python"><span class="co1"># Create a pdf with a map image</span>
&nbsp;
<span class="kw1">import</span> fpdf
&nbsp;
<span class="co1"># PDF constructor:</span>
<span class="co1"># Portrait, millimeter units, A4 page size</span>
pdf<span class="sy0">=</span>fpdf.<span class="me1">FPDF</span><span class="br0">&#40;</span><span class="st0">&quot;P&quot;</span><span class="sy0">,</span> <span class="st0">&quot;mm&quot;</span><span class="sy0">,</span> <span class="st0">&quot;A4&quot;</span><span class="br0">&#41;</span>
<span class="co1"># create a new page</span>
pdf.<span class="me1">add_page</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="co1"># Set font: arial, bold, size 20</span>
pdf.<span class="me1">set_font</span><span class="br0">&#40;</span><span class="st0">'Arial'</span><span class="sy0">,</span><span class="st0">'B'</span><span class="sy0">,</span><span class="nu0">20</span><span class="br0">&#41;</span>
<span class="co1"># Create a new cell: 160 x 25mm, text contents, no border, centered</span>
pdf.<span class="me1">cell</span><span class="br0">&#40;</span><span class="nu0">160</span><span class="sy0">,</span><span class="nu0">25</span><span class="sy0">,</span><span class="st0">'Hancock County Boundary'</span><span class="sy0">,</span> border<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">,</span> align<span class="sy0">=</span><span class="st0">&quot;C&quot;</span><span class="br0">&#41;</span>
pdf.<span class="me1">image</span><span class="br0">&#40;</span><span class="st0">&quot;hancock.png&quot;</span><span class="sy0">,</span><span class="nu0">25</span><span class="sy0">,</span><span class="nu0">50</span><span class="sy0">,</span><span class="nu0">150</span><span class="sy0">,</span><span class="nu0">160</span><span class="br0">&#41;</span>
pdf.<span class="me1">output</span><span class="br0">&#40;</span><span class="st0">'map.pdf'</span><span class="sy0">,</span><span class="st0">'F'</span><span class="br0">&#41;</span></pre>
</dd></dl>
</div>
<!-- EDIT6 SECTION "Playing with some geospatial modules" [1968-3081] -->
<h2 class="sectionedit7" id="using_ogr">Using OGR</h2>
<div class="level2">

<p>
Let us see some very basic useful snippets of OGR code which could be combined together to build more complicated things:
</p>
<dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/03/01_ogr.py" class="mediafile mf_py">03/01_ogr.py</a></dt>
<dd><pre class="code file python"><span class="kw1">import</span> osgeo.<span class="me1">ogr</span>
<span class="kw1">import</span> <span class="kw3">os</span>.<span class="me1">path</span>
<span class="kw1">import</span> <span class="kw3">sys</span>
&nbsp;
mypath <span class="sy0">=</span> <span class="kw3">os</span>.<span class="me1">path</span>.<span class="me1">dirname</span><span class="br0">&#40;</span><span class="kw3">os</span>.<span class="me1">path</span>.<span class="me1">realpath</span><span class="br0">&#40;</span><span class="kw3">sys</span>.<span class="me1">argv</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
shapefile_name <span class="sy0">=</span> <span class="kw3">os</span>.<span class="me1">path</span>.<span class="me1">join</span><span class="br0">&#40;</span>mypath<span class="sy0">,</span><span class="st0">&quot;../files/tl_2012_us_state.shp&quot;</span><span class="br0">&#41;</span>
shapefile <span class="sy0">=</span> osgeo.<span class="me1">ogr</span>.<span class="me1">Open</span><span class="br0">&#40;</span>shapefile_name<span class="br0">&#41;</span>
numLayers <span class="sy0">=</span> shapefile.<span class="me1">GetLayerCount</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">print</span> <span class="st0">&quot;Shapefile contains %d layers&quot;</span> % numLayers
<span class="kw1">print</span>
&nbsp;
<span class="kw1">for</span> layerNum <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span>numLayers<span class="br0">&#41;</span>:
    layer <span class="sy0">=</span> shapefile.<span class="me1">GetLayer</span><span class="br0">&#40;</span>layerNum<span class="br0">&#41;</span>
    spatialRef <span class="sy0">=</span> layer.<span class="me1">GetSpatialRef</span><span class="br0">&#40;</span><span class="br0">&#41;</span>.<span class="me1">ExportToProj4</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
    numFeatures <span class="sy0">=</span> layer.<span class="me1">GetFeatureCount</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
    <span class="kw1">print</span> <span class="st0">&quot;Layer %d has spatial reference %s&quot;</span> % <span class="br0">&#40;</span>layerNum<span class="sy0">,</span> spatialRef<span class="br0">&#41;</span>
    <span class="kw1">print</span> <span class="st0">&quot;Layer %d has %d features&quot;</span> % <span class="br0">&#40;</span>layerNum<span class="sy0">,</span> numFeatures<span class="br0">&#41;</span>
    <span class="kw1">print</span>
&nbsp;
    <span class="kw1">for</span> featureNum <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span>numFeatures<span class="br0">&#41;</span>:
        feature <span class="sy0">=</span> layer.<span class="me1">GetFeature</span><span class="br0">&#40;</span>featureNum<span class="br0">&#41;</span>
        featureName <span class="sy0">=</span> feature.<span class="me1">GetField</span><span class="br0">&#40;</span><span class="st0">&quot;NAME&quot;</span><span class="br0">&#41;</span>
&nbsp;
        <span class="kw1">print</span> <span class="st0">&quot;Feature %d has name %s&quot;</span> % <span class="br0">&#40;</span>featureNum<span class="sy0">,</span> featureName<span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/03/02_ogr.py" class="mediafile mf_py">03/02_ogr.py</a></dt>
<dd><pre class="code file python"><span class="kw1">import</span> osgeo.<span class="me1">ogr</span>
<span class="kw1">import</span> <span class="kw3">os</span>.<span class="me1">path</span>
<span class="kw1">import</span> <span class="kw3">sys</span>
&nbsp;
mypath <span class="sy0">=</span> <span class="kw3">os</span>.<span class="me1">path</span>.<span class="me1">dirname</span><span class="br0">&#40;</span><span class="kw3">os</span>.<span class="me1">path</span>.<span class="me1">realpath</span><span class="br0">&#40;</span><span class="kw3">sys</span>.<span class="me1">argv</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
shapefile_name <span class="sy0">=</span> <span class="kw3">os</span>.<span class="me1">path</span>.<span class="me1">join</span><span class="br0">&#40;</span>mypath<span class="sy0">,</span><span class="st0">&quot;../files/tl_2012_us_state.shp&quot;</span><span class="br0">&#41;</span>
shapefile <span class="sy0">=</span> osgeo.<span class="me1">ogr</span>.<span class="me1">Open</span><span class="br0">&#40;</span>shapefile_name<span class="br0">&#41;</span>
layer <span class="sy0">=</span> shapefile.<span class="me1">GetLayer</span><span class="br0">&#40;</span><span class="nu0">0</span><span class="br0">&#41;</span>
feature <span class="sy0">=</span> layer.<span class="me1">GetFeature</span><span class="br0">&#40;</span><span class="nu0">2</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">print</span> <span class="st0">&quot;Feature 2 has the following attributes:&quot;</span>
<span class="kw1">print</span>
&nbsp;
attributes <span class="sy0">=</span> feature.<span class="me1">items</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">for</span> key<span class="sy0">,</span>value <span class="kw1">in</span> attributes.<span class="me1">items</span><span class="br0">&#40;</span><span class="br0">&#41;</span>:
    <span class="kw1">print</span> <span class="st0">&quot; %s = %s&quot;</span> % <span class="br0">&#40;</span>key<span class="sy0">,</span> value<span class="br0">&#41;</span>
&nbsp;
geometry <span class="sy0">=</span> feature.<span class="me1">GetGeometryRef</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
geometryName <span class="sy0">=</span> geometry.<span class="me1">GetGeometryName</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">print</span>
<span class="kw1">print</span> <span class="st0">&quot;Feature's geometry data consists of a %s&quot;</span> % geometryName</pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/03/03_ogr.py" class="mediafile mf_py">03/03_ogr.py</a></dt>
<dd><pre class="code file python"><span class="kw1">import</span> osgeo.<span class="me1">ogr</span>
<span class="kw1">import</span> <span class="kw3">os</span>.<span class="me1">path</span>
<span class="kw1">import</span> <span class="kw3">sys</span>
&nbsp;
<span class="kw1">def</span> analyzeGeometry<span class="br0">&#40;</span>geometry<span class="sy0">,</span> indent<span class="sy0">=</span><span class="nu0">0</span><span class="br0">&#41;</span>:
    s <span class="sy0">=</span> <span class="br0">&#91;</span><span class="br0">&#93;</span>
    s.<span class="me1">append</span><span class="br0">&#40;</span><span class="st0">&quot;  &quot;</span> * indent<span class="br0">&#41;</span>
    s.<span class="me1">append</span><span class="br0">&#40;</span>geometry.<span class="me1">GetGeometryName</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
    <span class="kw1">if</span> geometry.<span class="me1">GetPointCount</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy0">&gt;</span> <span class="nu0">0</span>:
        s.<span class="me1">append</span><span class="br0">&#40;</span><span class="st0">&quot; with %d data points&quot;</span> % geometry.<span class="me1">GetPointCount</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
    <span class="kw1">if</span> geometry.<span class="me1">GetGeometryCount</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy0">&gt;</span> <span class="nu0">0</span>:
        s.<span class="me1">append</span><span class="br0">&#40;</span><span class="st0">&quot; containing:&quot;</span><span class="br0">&#41;</span>
&nbsp;
    <span class="kw1">print</span> <span class="st0">&quot;&quot;</span>.<span class="me1">join</span><span class="br0">&#40;</span>s<span class="br0">&#41;</span>
&nbsp;
    <span class="kw1">for</span> i <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span>geometry.<span class="me1">GetGeometryCount</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>:
        analyzeGeometry<span class="br0">&#40;</span>geometry.<span class="me1">GetGeometryRef</span><span class="br0">&#40;</span>i<span class="br0">&#41;</span><span class="sy0">,</span> indent+<span class="nu0">1</span><span class="br0">&#41;</span>
&nbsp;
mypath <span class="sy0">=</span> <span class="kw3">os</span>.<span class="me1">path</span>.<span class="me1">dirname</span><span class="br0">&#40;</span><span class="kw3">os</span>.<span class="me1">path</span>.<span class="me1">realpath</span><span class="br0">&#40;</span><span class="kw3">sys</span>.<span class="me1">argv</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
shapefile_name <span class="sy0">=</span> <span class="kw3">os</span>.<span class="me1">path</span>.<span class="me1">join</span><span class="br0">&#40;</span>mypath<span class="sy0">,</span><span class="st0">&quot;../files/tl_2012_us_state.shp&quot;</span><span class="br0">&#41;</span>
shapefile <span class="sy0">=</span> osgeo.<span class="me1">ogr</span>.<span class="me1">Open</span><span class="br0">&#40;</span>shapefile_name<span class="br0">&#41;</span>
layer <span class="sy0">=</span> shapefile.<span class="me1">GetLayer</span><span class="br0">&#40;</span><span class="nu0">0</span><span class="br0">&#41;</span>
feature <span class="sy0">=</span> layer.<span class="me1">GetFeature</span><span class="br0">&#40;</span><span class="nu0">55</span><span class="br0">&#41;</span>
geometry <span class="sy0">=</span> feature.<span class="me1">GetGeometryRef</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp;
analyzeGeometry<span class="br0">&#40;</span>geometry<span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/03/04_ogr.py" class="mediafile mf_py">03/04_ogr.py</a></dt>
<dd><pre class="code file python"><span class="kw1">import</span> osgeo.<span class="me1">ogr</span>
<span class="kw1">import</span> <span class="kw3">os</span>.<span class="me1">path</span>
<span class="kw1">import</span> <span class="kw3">sys</span>
&nbsp;
<span class="kw1">def</span> findPoints<span class="br0">&#40;</span>geometry<span class="sy0">,</span> results<span class="br0">&#41;</span>:
    <span class="kw1">for</span> i <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span>geometry.<span class="me1">GetPointCount</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>:
        x<span class="sy0">,</span>y<span class="sy0">,</span>z <span class="sy0">=</span> geometry.<span class="me1">GetPoint</span><span class="br0">&#40;</span>i<span class="br0">&#41;</span>
        <span class="kw1">if</span> results<span class="br0">&#91;</span><span class="st0">'north'</span><span class="br0">&#93;</span> <span class="sy0">==</span> <span class="kw2">None</span> <span class="kw1">or</span> results<span class="br0">&#91;</span><span class="st0">'north'</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span> <span class="sy0">&lt;</span> y:
            results<span class="br0">&#91;</span><span class="st0">'north'</span><span class="br0">&#93;</span> <span class="sy0">=</span> <span class="br0">&#40;</span>x<span class="sy0">,</span>y<span class="br0">&#41;</span>
        <span class="kw1">if</span> results<span class="br0">&#91;</span><span class="st0">'south'</span><span class="br0">&#93;</span> <span class="sy0">==</span> <span class="kw2">None</span> <span class="kw1">or</span> results<span class="br0">&#91;</span><span class="st0">'south'</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span> <span class="sy0">&gt;</span> y:
            results<span class="br0">&#91;</span><span class="st0">'south'</span><span class="br0">&#93;</span> <span class="sy0">=</span> <span class="br0">&#40;</span>x<span class="sy0">,</span>y<span class="br0">&#41;</span>
&nbsp;
    <span class="kw1">for</span> i <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span>geometry.<span class="me1">GetGeometryCount</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>:
        findPoints<span class="br0">&#40;</span>geometry.<span class="me1">GetGeometryRef</span><span class="br0">&#40;</span>i<span class="br0">&#41;</span><span class="sy0">,</span> results<span class="br0">&#41;</span>
&nbsp;
mypath <span class="sy0">=</span> <span class="kw3">os</span>.<span class="me1">path</span>.<span class="me1">dirname</span><span class="br0">&#40;</span><span class="kw3">os</span>.<span class="me1">path</span>.<span class="me1">realpath</span><span class="br0">&#40;</span><span class="kw3">sys</span>.<span class="me1">argv</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
shapefile_name <span class="sy0">=</span> <span class="kw3">os</span>.<span class="me1">path</span>.<span class="me1">join</span><span class="br0">&#40;</span>mypath<span class="sy0">,</span><span class="st0">&quot;../files/tl_2012_us_state.shp&quot;</span><span class="br0">&#41;</span>
shapefile <span class="sy0">=</span> osgeo.<span class="me1">ogr</span>.<span class="me1">Open</span><span class="br0">&#40;</span>shapefile_name<span class="br0">&#41;</span>
layer <span class="sy0">=</span> shapefile.<span class="me1">GetLayer</span><span class="br0">&#40;</span><span class="nu0">0</span><span class="br0">&#41;</span>
feature <span class="sy0">=</span> layer.<span class="me1">GetFeature</span><span class="br0">&#40;</span><span class="nu0">55</span><span class="br0">&#41;</span>
geometry <span class="sy0">=</span> feature.<span class="me1">GetGeometryRef</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp;
results <span class="sy0">=</span> <span class="br0">&#123;</span><span class="st0">'north'</span> : <span class="kw2">None</span><span class="sy0">,</span>
           <span class="st0">'south'</span> : <span class="kw2">None</span><span class="br0">&#125;</span>
&nbsp;
findPoints<span class="br0">&#40;</span>geometry<span class="sy0">,</span> results<span class="br0">&#41;</span>
&nbsp;
<span class="kw1">print</span> <span class="st0">&quot;Northernmost point is (%0.4f, %0.4f)&quot;</span> % results<span class="br0">&#91;</span><span class="st0">'north'</span><span class="br0">&#93;</span>
<span class="kw1">print</span> <span class="st0">&quot;Southernmost point is (%0.4f, %0.4f)&quot;</span> % results<span class="br0">&#91;</span><span class="st0">'south'</span><span class="br0">&#93;</span></pre>
</dd></dl>
<p>
Playing with projection in OGR and UTM modules:
</p>
<dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/05/06-utm2latlon.py" class="mediafile mf_py">05/06-utm2latlon.py</a></dt>
<dd><pre class="code file python"><span class="st0">&quot;&quot;&quot;Convert utm to lat/lon&quot;&quot;&quot;</span>
<span class="kw1">import</span> utm
y <span class="sy0">=</span> <span class="nu0">479747.0453210057</span>
x <span class="sy0">=</span> <span class="nu0">5377685.825323031</span>
zone <span class="sy0">=</span> <span class="nu0">32</span>
band <span class="sy0">=</span> <span class="st0">'U'</span>
<span class="kw1">print</span> utm.<span class="me1">to_latlon</span><span class="br0">&#40;</span>y<span class="sy0">,</span>x<span class="sy0">,</span>zone<span class="sy0">,</span>band<span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/05/07-latlon2utm.py" class="mediafile mf_py">05/07-latlon2utm.py</a></dt>
<dd><pre class="code file python"><span class="st0">&quot;&quot;&quot;Convert lat/lon to utm&quot;&quot;&quot;</span>
<span class="kw1">import</span> utm
<span class="kw1">print</span> utm.<span class="me1">from_latlon</span><span class="br0">&#40;</span><span class="nu0">48.55199390882121</span><span class="sy0">,</span> <span class="nu0">8.725555729071763</span><span class="br0">&#41;</span></pre>
</dd></dl>
<p>
<em>Hands on work: write a couple of programs to convert coordinates taken from input (hint: sys.stdin), command line, etc.
</em>
</p>
<dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/05/08-reprojection.py" class="mediafile mf_py">05/08-reprojection.py</a></dt>
<dd><pre class="code file python"><span class="st0">&quot;&quot;&quot;Reproject a shapefile&quot;&quot;&quot;</span>
<span class="kw1">import</span> ogr
<span class="kw1">import</span> osr
<span class="kw1">import</span> <span class="kw3">os</span>
<span class="kw1">import</span> <span class="kw3">shutil</span>
&nbsp;
<span class="co1"># Source and target file names</span>
srcName <span class="sy0">=</span> <span class="st0">&quot;NYC_MUSEUMS_LAMBERT.shp&quot;</span>
tgtName <span class="sy0">=</span> <span class="st0">&quot;NYC_MUSEUMS_GEO.shp&quot;</span>
&nbsp;
<span class="co1"># Target spatial reference</span>
tgt_spatRef <span class="sy0">=</span> osr.<span class="me1">SpatialReference</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
tgt_spatRef.<span class="me1">ImportFromEPSG</span><span class="br0">&#40;</span><span class="nu0">4326</span><span class="br0">&#41;</span>
&nbsp;
<span class="co1"># Source shapefile</span>
driver <span class="sy0">=</span> ogr.<span class="me1">GetDriverByName</span><span class="br0">&#40;</span><span class="st0">&quot;ESRI Shapefile&quot;</span><span class="br0">&#41;</span>
src <span class="sy0">=</span> driver.<span class="me1">Open</span><span class="br0">&#40;</span>srcName<span class="sy0">,</span> <span class="nu0">0</span><span class="br0">&#41;</span>
srcLyr <span class="sy0">=</span> src.<span class="me1">GetLayer</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp;
<span class="co1"># Source spatial reference</span>
src_spatRef <span class="sy0">=</span> srcLyr.<span class="me1">GetSpatialRef</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp;
<span class="co1"># Target shapefile -</span>
<span class="co1"># delete if it's already</span>
<span class="co1"># there.</span>
<span class="kw1">if</span> <span class="kw3">os</span>.<span class="me1">path</span>.<span class="me1">exists</span><span class="br0">&#40;</span>tgtName<span class="br0">&#41;</span>:
    driver.<span class="me1">DeleteDataSource</span><span class="br0">&#40;</span>tgtName<span class="br0">&#41;</span>
tgt <span class="sy0">=</span> driver.<span class="me1">CreateDataSource</span><span class="br0">&#40;</span>tgtName<span class="br0">&#41;</span>
lyrName <span class="sy0">=</span> <span class="kw3">os</span>.<span class="me1">path</span>.<span class="me1">splitext</span><span class="br0">&#40;</span>tgtName<span class="br0">&#41;</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>
tgtLyr <span class="sy0">=</span> tgt.<span class="me1">CreateLayer</span><span class="br0">&#40;</span>lyrName<span class="sy0">,</span> geom_type<span class="sy0">=</span>ogr.<span class="me1">wkbPoint</span><span class="br0">&#41;</span>
&nbsp;
<span class="co1"># Layer definition</span>
featDef <span class="sy0">=</span> srcLyr.<span class="me1">GetLayerDefn</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp;
<span class="co1"># Spatial Transform</span>
trans <span class="sy0">=</span> osr.<span class="me1">CoordinateTransformation</span><span class="br0">&#40;</span>src_spatRef<span class="sy0">,</span> tgt_spatRef<span class="br0">&#41;</span>
&nbsp;
<span class="co1"># Reproject and copy features</span>
srcFeat <span class="sy0">=</span> srcLyr.<span class="me1">GetNextFeature</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="kw1">while</span> srcFeat:
  geom <span class="sy0">=</span> srcFeat.<span class="me1">GetGeometryRef</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
  geom.<span class="me1">Transform</span><span class="br0">&#40;</span>trans<span class="br0">&#41;</span>
  feature <span class="sy0">=</span> ogr.<span class="me1">Feature</span><span class="br0">&#40;</span>featDef<span class="br0">&#41;</span>
  feature.<span class="me1">SetGeometry</span><span class="br0">&#40;</span>geom<span class="br0">&#41;</span>
  tgtLyr.<span class="me1">CreateFeature</span><span class="br0">&#40;</span>feature<span class="br0">&#41;</span>
  feature.<span class="me1">Destroy</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
  srcFeat.<span class="me1">Destroy</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
  srcFeat <span class="sy0">=</span> srcLyr.<span class="me1">GetNextFeature</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
src.<span class="me1">Destroy</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
tgt.<span class="me1">Destroy</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp;
<span class="co1"># Create the prj file</span>
tgt_spatRef.<span class="me1">MorphToESRI</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
prj <span class="sy0">=</span> <span class="kw2">open</span><span class="br0">&#40;</span>lyrName + <span class="st0">&quot;.prj&quot;</span><span class="sy0">,</span> <span class="st0">&quot;w&quot;</span><span class="br0">&#41;</span>
prj.<span class="me1">write</span><span class="br0">&#40;</span>tgt_spatRef.<span class="me1">ExportToWkt</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
prj.<span class="me1">close</span><span class="br0">&#40;</span><span class="br0">&#41;</span> 
&nbsp;
<span class="co1"># Just copy dbf contents over rather</span>
<span class="co1"># than rebuild the dbf using the</span>
<span class="co1"># ogr API since we're not changing</span>
<span class="co1"># anything.</span>
srcDbf <span class="sy0">=</span> <span class="kw3">os</span>.<span class="me1">path</span>.<span class="me1">splitext</span><span class="br0">&#40;</span>srcName<span class="br0">&#41;</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span> + <span class="st0">&quot;.dbf&quot;</span>
tgtDbf <span class="sy0">=</span> lyrName + <span class="st0">&quot;.dbf&quot;</span>
<span class="kw3">shutil</span>.<span class="me1">copyfile</span><span class="br0">&#40;</span>srcDbf<span class="sy0">,</span> tgtDbf<span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/05/09-read-shp.py" class="mediafile mf_py">05/09-read-shp.py</a></dt>
<dd><pre class="code file python"><span class="st0">&quot;&quot;&quot;Open a shapefile for reading&quot;&quot;&quot;</span>
<span class="kw1">import</span> shapefile
r <span class="sy0">=</span> shapefile.<span class="me1">Reader</span><span class="br0">&#40;</span><span class="st0">&quot;MSCities_Geo_Pts&quot;</span><span class="br0">&#41;</span>
<span class="kw1">print</span> r
<span class="kw1">print</span> r.<span class="me1">bbox</span>
<span class="kw1">print</span> r.<span class="me1">shapeType</span>
<span class="kw1">print</span> r.<span class="me1">numRecords</span>
<span class="kw1">print</span> r.<span class="me1">fields</span>
<span class="kw1">print</span> <span class="br0">&#91;</span>item<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span> <span class="kw1">for</span> item <span class="kw1">in</span> r.<span class="me1">fields</span><span class="br0">&#91;</span><span class="nu0">1</span>:<span class="br0">&#93;</span><span class="br0">&#93;</span>
<span class="kw1">print</span> r.<span class="me1">record</span><span class="br0">&#40;</span><span class="nu0">2</span><span class="br0">&#41;</span>
<span class="kw1">print</span> r.<span class="me1">record</span><span class="br0">&#40;</span><span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#91;</span><span class="nu0">4</span><span class="br0">&#93;</span>
fieldNames <span class="sy0">=</span> <span class="br0">&#91;</span>item<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span> <span class="kw1">for</span> item <span class="kw1">in</span> r.<span class="me1">fields</span><span class="br0">&#91;</span><span class="nu0">1</span>:<span class="br0">&#93;</span><span class="br0">&#93;</span>
name10 <span class="sy0">=</span> fieldNames.<span class="me1">index</span><span class="br0">&#40;</span><span class="st0">&quot;NAME10&quot;</span><span class="br0">&#41;</span>
<span class="kw1">print</span> name10
<span class="kw1">print</span> r.<span class="me1">record</span><span class="br0">&#40;</span><span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#91;</span>name10<span class="br0">&#93;</span>
zipRec <span class="sy0">=</span> <span class="kw2">zip</span><span class="br0">&#40;</span>fieldNames<span class="sy0">,</span> rec<span class="br0">&#41;</span>
<span class="kw1">print</span> zipRec
<span class="kw1">for</span> z <span class="kw1">in</span> zipRec:
  <span class="kw1">if</span> z<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span> <span class="sy0">==</span> <span class="st0">&quot;NAME10&quot;</span>: 
    <span class="kw1">print</span> z<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span>
<span class="kw1">for</span> rec <span class="kw1">in</span> <span class="kw2">enumerate</span><span class="br0">&#40;</span>r.<span class="me1">records</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#91;</span>:<span class="nu0">3</span><span class="br0">&#93;</span><span class="br0">&#41;</span>:
  <span class="kw1">print</span> rec<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>+<span class="nu0">1</span><span class="sy0">,</span> <span class="st0">&quot;: &quot;</span><span class="sy0">,</span> rec<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span>
counter <span class="sy0">=</span> <span class="nu0">0</span>
<span class="kw1">for</span> rec <span class="kw1">in</span> r.<span class="me1">iterRecords</span><span class="br0">&#40;</span><span class="br0">&#41;</span>:
  counter +<span class="sy0">=</span> <span class="nu0">1</span>
<span class="kw1">print</span> counter
geom <span class="sy0">=</span> r.<span class="me1">shape</span><span class="br0">&#40;</span><span class="nu0">0</span><span class="br0">&#41;</span>
<span class="kw1">print</span> geom.<span class="me1">points</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/05/10-change-shp.py" class="mediafile mf_py">05/10-change-shp.py</a></dt>
<dd><pre class="code file python"><span class="st0">&quot;&quot;&quot;Convert a shapefile from lat/lon to UTM&quot;&quot;&quot;</span>
<span class="kw1">import</span> shapefile
<span class="kw1">import</span> utm
r <span class="sy0">=</span> shapefile.<span class="me1">Reader</span><span class="br0">&#40;</span><span class="st0">&quot;NYC_MUSEUMS_GEO&quot;</span><span class="br0">&#41;</span>
w <span class="sy0">=</span> shapefile.<span class="me1">Writer</span><span class="br0">&#40;</span>r.<span class="me1">shapeType</span><span class="br0">&#41;</span>
w.<span class="me1">fields</span> <span class="sy0">=</span> <span class="kw2">list</span><span class="br0">&#40;</span>r.<span class="me1">fields</span><span class="br0">&#41;</span>
w.<span class="me1">records</span>.<span class="me1">extend</span><span class="br0">&#40;</span>r.<span class="me1">records</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
<span class="kw1">for</span> s <span class="kw1">in</span> r.<span class="me1">iterShapes</span><span class="br0">&#40;</span><span class="br0">&#41;</span>:
  lon<span class="sy0">,</span>lat <span class="sy0">=</span> s.<span class="me1">points</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>
  y<span class="sy0">,</span>x<span class="sy0">,</span>zone<span class="sy0">,</span>band <span class="sy0">=</span> utm.<span class="me1">from_latlon</span><span class="br0">&#40;</span>lat<span class="sy0">,</span>lon<span class="br0">&#41;</span>
  w.<span class="me1">point</span><span class="br0">&#40;</span>x<span class="sy0">,</span>y<span class="br0">&#41;</span>
w.<span class="me1">save</span><span class="br0">&#40;</span><span class="st0">&quot;NYC_MUSEUMS_UTM&quot;</span><span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/05/11-add-field.py" class="mediafile mf_py">05/11-add-field.py</a></dt>
<dd><pre class="code file python"><span class="st0">&quot;&quot;&quot;Add a dbf field and column&quot;&quot;&quot;</span>
<span class="kw1">import</span> shapefile
r <span class="sy0">=</span> shapefile.<span class="me1">Reader</span><span class="br0">&#40;</span><span class="st0">&quot;NYC_MUSEUMS_UTM&quot;</span><span class="br0">&#41;</span>
w <span class="sy0">=</span> shapefile.<span class="me1">Writer</span><span class="br0">&#40;</span>r.<span class="me1">shapeType</span><span class="br0">&#41;</span>
w.<span class="me1">fields</span> <span class="sy0">=</span> <span class="kw2">list</span><span class="br0">&#40;</span>r.<span class="me1">fields</span><span class="br0">&#41;</span>
w.<span class="me1">records</span>.<span class="me1">extend</span><span class="br0">&#40;</span>r.<span class="me1">records</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
w.<span class="me1">field</span><span class="br0">&#40;</span><span class="st0">&quot;LAT&quot;</span><span class="sy0">,</span><span class="st0">&quot;F&quot;</span><span class="sy0">,</span><span class="nu0">8</span><span class="sy0">,</span><span class="nu0">5</span><span class="br0">&#41;</span>
w.<span class="me1">field</span><span class="br0">&#40;</span><span class="st0">&quot;LON&quot;</span><span class="sy0">,</span><span class="st0">&quot;F&quot;</span><span class="sy0">,</span><span class="nu0">8</span><span class="sy0">,</span><span class="nu0">5</span><span class="br0">&#41;</span>
geo <span class="sy0">=</span> shapefile.<span class="me1">Reader</span><span class="br0">&#40;</span><span class="st0">&quot;NYC_MUSEUMS_GEO&quot;</span><span class="br0">&#41;</span>
<span class="kw1">for</span> i <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span>geo.<span class="me1">numRecords</span><span class="br0">&#41;</span>:
  lon<span class="sy0">,</span> lat <span class="sy0">=</span> geo.<span class="me1">shape</span><span class="br0">&#40;</span>i<span class="br0">&#41;</span>.<span class="me1">points</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>
  w.<span class="me1">records</span><span class="br0">&#91;</span>i<span class="br0">&#93;</span>.<span class="me1">extend</span><span class="br0">&#40;</span><span class="br0">&#91;</span>lat<span class="sy0">,</span>lon<span class="br0">&#93;</span><span class="br0">&#41;</span>
w._shapes.<span class="me1">extend</span><span class="br0">&#40;</span>r.<span class="me1">shapes</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
w.<span class="me1">save</span><span class="br0">&#40;</span><span class="st0">&quot;NYC_MUSEUMS_UTM&quot;</span><span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/05/12-merge.py" class="mediafile mf_py">05/12-merge.py</a></dt>
<dd><pre class="code file python"><span class="st0">&quot;&quot;&quot;Merge multiple shapefiles&quot;&quot;&quot;</span>
<span class="kw1">import</span> <span class="kw3">glob</span>
<span class="kw1">import</span> shapefile
files <span class="sy0">=</span> <span class="kw3">glob</span>.<span class="kw3">glob</span><span class="br0">&#40;</span><span class="st0">&quot;footprints_*shp&quot;</span><span class="br0">&#41;</span>
w <span class="sy0">=</span> shapefile.<span class="me1">Writer</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
r <span class="sy0">=</span> <span class="kw2">None</span>
<span class="kw1">for</span> f <span class="kw1">in</span> files:
  r <span class="sy0">=</span> shapefile.<span class="me1">Reader</span><span class="br0">&#40;</span>f<span class="br0">&#41;</span>
  w._shapes.<span class="me1">extend</span><span class="br0">&#40;</span>r.<span class="me1">shapes</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
  w.<span class="me1">records</span>.<span class="me1">extend</span><span class="br0">&#40;</span>r.<span class="me1">records</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
w.<span class="me1">fields</span> <span class="sy0">=</span> <span class="kw2">list</span><span class="br0">&#40;</span>r.<span class="me1">fields</span><span class="br0">&#41;</span>
w.<span class="me1">save</span><span class="br0">&#40;</span><span class="st0">&quot;Merged&quot;</span><span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/05/13-split.py" class="mediafile mf_py">05/13-split.py</a></dt>
<dd><pre class="code file python"><span class="st0">&quot;&quot;&quot;Split a shapefile&quot;&quot;&quot;</span>
<span class="kw1">import</span> shapefile
<span class="kw1">import</span> utm
r <span class="sy0">=</span> shapefile.<span class="me1">Reader</span><span class="br0">&#40;</span><span class="st0">&quot;footprints_se&quot;</span><span class="br0">&#41;</span>
w <span class="sy0">=</span> shapefile.<span class="me1">Writer</span><span class="br0">&#40;</span>r.<span class="me1">shapeType</span><span class="br0">&#41;</span>
w.<span class="me1">fields</span> <span class="sy0">=</span> <span class="kw2">list</span><span class="br0">&#40;</span>r.<span class="me1">fields</span><span class="br0">&#41;</span>
<span class="kw1">for</span> sr <span class="kw1">in</span> r.<span class="me1">shapeRecords</span><span class="br0">&#40;</span><span class="br0">&#41;</span>:
  utmPoints <span class="sy0">=</span> <span class="br0">&#91;</span><span class="br0">&#93;</span>
  <span class="kw1">for</span> p <span class="kw1">in</span> sr.<span class="me1">shape</span>.<span class="me1">points</span>:
    x<span class="sy0">,</span>y<span class="sy0">,</span>band<span class="sy0">,</span>zone <span class="sy0">=</span> utm.<span class="me1">from_latlon</span><span class="br0">&#40;</span>p<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span><span class="sy0">,</span>p<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
    utmPoints.<span class="me1">append</span><span class="br0">&#40;</span><span class="br0">&#91;</span>x<span class="sy0">,</span>y<span class="br0">&#93;</span><span class="br0">&#41;</span>
    area <span class="sy0">=</span> <span class="kw2">abs</span><span class="br0">&#40;</span>shapefile.<span class="me1">signed_area</span><span class="br0">&#40;</span>utmPoints<span class="br0">&#41;</span><span class="br0">&#41;</span>
    <span class="kw1">if</span>  area <span class="sy0">&lt;=</span> <span class="nu0">100</span>:
      w._shapes.<span class="me1">append</span><span class="br0">&#40;</span>sr.<span class="me1">shape</span><span class="br0">&#41;</span>
      w.<span class="me1">records</span>.<span class="me1">append</span><span class="br0">&#40;</span>sr.<span class="me1">record</span><span class="br0">&#41;</span>
w.<span class="me1">save</span><span class="br0">&#40;</span><span class="st0">&quot;footprints_185&quot;</span><span class="br0">&#41;</span>
<span class="co1"># Verify changes</span>
r <span class="sy0">=</span> shapefile.<span class="me1">Reader</span><span class="br0">&#40;</span><span class="st0">&quot;footprints_se&quot;</span><span class="br0">&#41;</span>
subset <span class="sy0">=</span> shapefile.<span class="me1">Reader</span><span class="br0">&#40;</span><span class="st0">&quot;footprints_185&quot;</span><span class="br0">&#41;</span>
<span class="kw1">print</span> r.<span class="me1">numRecords</span>
<span class="kw1">print</span> subset.<span class="me1">numRecords</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/05/14-pip.py" class="mediafile mf_py">05/14-pip.py</a></dt>
<dd><pre class="code file python"><span class="kw1">def</span> point_in_poly<span class="br0">&#40;</span>x<span class="sy0">,</span>y<span class="sy0">,</span>poly<span class="br0">&#41;</span>:
   <span class="co1"># check if point is a vertex</span>
   <span class="kw1">if</span> <span class="br0">&#40;</span>x<span class="sy0">,</span>y<span class="br0">&#41;</span> <span class="kw1">in</span> poly: <span class="kw1">return</span> <span class="kw2">True</span>
&nbsp;
   <span class="co1"># check if point is on a boundary</span>
   <span class="kw1">for</span> i <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span><span class="kw2">len</span><span class="br0">&#40;</span>poly<span class="br0">&#41;</span><span class="br0">&#41;</span>:
      p1 <span class="sy0">=</span> <span class="kw2">None</span>
      p2 <span class="sy0">=</span> <span class="kw2">None</span>
      <span class="kw1">if</span> i<span class="sy0">==</span><span class="nu0">0</span>:
         p1 <span class="sy0">=</span> poly<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>
         p2 <span class="sy0">=</span> poly<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span>
      <span class="kw1">else</span>:
         p1 <span class="sy0">=</span> poly<span class="br0">&#91;</span>i-<span class="nu0">1</span><span class="br0">&#93;</span>
         p2 <span class="sy0">=</span> poly<span class="br0">&#91;</span>i<span class="br0">&#93;</span>
      <span class="kw1">if</span> p1<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span> <span class="sy0">==</span> p2<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span> <span class="kw1">and</span> p1<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span> <span class="sy0">==</span> y <span class="kw1">and</span> x <span class="sy0">&gt;</span> <span class="kw2">min</span><span class="br0">&#40;</span>p1<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="sy0">,</span> p2<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="br0">&#41;</span> <span class="kw1">and</span> x <span class="sy0">&lt;</span> <span class="kw2">max</span><span class="br0">&#40;</span>p1<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="sy0">,</span> p2<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="br0">&#41;</span>:
         <span class="kw1">return</span> <span class="kw2">True</span>
&nbsp;
   n <span class="sy0">=</span> <span class="kw2">len</span><span class="br0">&#40;</span>poly<span class="br0">&#41;</span>
   inside <span class="sy0">=</span> <span class="kw2">False</span>
&nbsp;
   p1x<span class="sy0">,</span>p1y <span class="sy0">=</span> poly<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>
   <span class="kw1">for</span> i <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span>n+<span class="nu0">1</span><span class="br0">&#41;</span>:
      p2x<span class="sy0">,</span>p2y <span class="sy0">=</span> poly<span class="br0">&#91;</span>i % n<span class="br0">&#93;</span>
      <span class="kw1">if</span> y <span class="sy0">&gt;</span> <span class="kw2">min</span><span class="br0">&#40;</span>p1y<span class="sy0">,</span>p2y<span class="br0">&#41;</span>:
         <span class="kw1">if</span> y <span class="sy0">&lt;=</span> <span class="kw2">max</span><span class="br0">&#40;</span>p1y<span class="sy0">,</span>p2y<span class="br0">&#41;</span>:
            <span class="kw1">if</span> x <span class="sy0">&lt;=</span> <span class="kw2">max</span><span class="br0">&#40;</span>p1x<span class="sy0">,</span>p2x<span class="br0">&#41;</span>:
               <span class="kw1">if</span> p1y <span class="sy0">!=</span> p2y:
                  xints <span class="sy0">=</span> <span class="br0">&#40;</span>y-p1y<span class="br0">&#41;</span>*<span class="br0">&#40;</span>p2x-p1x<span class="br0">&#41;</span>/<span class="br0">&#40;</span>p2y-p1y<span class="br0">&#41;</span>+p1x
               <span class="kw1">if</span> p1x <span class="sy0">==</span> p2x <span class="kw1">or</span> x <span class="sy0">&lt;=</span> xints:
                  inside <span class="sy0">=</span> <span class="kw1">not</span> inside
      p1x<span class="sy0">,</span>p1y <span class="sy0">=</span> p2x<span class="sy0">,</span>p2y
&nbsp;
   <span class="kw1">if</span> inside: <span class="kw1">return</span> <span class="kw2">True</span>
   <span class="kw1">return</span> <span class="kw2">False</span>
&nbsp;
<span class="co1"># Test a point inside the polygon for inclusion</span>
myPolygon <span class="sy0">=</span> <span class="br0">&#91;</span><span class="br0">&#40;</span>-<span class="nu0">70.593016</span><span class="sy0">,</span>-<span class="nu0">33.416032</span><span class="br0">&#41;</span><span class="sy0">,</span> <span class="br0">&#40;</span>-<span class="nu0">70.589604</span><span class="sy0">,</span>-<span class="nu0">33.415370</span><span class="br0">&#41;</span><span class="sy0">,</span>
<span class="br0">&#40;</span>-<span class="nu0">70.589046</span><span class="sy0">,</span>-<span class="nu0">33.417340</span><span class="br0">&#41;</span><span class="sy0">,</span> <span class="br0">&#40;</span>-<span class="nu0">70.592351</span><span class="sy0">,</span>-<span class="nu0">33.417949</span><span class="br0">&#41;</span><span class="sy0">,</span>
<span class="br0">&#40;</span>-<span class="nu0">70.593016</span><span class="sy0">,</span>-<span class="nu0">33.416032</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
lon <span class="sy0">=</span> -<span class="nu0">70.592000</span>
lat <span class="sy0">=</span> -<span class="nu0">33.416000</span>
&nbsp;
<span class="kw1">print</span> point_in_poly<span class="br0">&#40;</span>lon<span class="sy0">,</span> lat<span class="sy0">,</span> myPolygon<span class="br0">&#41;</span>
&nbsp;
<span class="co1"># test an vertex for inclusion</span>
lon <span class="sy0">=</span> -<span class="nu0">70.593016</span>
lat <span class="sy0">=</span> -<span class="nu0">33.416032</span>
<span class="kw1">print</span> point_in_poly<span class="br0">&#40;</span>lon<span class="sy0">,</span> lat<span class="sy0">,</span> myPolygon<span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/05/15-attr-sel.py" class="mediafile mf_py">05/15-attr-sel.py</a></dt>
<dd><pre class="code file python"><span class="st0">'''
Attribute selection for subset
'''</span>
<span class="kw1">import</span> shapefile
<span class="co1"># Create a reader instance</span>
r <span class="sy0">=</span> shapefile.<span class="me1">Reader</span><span class="br0">&#40;</span><span class="st0">&quot;MS_UrbanAnC10&quot;</span><span class="br0">&#41;</span>
<span class="co1"># Create a writer instance</span>
w <span class="sy0">=</span> shapefile.<span class="me1">Writer</span><span class="br0">&#40;</span>r.<span class="me1">shapeType</span><span class="br0">&#41;</span>
<span class="co1"># Copy the fields to the writer</span>
w.<span class="me1">fields</span> <span class="sy0">=</span> <span class="kw2">list</span><span class="br0">&#40;</span>r.<span class="me1">fields</span><span class="br0">&#41;</span>
<span class="co1"># Grab the geometry and records from all features </span>
<span class="co1"># with the correct population </span>
selection <span class="sy0">=</span> <span class="br0">&#91;</span><span class="br0">&#93;</span> 
<span class="kw1">for</span> rec <span class="kw1">in</span> <span class="kw2">enumerate</span><span class="br0">&#40;</span>r.<span class="me1">records</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>:
  <span class="kw1">if</span> rec<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="nu0">15</span><span class="br0">&#93;</span> <span class="sy0">&lt;</span> <span class="nu0">5000</span>:
    selection.<span class="me1">append</span><span class="br0">&#40;</span>rec<span class="br0">&#41;</span> 
<span class="co1"># Add the geometry and records to the writer</span>
<span class="kw1">for</span> rec <span class="kw1">in</span> selection:
  w._shapes.<span class="me1">append</span><span class="br0">&#40;</span>r.<span class="me1">shape</span><span class="br0">&#40;</span>rec<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
  w.<span class="me1">records</span>.<span class="me1">append</span><span class="br0">&#40;</span>rec<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
<span class="co1"># Save the new shapefile</span>
w.<span class="me1">save</span><span class="br0">&#40;</span><span class="st0">&quot;MS_Urban_Subset&quot;</span><span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/05/16-dot-density.py" class="mediafile mf_py">05/16-dot-density.py</a></dt>
<dd><pre class="code file python"><span class="st0">&quot;&quot;&quot;Create a dot-density thematic map&quot;&quot;&quot;</span>                                                <span class="kw1">import</span> shapefile
<span class="kw1">import</span> <span class="kw3">random</span>
<span class="kw1">import</span> pngcanvas
&nbsp;
<span class="kw1">def</span> point_in_poly<span class="br0">&#40;</span>x<span class="sy0">,</span>y<span class="sy0">,</span>poly<span class="br0">&#41;</span>:
   <span class="st0">&quot;&quot;&quot;Boolean: is a point inside a polygon?&quot;&quot;&quot;</span>
   <span class="co1"># check if point is a vertex</span>
   <span class="kw1">if</span> <span class="br0">&#40;</span>x<span class="sy0">,</span>y<span class="br0">&#41;</span> <span class="kw1">in</span> poly: <span class="kw1">return</span> <span class="kw2">True</span>
   <span class="co1"># check if point is on a boundary</span>
   <span class="kw1">for</span> i <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span><span class="kw2">len</span><span class="br0">&#40;</span>poly<span class="br0">&#41;</span><span class="br0">&#41;</span>:
      p1 <span class="sy0">=</span> <span class="kw2">None</span>
      p2 <span class="sy0">=</span> <span class="kw2">None</span>
      <span class="kw1">if</span> i<span class="sy0">==</span><span class="nu0">0</span>:
         p1 <span class="sy0">=</span> poly<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>
         p2 <span class="sy0">=</span> poly<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span>
      <span class="kw1">else</span>:
         p1 <span class="sy0">=</span> poly<span class="br0">&#91;</span>i-<span class="nu0">1</span><span class="br0">&#93;</span>
         p2 <span class="sy0">=</span> poly<span class="br0">&#91;</span>i<span class="br0">&#93;</span>
      <span class="kw1">if</span> p1<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span> <span class="sy0">==</span> p2<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span> <span class="kw1">and</span> p1<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span> <span class="sy0">==</span> y <span class="kw1">and</span> \
      x <span class="sy0">&gt;</span> <span class="kw2">min</span><span class="br0">&#40;</span>p1<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="sy0">,</span> p2<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="br0">&#41;</span> <span class="kw1">and</span> x <span class="sy0">&lt;</span> <span class="kw2">max</span><span class="br0">&#40;</span>p1<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="sy0">,</span> p2<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="br0">&#41;</span>:
         <span class="kw1">return</span> <span class="kw2">True</span>      
   n <span class="sy0">=</span> <span class="kw2">len</span><span class="br0">&#40;</span>poly<span class="br0">&#41;</span>
   inside <span class="sy0">=</span> <span class="kw2">False</span>
   p1x<span class="sy0">,</span>p1y <span class="sy0">=</span> poly<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>
   <span class="kw1">for</span> i <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span>n+<span class="nu0">1</span><span class="br0">&#41;</span>:
      p2x<span class="sy0">,</span>p2y <span class="sy0">=</span> poly<span class="br0">&#91;</span>i % n<span class="br0">&#93;</span>
      <span class="kw1">if</span> y <span class="sy0">&gt;</span> <span class="kw2">min</span><span class="br0">&#40;</span>p1y<span class="sy0">,</span>p2y<span class="br0">&#41;</span>:
         <span class="kw1">if</span> y <span class="sy0">&lt;=</span> <span class="kw2">max</span><span class="br0">&#40;</span>p1y<span class="sy0">,</span>p2y<span class="br0">&#41;</span>:
            <span class="kw1">if</span> x <span class="sy0">&lt;=</span> <span class="kw2">max</span><span class="br0">&#40;</span>p1x<span class="sy0">,</span>p2x<span class="br0">&#41;</span>:
               <span class="kw1">if</span> p1y <span class="sy0">!=</span> p2y:
                  xints <span class="sy0">=</span> <span class="br0">&#40;</span>y-p1y<span class="br0">&#41;</span>*<span class="br0">&#40;</span>p2x-p1x<span class="br0">&#41;</span>/<span class="br0">&#40;</span>p2y-p1y<span class="br0">&#41;</span>+p1x
               <span class="kw1">if</span> p1x <span class="sy0">==</span> p2x <span class="kw1">or</span> x <span class="sy0">&lt;=</span> xints:
                  inside <span class="sy0">=</span> <span class="kw1">not</span> inside
      p1x<span class="sy0">,</span>p1y <span class="sy0">=</span> p2x<span class="sy0">,</span>p2y
   <span class="kw1">if</span> inside: <span class="kw1">return</span> <span class="kw2">True</span>
   <span class="kw1">else</span>: <span class="kw1">return</span> <span class="kw2">False</span>
&nbsp;
<span class="kw1">def</span> world2screen<span class="br0">&#40;</span>bbox<span class="sy0">,</span> w<span class="sy0">,</span> h<span class="sy0">,</span> x<span class="sy0">,</span> y<span class="br0">&#41;</span>:
  <span class="st0">&quot;&quot;&quot;convert geospatial coordinates to pixels&quot;&quot;&quot;</span>
  minx<span class="sy0">,</span>miny<span class="sy0">,</span>maxx<span class="sy0">,</span>maxy <span class="sy0">=</span> bbox
  xdist <span class="sy0">=</span> maxx - minx
  ydist <span class="sy0">=</span> maxy - miny
  xratio <span class="sy0">=</span> w/xdist
  yratio <span class="sy0">=</span> h/ydist
  px <span class="sy0">=</span> <span class="kw2">int</span><span class="br0">&#40;</span>w - <span class="br0">&#40;</span><span class="br0">&#40;</span>maxx - x<span class="br0">&#41;</span> * xratio<span class="br0">&#41;</span><span class="br0">&#41;</span>
  py <span class="sy0">=</span> <span class="kw2">int</span><span class="br0">&#40;</span><span class="br0">&#40;</span>maxy - y<span class="br0">&#41;</span> * yratio<span class="br0">&#41;</span>
  <span class="kw1">return</span> <span class="br0">&#40;</span>px<span class="sy0">,</span>py<span class="br0">&#41;</span>
&nbsp;
<span class="co1"># Open the census shapefile</span>
inShp <span class="sy0">=</span> shapefile.<span class="me1">Reader</span><span class="br0">&#40;</span><span class="st0">&quot;GIS_CensusTract_poly&quot;</span><span class="br0">&#41;</span>
<span class="co1"># Set the output image size</span>
iwidth <span class="sy0">=</span> <span class="nu0">600</span>
iheight <span class="sy0">=</span> <span class="nu0">400</span>
<span class="co1"># Get the index of the population field</span>
pop_index <span class="sy0">=</span> <span class="kw2">None</span>
dots <span class="sy0">=</span> <span class="br0">&#91;</span><span class="br0">&#93;</span>
<span class="kw1">for</span> i<span class="sy0">,</span>f <span class="kw1">in</span> <span class="kw2">enumerate</span><span class="br0">&#40;</span>inShp.<span class="me1">fields</span><span class="br0">&#41;</span>:
  <span class="kw1">if</span> f<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span> <span class="sy0">==</span> <span class="st0">&quot;POPULAT11&quot;</span>:
    <span class="co1"># Account for deletion flag</span>
    pop_index <span class="sy0">=</span> i-<span class="nu0">1</span> 
<span class="co1"># Calculate the density and plot points</span>
<span class="kw1">for</span> sr <span class="kw1">in</span> inShp.<span class="me1">shapeRecords</span><span class="br0">&#40;</span><span class="br0">&#41;</span>:
  population <span class="sy0">=</span> sr.<span class="me1">record</span><span class="br0">&#91;</span>pop_index<span class="br0">&#93;</span>
  <span class="co1"># Density ratio - 1 dot per 100 people</span>
  density <span class="sy0">=</span> population / <span class="nu0">100</span>
  found <span class="sy0">=</span> <span class="nu0">0</span>
  <span class="co1"># Randomly distribute points until we </span>
  <span class="co1"># have the correct density</span>
  <span class="kw1">while</span> found <span class="sy0">&lt;</span> density:
    minx<span class="sy0">,</span> miny<span class="sy0">,</span> maxx<span class="sy0">,</span> maxy <span class="sy0">=</span> sr.<span class="me1">shape</span>.<span class="me1">bbox</span>
    x <span class="sy0">=</span> <span class="kw3">random</span>.<span class="me1">uniform</span><span class="br0">&#40;</span>minx<span class="sy0">,</span>maxx<span class="br0">&#41;</span>
    y <span class="sy0">=</span> <span class="kw3">random</span>.<span class="me1">uniform</span><span class="br0">&#40;</span>miny<span class="sy0">,</span>maxy<span class="br0">&#41;</span>
    <span class="kw1">if</span> point_in_poly<span class="br0">&#40;</span>x<span class="sy0">,</span>y<span class="sy0">,</span>sr.<span class="me1">shape</span>.<span class="me1">points</span><span class="br0">&#41;</span>:
      dots.<span class="me1">append</span><span class="br0">&#40;</span><span class="br0">&#40;</span>x<span class="sy0">,</span>y<span class="br0">&#41;</span><span class="br0">&#41;</span>
      found +<span class="sy0">=</span> <span class="nu0">1</span>
&nbsp;
<span class="co1"># Set up the PNG output image</span>
c <span class="sy0">=</span> pngcanvas.<span class="me1">PNGCanvas</span><span class="br0">&#40;</span>iwidth<span class="sy0">,</span>iheight<span class="br0">&#41;</span>
<span class="co1"># Draw the red dots</span>
c.<span class="me1">color</span> <span class="sy0">=</span> <span class="br0">&#40;</span><span class="nu0">255</span><span class="sy0">,</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">0xff</span><span class="br0">&#41;</span>
<span class="kw1">for</span> d <span class="kw1">in</span> dots:
  x<span class="sy0">,</span>y <span class="sy0">=</span> world2screen<span class="br0">&#40;</span>inShp.<span class="me1">bbox</span><span class="sy0">,</span> iwidth<span class="sy0">,</span> iheight<span class="sy0">,</span> *d<span class="br0">&#41;</span>
  c.<span class="me1">filledRectangle</span><span class="br0">&#40;</span>x-<span class="nu0">1</span><span class="sy0">,</span>y-<span class="nu0">1</span><span class="sy0">,</span>x+<span class="nu0">1</span><span class="sy0">,</span>y+<span class="nu0">1</span><span class="br0">&#41;</span>
<span class="co1"># Draw the census tracts</span>
c.<span class="me1">color</span> <span class="sy0">=</span> <span class="br0">&#40;</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">0xff</span><span class="br0">&#41;</span>
<span class="kw1">for</span> s <span class="kw1">in</span> inShp.<span class="me1">iterShapes</span><span class="br0">&#40;</span><span class="br0">&#41;</span>:
  pixels <span class="sy0">=</span> <span class="br0">&#91;</span><span class="br0">&#93;</span>
  <span class="kw1">for</span> p <span class="kw1">in</span> s.<span class="me1">points</span>:
    pixel <span class="sy0">=</span> world2screen<span class="br0">&#40;</span>inShp.<span class="me1">bbox</span><span class="sy0">,</span> iwidth<span class="sy0">,</span> iheight<span class="sy0">,</span> *p<span class="br0">&#41;</span>
    pixels.<span class="me1">append</span><span class="br0">&#40;</span>pixel<span class="br0">&#41;</span>
  c.<span class="me1">polyline</span><span class="br0">&#40;</span>pixels<span class="br0">&#41;</span>
<span class="co1"># Save the image  </span>
img <span class="sy0">=</span> <span class="kw2">open</span><span class="br0">&#40;</span><span class="st0">&quot;DotDensity.png&quot;</span><span class="sy0">,</span><span class="st0">&quot;wb&quot;</span><span class="br0">&#41;</span>
img.<span class="me1">write</span><span class="br0">&#40;</span>c.<span class="me1">dump</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
img.<span class="me1">close</span><span class="br0">&#40;</span><span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/05/17-choropleth.py" class="mediafile mf_py">05/17-choropleth.py</a></dt>
<dd><pre class="code file python"><span class="st0">&quot;&quot;&quot;Choropleth thematic map&quot;&quot;&quot;</span>
<span class="kw1">import</span> <span class="kw3">math</span>
<span class="kw1">import</span> shapefile
<span class="kw1">import</span> Image
<span class="kw1">import</span> ImageDraw
&nbsp;
<span class="kw1">def</span> world2screen<span class="br0">&#40;</span>bbox<span class="sy0">,</span> w<span class="sy0">,</span> h<span class="sy0">,</span> x<span class="sy0">,</span> y<span class="br0">&#41;</span>:
  <span class="st0">&quot;&quot;&quot;convert geospatial coordinates to pixels&quot;&quot;&quot;</span>
  minx<span class="sy0">,</span>miny<span class="sy0">,</span>maxx<span class="sy0">,</span>maxy <span class="sy0">=</span> bbox
  xdist <span class="sy0">=</span> maxx - minx
  ydist <span class="sy0">=</span> maxy - miny
  xratio <span class="sy0">=</span> w/xdist
  yratio <span class="sy0">=</span> h/ydist
  px <span class="sy0">=</span> <span class="kw2">int</span><span class="br0">&#40;</span>w - <span class="br0">&#40;</span><span class="br0">&#40;</span>maxx - x<span class="br0">&#41;</span> * xratio<span class="br0">&#41;</span><span class="br0">&#41;</span>
  py <span class="sy0">=</span> <span class="kw2">int</span><span class="br0">&#40;</span><span class="br0">&#40;</span>maxy - y<span class="br0">&#41;</span> * yratio<span class="br0">&#41;</span>
  <span class="kw1">return</span> <span class="br0">&#40;</span>px<span class="sy0">,</span>py<span class="br0">&#41;</span>
&nbsp;
<span class="co1"># Open our shapefile</span>
inShp <span class="sy0">=</span> shapefile.<span class="me1">Reader</span><span class="br0">&#40;</span><span class="st0">&quot;GIS_CensusTract_poly&quot;</span><span class="br0">&#41;</span>
iwidth <span class="sy0">=</span> <span class="nu0">600</span>
iheight <span class="sy0">=</span> <span class="nu0">400</span>
<span class="co1"># PIL Image</span>
img <span class="sy0">=</span> Image.<span class="kw3">new</span><span class="br0">&#40;</span><span class="st0">&quot;RGB&quot;</span><span class="sy0">,</span> <span class="br0">&#40;</span>iwidth<span class="sy0">,</span>iheight<span class="br0">&#41;</span><span class="sy0">,</span> <span class="br0">&#40;</span><span class="nu0">255</span><span class="sy0">,</span><span class="nu0">255</span><span class="sy0">,</span><span class="nu0">255</span><span class="br0">&#41;</span><span class="br0">&#41;</span> 
<span class="co1"># PIL Draw module for polygon fills</span>
draw <span class="sy0">=</span> ImageDraw.<span class="me1">Draw</span><span class="br0">&#40;</span>img<span class="br0">&#41;</span>
<span class="co1"># Get the population AND area index</span>
pop_index <span class="sy0">=</span> <span class="kw2">None</span>
area_index <span class="sy0">=</span> <span class="kw2">None</span>
<span class="co1"># Shade the census tracts</span>
<span class="kw1">for</span> i<span class="sy0">,</span>f <span class="kw1">in</span> <span class="kw2">enumerate</span><span class="br0">&#40;</span>inShp.<span class="me1">fields</span><span class="br0">&#41;</span>:
  <span class="kw1">if</span> f<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span> <span class="sy0">==</span> <span class="st0">&quot;POPULAT11&quot;</span>:
    <span class="co1"># Account for deletion flag</span>
    pop_index <span class="sy0">=</span> i-<span class="nu0">1</span>
  <span class="kw1">elif</span> f<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span> <span class="sy0">==</span> <span class="st0">&quot;AREASQKM&quot;</span>:
    area_index <span class="sy0">=</span> i-<span class="nu0">1</span>
<span class="co1"># Draw the polygons</span>
<span class="kw1">for</span> sr <span class="kw1">in</span> inShp.<span class="me1">shapeRecords</span><span class="br0">&#40;</span><span class="br0">&#41;</span>:
  density <span class="sy0">=</span> sr.<span class="me1">record</span><span class="br0">&#91;</span>pop_index<span class="br0">&#93;</span>/sr.<span class="me1">record</span><span class="br0">&#91;</span>area_index<span class="br0">&#93;</span>
  weight <span class="sy0">=</span> <span class="kw2">min</span><span class="br0">&#40;</span><span class="kw3">math</span>.<span class="me1">sqrt</span><span class="br0">&#40;</span>density/<span class="nu0">80.0</span><span class="br0">&#41;</span><span class="sy0">,</span> <span class="nu0">1.0</span><span class="br0">&#41;</span> * <span class="nu0">50</span>  
  R <span class="sy0">=</span> <span class="kw2">int</span><span class="br0">&#40;</span><span class="nu0">205</span> - weight<span class="br0">&#41;</span>
  G <span class="sy0">=</span> <span class="kw2">int</span><span class="br0">&#40;</span><span class="nu0">215</span> - weight<span class="br0">&#41;</span>
  B <span class="sy0">=</span> <span class="kw2">int</span><span class="br0">&#40;</span><span class="nu0">245</span> - weight<span class="br0">&#41;</span>
  pixels <span class="sy0">=</span> <span class="br0">&#91;</span><span class="br0">&#93;</span>
  <span class="kw1">for</span> x<span class="sy0">,</span>y <span class="kw1">in</span> sr.<span class="me1">shape</span>.<span class="me1">points</span>:
    <span class="br0">&#40;</span>px<span class="sy0">,</span>py<span class="br0">&#41;</span> <span class="sy0">=</span> world2screen<span class="br0">&#40;</span>inShp.<span class="me1">bbox</span><span class="sy0">,</span> iwidth<span class="sy0">,</span> iheight<span class="sy0">,</span> x<span class="sy0">,</span> y<span class="br0">&#41;</span>
    pixels.<span class="me1">append</span><span class="br0">&#40;</span><span class="br0">&#40;</span>px<span class="sy0">,</span>py<span class="br0">&#41;</span><span class="br0">&#41;</span>
  draw.<span class="me1">polygon</span><span class="br0">&#40;</span>pixels<span class="sy0">,</span> outline<span class="sy0">=</span><span class="br0">&#40;</span><span class="nu0">255</span><span class="sy0">,</span><span class="nu0">255</span><span class="sy0">,</span><span class="nu0">255</span><span class="br0">&#41;</span><span class="sy0">,</span> fill<span class="sy0">=</span><span class="br0">&#40;</span>R<span class="sy0">,</span>G<span class="sy0">,</span>B<span class="br0">&#41;</span><span class="br0">&#41;</span>
img.<span class="me1">save</span><span class="br0">&#40;</span><span class="st0">&quot;choropleth.png&quot;</span><span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/05/18-excel.py" class="mediafile mf_py">05/18-excel.py</a></dt>
<dd><pre class="code file python"><span class="st0">&quot;&quot;&quot;Convert a spreadsheet to a shapefile&quot;&quot;&quot;</span>
<span class="kw1">import</span> xlrd
<span class="kw1">import</span> shapefile
&nbsp;
<span class="co1"># Open the spreadsheet reader</span>
xls <span class="sy0">=</span> xlrd.<span class="me1">open_workbook</span><span class="br0">&#40;</span><span class="st0">&quot;NYC_MUSEUMS_GEO.xls&quot;</span><span class="br0">&#41;</span>
sheet <span class="sy0">=</span> xls.<span class="me1">sheet_by_index</span><span class="br0">&#40;</span><span class="nu0">0</span><span class="br0">&#41;</span>
&nbsp;
<span class="co1"># Open the shapefile writer</span>
w <span class="sy0">=</span> shapefile.<span class="me1">Writer</span><span class="br0">&#40;</span>shapefile.<span class="me1">POINT</span><span class="br0">&#41;</span>
&nbsp;
<span class="co1"># Move data from spreadsheet to shapefile</span>
<span class="kw1">for</span> i <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span>sheet.<span class="me1">ncols</span><span class="br0">&#41;</span>:
  w.<span class="me1">field</span><span class="br0">&#40;</span><span class="kw2">str</span><span class="br0">&#40;</span>sheet.<span class="me1">cell</span><span class="br0">&#40;</span><span class="nu0">0</span><span class="sy0">,</span>i<span class="br0">&#41;</span>.<span class="me1">value</span><span class="br0">&#41;</span><span class="sy0">,</span> <span class="st0">&quot;C&quot;</span><span class="sy0">,</span> <span class="nu0">40</span><span class="br0">&#41;</span>
<span class="kw1">for</span> i <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="sy0">,</span> sheet.<span class="me1">nrows</span><span class="br0">&#41;</span>:
  values <span class="sy0">=</span> <span class="br0">&#91;</span><span class="br0">&#93;</span>
  <span class="kw1">for</span> j <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span>sheet.<span class="me1">ncols</span><span class="br0">&#41;</span>:
    values.<span class="me1">append</span><span class="br0">&#40;</span>sheet.<span class="me1">cell</span><span class="br0">&#40;</span>i<span class="sy0">,</span>j<span class="br0">&#41;</span>.<span class="me1">value</span><span class="br0">&#41;</span>
  w.<span class="me1">record</span><span class="br0">&#40;</span>*values<span class="br0">&#41;</span>
  w.<span class="me1">point</span><span class="br0">&#40;</span><span class="kw2">float</span><span class="br0">&#40;</span>values<span class="br0">&#91;</span>-<span class="nu0">2</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">,</span><span class="kw2">float</span><span class="br0">&#40;</span>values<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
w.<span class="me1">save</span><span class="br0">&#40;</span><span class="st0">&quot;NYC_MUSEUMS_XLS2SHP&quot;</span><span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/05/19-nmea.py" class="mediafile mf_py">05/19-nmea.py</a></dt>
<dd><pre class="code file python"><span class="st0">&quot;&quot;&quot;Parse NMEA GPS strings&quot;&quot;&quot;</span>
<span class="kw1">from</span> pynmea.<span class="me1">streamer</span> <span class="kw1">import</span> NMEAStream
nmeaFile <span class="sy0">=</span> <span class="kw2">open</span><span class="br0">&#40;</span><span class="st0">&quot;nmea.txt&quot;</span><span class="br0">&#41;</span>
nmea_stream <span class="sy0">=</span> NMEAStream<span class="br0">&#40;</span>stream_obj<span class="sy0">=</span>nmeaFile<span class="br0">&#41;</span>
next_data <span class="sy0">=</span> nmea_stream.<span class="me1">get_objects</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
nmea_objects <span class="sy0">=</span> <span class="br0">&#91;</span><span class="br0">&#93;</span>
<span class="kw1">while</span> next_data:
  nmea_objects +<span class="sy0">=</span> next_data
  next_data <span class="sy0">=</span> nmea_stream.<span class="me1">get_objects</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="co1"># The NMEA stream is parsed!</span>
<span class="co1"># Let's loop through the </span>
<span class="co1"># Python object types:</span>
<span class="kw1">for</span> nmea_ob <span class="kw1">in</span> nmea_objects:
  <span class="kw1">if</span> <span class="kw2">hasattr</span><span class="br0">&#40;</span>nmea_ob<span class="sy0">,</span> <span class="st0">&quot;lat&quot;</span><span class="br0">&#41;</span>:
    <span class="kw1">print</span> <span class="st0">&quot;Lat/Lon: (%s, %s)&quot;</span> % <span class="br0">&#40;</span>nmea_ob.<span class="me1">lat</span><span class="sy0">,</span> nmea_ob.<span class="me1">lon</span><span class="br0">&#41;</span></pre>
</dd></dl>
</div>
<!-- EDIT7 SECTION "Using OGR" [3082-4839] -->
<h2 class="sectionedit8" id="playing_with_rasters">Playing with rasters</h2>
<div class="level2">
<dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/06/01-swap-bands.py" class="mediafile mf_py">06/01-swap-bands.py</a></dt>
<dd><pre class="code file python"><span class="st0">&quot;&quot;&quot;Swap bands in a raster satellite image&quot;&quot;&quot;</span>
<span class="co1"># Module within the GDAL python package </span>
<span class="kw1">import</span> gdalnumeric
<span class="co1"># name of our source image</span>
src <span class="sy0">=</span> <span class="st0">&quot;FalseColor.tif&quot;</span>
<span class="co1"># load the source image into an array</span>
arr <span class="sy0">=</span> gdalnumeric.<span class="me1">LoadFile</span><span class="br0">&#40;</span>src<span class="br0">&#41;</span>
<span class="co1"># swap bands 1 and 2 for a natural color image.</span>
<span class="co1"># We will use numpy &quot;advanced slicing&quot; to reorder the bands.</span>
<span class="co1"># Using the source image</span>
gdalnumeric.<span class="me1">SaveArray</span><span class="br0">&#40;</span>arr<span class="br0">&#91;</span><span class="br0">&#91;</span><span class="nu0">1</span><span class="sy0">,</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">2</span><span class="br0">&#93;</span><span class="sy0">,</span>:<span class="br0">&#93;</span><span class="sy0">,</span> <span class="st0">&quot;swap.tif&quot;</span><span class="sy0">,</span> format<span class="sy0">=</span><span class="st0">&quot;GTiff&quot;</span><span class="sy0">,</span> prototype<span class="sy0">=</span>src<span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/06/02-histogram.py" class="mediafile mf_py">06/02-histogram.py</a></dt>
<dd><pre class="code file python"><span class="st0">&quot;&quot;&quot;Graph a histogram of a remotely sensed image&quot;&quot;&quot;</span>
<span class="kw1">import</span> gdalnumeric
<span class="kw1">import</span> <span class="kw3">turtle</span> <span class="kw1">as</span> t
&nbsp;
<span class="kw1">def</span> histogram<span class="br0">&#40;</span>a<span class="sy0">,</span> bins<span class="sy0">=</span><span class="kw2">range</span><span class="br0">&#40;</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">256</span><span class="br0">&#41;</span><span class="br0">&#41;</span>:
  <span class="st0">&quot;&quot;&quot;
  Histogram function for multi-dimensional array.
  a = array
  bins = range of numbers to match 
  &quot;&quot;&quot;</span>
  fa <span class="sy0">=</span> a.<span class="me1">flat</span>
  n <span class="sy0">=</span> gdalnumeric.<span class="me1">numpy</span>.<span class="me1">searchsorted</span><span class="br0">&#40;</span>gdalnumeric.<span class="me1">numpy</span>.<span class="me1">sort</span><span class="br0">&#40;</span>fa<span class="br0">&#41;</span><span class="sy0">,</span> bins<span class="br0">&#41;</span>
  n <span class="sy0">=</span> gdalnumeric.<span class="me1">numpy</span>.<span class="me1">concatenate</span><span class="br0">&#40;</span><span class="br0">&#91;</span>n<span class="sy0">,</span> <span class="br0">&#91;</span><span class="kw2">len</span><span class="br0">&#40;</span>fa<span class="br0">&#41;</span><span class="br0">&#93;</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
  hist <span class="sy0">=</span> n<span class="br0">&#91;</span><span class="nu0">1</span>:<span class="br0">&#93;</span>-n<span class="br0">&#91;</span>:-<span class="nu0">1</span><span class="br0">&#93;</span> 
  <span class="kw1">return</span> hist
&nbsp;
<span class="kw1">def</span> draw_histogram<span class="br0">&#40;</span>hist<span class="sy0">,</span> scale<span class="sy0">=</span><span class="kw2">True</span><span class="br0">&#41;</span>:
    t.<span class="me1">color</span><span class="br0">&#40;</span><span class="st0">&quot;black&quot;</span><span class="br0">&#41;</span>
    <span class="co1"># Draw the axes</span>
    axes <span class="sy0">=</span> <span class="br0">&#40;</span><span class="br0">&#40;</span>-<span class="nu0">355</span><span class="sy0">,</span> -<span class="nu0">200</span><span class="br0">&#41;</span><span class="sy0">,</span><span class="br0">&#40;</span><span class="nu0">355</span><span class="sy0">,</span> -<span class="nu0">200</span><span class="br0">&#41;</span><span class="sy0">,</span><span class="br0">&#40;</span>-<span class="nu0">355</span><span class="sy0">,</span> -<span class="nu0">200</span><span class="br0">&#41;</span><span class="sy0">,</span><span class="br0">&#40;</span>-<span class="nu0">355</span><span class="sy0">,</span> <span class="nu0">250</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
    t.<span class="me1">up</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
    <span class="kw1">for</span> p <span class="kw1">in</span> axes:
      t.<span class="me1">goto</span><span class="br0">&#40;</span>p<span class="br0">&#41;</span>
      t.<span class="me1">down</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
    <span class="co1"># Labels</span>
    t.<span class="me1">up</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
    t.<span class="me1">goto</span><span class="br0">&#40;</span><span class="nu0">0</span><span class="sy0">,</span> -<span class="nu0">250</span><span class="br0">&#41;</span>
    t.<span class="me1">write</span><span class="br0">&#40;</span><span class="st0">&quot;VALUE&quot;</span><span class="sy0">,</span>font<span class="sy0">=</span><span class="br0">&#40;</span><span class="st0">&quot;Arial,&quot;</span><span class="sy0">,</span><span class="nu0">12</span><span class="sy0">,</span><span class="st0">&quot;bold&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
    t.<span class="me1">up</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
    t.<span class="me1">goto</span><span class="br0">&#40;</span>-<span class="nu0">400</span><span class="sy0">,</span> <span class="nu0">280</span><span class="br0">&#41;</span>
    t.<span class="me1">write</span><span class="br0">&#40;</span><span class="st0">&quot;FREQUENCY&quot;</span><span class="sy0">,</span>font<span class="sy0">=</span><span class="br0">&#40;</span><span class="st0">&quot;Arial,&quot;</span><span class="sy0">,</span><span class="nu0">12</span><span class="sy0">,</span><span class="st0">&quot;bold&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
    <span class="co1"># Tick marks</span>
    <span class="co1"># x axis</span>
    x <span class="sy0">=</span> -<span class="nu0">355</span>
    y <span class="sy0">=</span> -<span class="nu0">200</span>
    t.<span class="me1">up</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
    <span class="kw1">for</span> i <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="sy0">,</span><span class="nu0">11</span><span class="br0">&#41;</span>:
      x <span class="sy0">=</span> x+<span class="nu0">65</span>
      t.<span class="me1">goto</span><span class="br0">&#40;</span>x<span class="sy0">,</span>y<span class="br0">&#41;</span>
      t.<span class="me1">down</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
      t.<span class="me1">goto</span><span class="br0">&#40;</span>x<span class="sy0">,</span>y-<span class="nu0">10</span><span class="br0">&#41;</span>
      t.<span class="me1">up</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
      t.<span class="me1">goto</span><span class="br0">&#40;</span>x<span class="sy0">,</span>y-<span class="nu0">25</span><span class="br0">&#41;</span>
      t.<span class="me1">write</span><span class="br0">&#40;</span><span class="st0">&quot;%s&quot;</span> % <span class="br0">&#40;</span>i*<span class="nu0">25</span><span class="br0">&#41;</span><span class="sy0">,</span> align<span class="sy0">=</span><span class="st0">&quot;center&quot;</span><span class="br0">&#41;</span>
    <span class="co1"># y axis</span>
    x <span class="sy0">=</span> -<span class="nu0">355</span>
    y <span class="sy0">=</span> -<span class="nu0">200</span>
    t.<span class="me1">up</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
    pixels <span class="sy0">=</span> <span class="kw2">sum</span><span class="br0">&#40;</span>hist<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
    <span class="kw1">if</span> scale:
      <span class="kw2">max</span> <span class="sy0">=</span> <span class="nu0">0</span>
      <span class="kw1">for</span> h <span class="kw1">in</span> hist:
        hmax <span class="sy0">=</span> h.<span class="kw2">max</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
        <span class="kw1">if</span> hmax <span class="sy0">&gt;</span> <span class="kw2">max</span>:
          <span class="kw2">max</span> <span class="sy0">=</span> hmax
      pixels <span class="sy0">=</span> <span class="kw2">max</span>
    label <span class="sy0">=</span> pixels/<span class="nu0">10</span>
    <span class="kw1">for</span> i <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="sy0">,</span><span class="nu0">11</span><span class="br0">&#41;</span>:
      y <span class="sy0">=</span> y+<span class="nu0">45</span>
      t.<span class="me1">goto</span><span class="br0">&#40;</span>x<span class="sy0">,</span>y<span class="br0">&#41;</span>
      t.<span class="me1">down</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
      t.<span class="me1">goto</span><span class="br0">&#40;</span>x-<span class="nu0">10</span><span class="sy0">,</span>y<span class="br0">&#41;</span>
      t.<span class="me1">up</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
      t.<span class="me1">goto</span><span class="br0">&#40;</span>x-<span class="nu0">15</span><span class="sy0">,</span>y-<span class="nu0">6</span><span class="br0">&#41;</span>
      t.<span class="me1">write</span><span class="br0">&#40;</span><span class="st0">&quot;%s&quot;</span> % <span class="br0">&#40;</span>i*label<span class="br0">&#41;</span><span class="sy0">,</span> align<span class="sy0">=</span><span class="st0">&quot;right&quot;</span><span class="br0">&#41;</span>
    <span class="co1"># Plot each histogram as a colored line</span>
    x_ratio <span class="sy0">=</span> <span class="nu0">709.0</span> / <span class="nu0">256</span>
    y_ratio <span class="sy0">=</span> <span class="nu0">450.0</span> / pixels
    <span class="co1"># Add more colors to this list if comparing</span>
    <span class="co1"># more than 3 bands or 1 image</span>
    colors <span class="sy0">=</span> <span class="br0">&#91;</span><span class="st0">&quot;red&quot;</span><span class="sy0">,</span> <span class="st0">&quot;green&quot;</span><span class="sy0">,</span> <span class="st0">&quot;blue&quot;</span><span class="br0">&#93;</span>
    <span class="kw1">for</span> j <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span><span class="kw2">len</span><span class="br0">&#40;</span>hist<span class="br0">&#41;</span><span class="br0">&#41;</span>:
      h <span class="sy0">=</span> hist<span class="br0">&#91;</span>j<span class="br0">&#93;</span>
      x <span class="sy0">=</span> -<span class="nu0">354</span>
      y <span class="sy0">=</span> -<span class="nu0">199</span>
      t.<span class="me1">up</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
      t.<span class="me1">goto</span><span class="br0">&#40;</span>x<span class="sy0">,</span>y<span class="br0">&#41;</span>
      t.<span class="me1">down</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
      t.<span class="me1">color</span><span class="br0">&#40;</span>colors<span class="br0">&#91;</span>j<span class="br0">&#93;</span><span class="br0">&#41;</span>
      <span class="kw1">for</span> i <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span><span class="nu0">256</span><span class="br0">&#41;</span>:
        x <span class="sy0">=</span> i * x_ratio
        y <span class="sy0">=</span> h<span class="br0">&#91;</span>i<span class="br0">&#93;</span> * y_ratio
        x <span class="sy0">=</span> x - <span class="br0">&#40;</span><span class="nu0">709</span>/<span class="nu0">2</span><span class="br0">&#41;</span>
        y <span class="sy0">=</span> y + -<span class="nu0">199</span>
        t.<span class="me1">goto</span><span class="br0">&#40;</span><span class="br0">&#40;</span>x<span class="sy0">,</span>y<span class="br0">&#41;</span><span class="br0">&#41;</span>
&nbsp;
im <span class="sy0">=</span> <span class="st0">&quot;swap.tif&quot;</span>
histograms <span class="sy0">=</span> <span class="br0">&#91;</span><span class="br0">&#93;</span>
arr <span class="sy0">=</span> gdalnumeric.<span class="me1">LoadFile</span><span class="br0">&#40;</span>im<span class="br0">&#41;</span>
<span class="kw1">for</span> b <span class="kw1">in</span> arr:
  histograms.<span class="me1">append</span><span class="br0">&#40;</span>histogram<span class="br0">&#40;</span>b<span class="br0">&#41;</span><span class="br0">&#41;</span>
draw_histogram<span class="br0">&#40;</span>histograms<span class="br0">&#41;</span>
&nbsp;
<span class="co1"># Hide our pen</span>
t.<span class="me1">pen</span><span class="br0">&#40;</span>shown<span class="sy0">=</span><span class="kw2">False</span><span class="br0">&#41;</span>
t.<span class="me1">done</span><span class="br0">&#40;</span><span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/06/03-stretch.py" class="mediafile mf_py">06/03-stretch.py</a></dt>
<dd><pre class="code file python"><span class="st0">&quot;&quot;&quot;Perform a histogram stretch on an image&quot;&quot;&quot;</span>
<span class="kw1">import</span> gdalnumeric
<span class="kw1">import</span> <span class="kw3">operator</span>
&nbsp;
<span class="kw1">def</span> histogram<span class="br0">&#40;</span>a<span class="sy0">,</span> bins<span class="sy0">=</span><span class="kw2">range</span><span class="br0">&#40;</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">256</span><span class="br0">&#41;</span><span class="br0">&#41;</span>:
  <span class="st0">&quot;&quot;&quot;
  Histogram function for multi-dimensional array.
  a = array
  bins = range of numbers to match 
  &quot;&quot;&quot;</span>
  fa <span class="sy0">=</span> a.<span class="me1">flat</span>
  n <span class="sy0">=</span> gdalnumeric.<span class="me1">numpy</span>.<span class="me1">searchsorted</span><span class="br0">&#40;</span>gdalnumeric.<span class="me1">numpy</span>.<span class="me1">sort</span><span class="br0">&#40;</span>fa<span class="br0">&#41;</span><span class="sy0">,</span> bins<span class="br0">&#41;</span>
  n <span class="sy0">=</span> gdalnumeric.<span class="me1">numpy</span>.<span class="me1">concatenate</span><span class="br0">&#40;</span><span class="br0">&#91;</span>n<span class="sy0">,</span> <span class="br0">&#91;</span><span class="kw2">len</span><span class="br0">&#40;</span>fa<span class="br0">&#41;</span><span class="br0">&#93;</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
  hist <span class="sy0">=</span> n<span class="br0">&#91;</span><span class="nu0">1</span>:<span class="br0">&#93;</span>-n<span class="br0">&#91;</span>:-<span class="nu0">1</span><span class="br0">&#93;</span> 
  <span class="kw1">return</span> hist
&nbsp;
<span class="kw1">def</span> stretch<span class="br0">&#40;</span>a<span class="br0">&#41;</span>:
  <span class="st0">&quot;&quot;&quot;
  Performs a histogram stretch on a gdalnumeric array image.
  &quot;&quot;&quot;</span>
  hist <span class="sy0">=</span> histogram<span class="br0">&#40;</span>a<span class="br0">&#41;</span>
  lut <span class="sy0">=</span> <span class="br0">&#91;</span><span class="br0">&#93;</span>
  <span class="kw1">for</span> b <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span><span class="nu0">0</span><span class="sy0">,</span> <span class="kw2">len</span><span class="br0">&#40;</span>hist<span class="br0">&#41;</span><span class="sy0">,</span> <span class="nu0">256</span><span class="br0">&#41;</span>:
    <span class="co1"># step size</span>
    step <span class="sy0">=</span> <span class="kw2">reduce</span><span class="br0">&#40;</span><span class="kw3">operator</span>.<span class="me1">add</span><span class="sy0">,</span> hist<span class="br0">&#91;</span>b:b+<span class="nu0">256</span><span class="br0">&#93;</span><span class="br0">&#41;</span> / <span class="nu0">255</span>
    <span class="co1"># create equalization lookup table</span>
    n <span class="sy0">=</span> <span class="nu0">0</span>
    <span class="kw1">for</span> i <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span><span class="nu0">256</span><span class="br0">&#41;</span>:
      lut.<span class="me1">append</span><span class="br0">&#40;</span>n / step<span class="br0">&#41;</span>
      n <span class="sy0">=</span> n + hist<span class="br0">&#91;</span>i+b<span class="br0">&#93;</span>
  gdalnumeric.<span class="me1">numpy</span>.<span class="me1">take</span><span class="br0">&#40;</span>lut<span class="sy0">,</span> a<span class="sy0">,</span> out<span class="sy0">=</span>a<span class="br0">&#41;</span>
  <span class="kw1">return</span> a
&nbsp;
src <span class="sy0">=</span> <span class="st0">&quot;swap.tif&quot;</span>
arr <span class="sy0">=</span> gdalnumeric.<span class="me1">LoadFile</span><span class="br0">&#40;</span>src<span class="br0">&#41;</span>
stretched <span class="sy0">=</span> stretch<span class="br0">&#40;</span>arr<span class="br0">&#41;</span>
gdalnumeric.<span class="me1">SaveArray</span><span class="br0">&#40;</span>arr<span class="sy0">,</span> <span class="st0">&quot;stretched.tif&quot;</span><span class="sy0">,</span> format<span class="sy0">=</span><span class="st0">&quot;GTiff&quot;</span><span class="sy0">,</span> prototype<span class="sy0">=</span>src<span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/06/04-clip.py" class="mediafile mf_py">06/04-clip.py</a></dt>
<dd><pre class="code file python"><span class="st0">&quot;&quot;&quot;Clip a raster image using a shapefile&quot;&quot;&quot;</span>
<span class="kw1">import</span> <span class="kw3">operator</span>
<span class="kw1">import</span> gdal<span class="sy0">,</span> gdalnumeric<span class="sy0">,</span> osr
<span class="kw1">import</span> shapefile
<span class="kw1">import</span> Image<span class="sy0">,</span> ImageDraw
&nbsp;
<span class="co1"># Raster image to clip</span>
raster <span class="sy0">=</span> <span class="st0">&quot;stretched.tif&quot;</span>
&nbsp;
<span class="co1"># Polygon shapefile used to clip</span>
shp <span class="sy0">=</span> <span class="st0">&quot;hancock&quot;</span>
&nbsp;
<span class="co1"># Name of clipped raster file(s)</span>
output <span class="sy0">=</span> <span class="st0">&quot;clip&quot;</span>
&nbsp;
<span class="kw1">def</span> imageToArray<span class="br0">&#40;</span>i<span class="br0">&#41;</span>:
    <span class="st0">&quot;&quot;&quot;
    Converts a Python Imaging Library array to a gdalnumeric image.
    &quot;&quot;&quot;</span>
    a<span class="sy0">=</span>gdalnumeric.<span class="me1">numpy</span>.<span class="me1">fromstring</span><span class="br0">&#40;</span>i.<span class="me1">tostring</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span><span class="st0">'b'</span><span class="br0">&#41;</span>
    a.<span class="me1">shape</span><span class="sy0">=</span>i.<span class="me1">im</span>.<span class="me1">size</span><span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span><span class="sy0">,</span> i.<span class="me1">im</span>.<span class="me1">size</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>
    <span class="kw1">return</span> a
&nbsp;
<span class="kw1">def</span> world2Pixel<span class="br0">&#40;</span>geoMatrix<span class="sy0">,</span> x<span class="sy0">,</span> y<span class="br0">&#41;</span>:
  <span class="st0">&quot;&quot;&quot;
  Uses a gdal geomatrix (gdal.GetGeoTransform()) to calculate
  the pixel location of a geospatial coordinate 
  &quot;&quot;&quot;</span>
  ulX <span class="sy0">=</span> geoMatrix<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>
  ulY <span class="sy0">=</span> geoMatrix<span class="br0">&#91;</span><span class="nu0">3</span><span class="br0">&#93;</span>
  xDist <span class="sy0">=</span> geoMatrix<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span>
  yDist <span class="sy0">=</span> geoMatrix<span class="br0">&#91;</span><span class="nu0">5</span><span class="br0">&#93;</span>
  rtnX <span class="sy0">=</span> geoMatrix<span class="br0">&#91;</span><span class="nu0">2</span><span class="br0">&#93;</span>
  rtnY <span class="sy0">=</span> geoMatrix<span class="br0">&#91;</span><span class="nu0">4</span><span class="br0">&#93;</span>
  pixel <span class="sy0">=</span> <span class="kw2">int</span><span class="br0">&#40;</span><span class="br0">&#40;</span>x - ulX<span class="br0">&#41;</span> / xDist<span class="br0">&#41;</span>
  line <span class="sy0">=</span> <span class="kw2">int</span><span class="br0">&#40;</span><span class="br0">&#40;</span>ulY - y<span class="br0">&#41;</span> / xDist<span class="br0">&#41;</span>
  <span class="kw1">return</span> <span class="br0">&#40;</span>pixel<span class="sy0">,</span> line<span class="br0">&#41;</span> 
&nbsp;
<span class="co1"># Load the source data as a gdalnumeric array</span>
srcArray <span class="sy0">=</span> gdalnumeric.<span class="me1">LoadFile</span><span class="br0">&#40;</span>raster<span class="br0">&#41;</span>
&nbsp;
<span class="co1"># Also load as a gdal image to get geotransform (world file) info</span>
srcImage <span class="sy0">=</span> gdal.<span class="me1">Open</span><span class="br0">&#40;</span>raster<span class="br0">&#41;</span>
geoTrans <span class="sy0">=</span> srcImage.<span class="me1">GetGeoTransform</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp;
<span class="co1"># Use pyshp to open the shapefile</span>
r <span class="sy0">=</span> shapefile.<span class="me1">Reader</span><span class="br0">&#40;</span><span class="st0">&quot;%s.shp&quot;</span> % shp<span class="br0">&#41;</span>
&nbsp;
<span class="co1"># Convert the layer extent to image pixel coordinates</span>
minX<span class="sy0">,</span> minY<span class="sy0">,</span> maxX<span class="sy0">,</span> maxY <span class="sy0">=</span> r.<span class="me1">bbox</span>
ulX<span class="sy0">,</span> ulY <span class="sy0">=</span> world2Pixel<span class="br0">&#40;</span>geoTrans<span class="sy0">,</span> minX<span class="sy0">,</span> maxY<span class="br0">&#41;</span>
lrX<span class="sy0">,</span> lrY <span class="sy0">=</span> world2Pixel<span class="br0">&#40;</span>geoTrans<span class="sy0">,</span> maxX<span class="sy0">,</span> minY<span class="br0">&#41;</span>
&nbsp;
<span class="co1"># Calculate the pixel size of the new image</span>
pxWidth <span class="sy0">=</span> <span class="kw2">int</span><span class="br0">&#40;</span>lrX - ulX<span class="br0">&#41;</span>
pxHeight <span class="sy0">=</span> <span class="kw2">int</span><span class="br0">&#40;</span>lrY - ulY<span class="br0">&#41;</span>
&nbsp;
clip <span class="sy0">=</span> srcArray<span class="br0">&#91;</span>:<span class="sy0">,</span> ulY:lrY<span class="sy0">,</span> ulX:lrX<span class="br0">&#93;</span>
&nbsp;
<span class="co1"># Create a new geomatrix for the image</span>
geoTrans <span class="sy0">=</span> <span class="kw2">list</span><span class="br0">&#40;</span>geoTrans<span class="br0">&#41;</span>
geoTrans<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span> <span class="sy0">=</span> minX
geoTrans<span class="br0">&#91;</span><span class="nu0">3</span><span class="br0">&#93;</span> <span class="sy0">=</span> maxY
&nbsp;
<span class="co1"># Map points to pixels for drawing the county boundary </span>
<span class="co1"># on a blank 8-bit, black and white, mask image.</span>
pixels <span class="sy0">=</span> <span class="br0">&#91;</span><span class="br0">&#93;</span>
<span class="kw1">for</span> p <span class="kw1">in</span> r.<span class="me1">shape</span><span class="br0">&#40;</span><span class="nu0">0</span><span class="br0">&#41;</span>.<span class="me1">points</span>:
  pixels.<span class="me1">append</span><span class="br0">&#40;</span>world2Pixel<span class="br0">&#40;</span>geoTrans<span class="sy0">,</span> p<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="sy0">,</span> p<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
rasterPoly <span class="sy0">=</span> Image.<span class="kw3">new</span><span class="br0">&#40;</span><span class="st0">&quot;L&quot;</span><span class="sy0">,</span> <span class="br0">&#40;</span>pxWidth<span class="sy0">,</span> pxHeight<span class="br0">&#41;</span><span class="sy0">,</span> <span class="nu0">1</span><span class="br0">&#41;</span>
<span class="co1"># Create a blank image in PIL to draw the polygon.</span>
rasterize <span class="sy0">=</span> ImageDraw.<span class="me1">Draw</span><span class="br0">&#40;</span>rasterPoly<span class="br0">&#41;</span>
rasterize.<span class="me1">polygon</span><span class="br0">&#40;</span>pixels<span class="sy0">,</span> <span class="nu0">0</span><span class="br0">&#41;</span>
<span class="co1"># Convert the PIL image to a NumPy array</span>
mask <span class="sy0">=</span> imageToArray<span class="br0">&#40;</span>rasterPoly<span class="br0">&#41;</span>   
&nbsp;
<span class="co1"># Clip the image using the mask</span>
clip <span class="sy0">=</span> gdalnumeric.<span class="me1">numpy</span>.<span class="me1">choose</span><span class="br0">&#40;</span>mask<span class="sy0">,</span> <span class="br0">&#40;</span>clip<span class="sy0">,</span> <span class="nu0">0</span><span class="br0">&#41;</span><span class="br0">&#41;</span>.<span class="me1">astype</span><span class="br0">&#40;</span>gdalnumeric.<span class="me1">numpy</span>.<span class="me1">uint8</span><span class="br0">&#41;</span>
&nbsp;
<span class="co1"># Save ndvi as tiff</span>
gdalnumeric.<span class="me1">SaveArray</span><span class="br0">&#40;</span>clip<span class="sy0">,</span> <span class="st0">&quot;%s.tif&quot;</span> % output<span class="sy0">,</span> format<span class="sy0">=</span><span class="st0">&quot;GTiff&quot;</span><span class="sy0">,</span> prototype<span class="sy0">=</span>raster<span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/06/05-classify.py" class="mediafile mf_py">06/05-classify.py</a></dt>
<dd><pre class="code file python"><span class="st0">&quot;&quot;&quot;Classify a remotely sensed image&quot;&quot;&quot;</span>
<span class="kw1">import</span> gdalnumeric
&nbsp;
<span class="co1"># Input file name (thermal image)  </span>
src <span class="sy0">=</span> <span class="st0">&quot;thermal.tif&quot;</span>
&nbsp;
<span class="co1"># Output file name</span>
tgt <span class="sy0">=</span> <span class="st0">&quot;classified.jpg&quot;</span>
&nbsp;
<span class="co1"># Load the image into numpy using gdal</span>
srcArr <span class="sy0">=</span> gdalnumeric.<span class="me1">LoadFile</span><span class="br0">&#40;</span>src<span class="br0">&#41;</span>
&nbsp;
<span class="co1"># Split the histogram into 20 bins as our classes</span>
classes <span class="sy0">=</span> gdalnumeric.<span class="me1">numpy</span>.<span class="me1">histogram</span><span class="br0">&#40;</span>srcArr<span class="sy0">,</span> bins<span class="sy0">=</span><span class="nu0">20</span><span class="br0">&#41;</span><span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span>
&nbsp;
<span class="co1"># Color look-up table (LUT) - must be len(classes)+1.</span>
<span class="co1"># Specified as R,G,B tuples </span>
lut <span class="sy0">=</span> <span class="br0">&#91;</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="sy0">,</span><span class="br0">&#91;</span><span class="nu0">191</span><span class="sy0">,</span><span class="nu0">48</span><span class="sy0">,</span><span class="nu0">48</span><span class="br0">&#93;</span><span class="sy0">,</span><span class="br0">&#91;</span><span class="nu0">166</span><span class="sy0">,</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="sy0">,</span><span class="br0">&#91;</span><span class="nu0">255</span><span class="sy0">,</span><span class="nu0">64</span><span class="sy0">,</span><span class="nu0">64</span><span class="br0">&#93;</span><span class="sy0">,</span>
<span class="br0">&#91;</span><span class="nu0">255</span><span class="sy0">,</span><span class="nu0">115</span><span class="sy0">,</span><span class="nu0">115</span><span class="br0">&#93;</span><span class="sy0">,</span><span class="br0">&#91;</span><span class="nu0">255</span><span class="sy0">,</span><span class="nu0">116</span><span class="sy0">,</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="sy0">,</span><span class="br0">&#91;</span><span class="nu0">191</span><span class="sy0">,</span><span class="nu0">113</span><span class="sy0">,</span><span class="nu0">48</span><span class="br0">&#93;</span><span class="sy0">,</span><span class="br0">&#91;</span><span class="nu0">255</span><span class="sy0">,</span><span class="nu0">178</span><span class="sy0">,</span><span class="nu0">115</span><span class="br0">&#93;</span><span class="sy0">,</span>
<span class="br0">&#91;</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">153</span><span class="sy0">,</span><span class="nu0">153</span><span class="br0">&#93;</span><span class="sy0">,</span><span class="br0">&#91;</span><span class="nu0">29</span><span class="sy0">,</span><span class="nu0">115</span><span class="sy0">,</span><span class="nu0">115</span><span class="br0">&#93;</span><span class="sy0">,</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">99</span><span class="sy0">,</span><span class="nu0">99</span><span class="br0">&#93;</span><span class="sy0">,</span><span class="br0">&#91;</span><span class="nu0">166</span><span class="sy0">,</span><span class="nu0">75</span><span class="sy0">,</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="sy0">,</span>
<span class="br0">&#91;</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">204</span><span class="sy0">,</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="sy0">,</span><span class="br0">&#91;</span><span class="nu0">51</span><span class="sy0">,</span><span class="nu0">204</span><span class="sy0">,</span><span class="nu0">204</span><span class="br0">&#93;</span><span class="sy0">,</span><span class="br0">&#91;</span><span class="nu0">255</span><span class="sy0">,</span><span class="nu0">150</span><span class="sy0">,</span><span class="nu0">64</span><span class="br0">&#93;</span><span class="sy0">,</span><span class="br0">&#91;</span><span class="nu0">92</span><span class="sy0">,</span><span class="nu0">204</span><span class="sy0">,</span><span class="nu0">204</span><span class="br0">&#93;</span><span class="sy0">,</span><span class="br0">&#91;</span><span class="nu0">38</span><span class="sy0">,</span><span class="nu0">153</span><span class="sy0">,</span><span class="nu0">38</span><span class="br0">&#93;</span><span class="sy0">,</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">133</span><span class="sy0">,</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="sy0">,</span>
<span class="br0">&#91;</span><span class="nu0">57</span><span class="sy0">,</span><span class="nu0">230</span><span class="sy0">,</span><span class="nu0">57</span><span class="br0">&#93;</span><span class="sy0">,</span><span class="br0">&#91;</span><span class="nu0">103</span><span class="sy0">,</span><span class="nu0">230</span><span class="sy0">,</span><span class="nu0">103</span><span class="br0">&#93;</span><span class="sy0">,</span><span class="br0">&#91;</span><span class="nu0">184</span><span class="sy0">,</span><span class="nu0">138</span><span class="sy0">,</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="br0">&#93;</span>
<span class="kw1">print</span> <span class="kw2">len</span><span class="br0">&#40;</span>lut<span class="br0">&#41;</span>
&nbsp;
<span class="co1"># Starting value for classification</span>
start <span class="sy0">=</span> <span class="nu0">1</span>
&nbsp;
<span class="co1"># Set up the RGB color JPEG output image</span>
rgb <span class="sy0">=</span> gdalnumeric.<span class="me1">numpy</span>.<span class="me1">zeros</span><span class="br0">&#40;</span><span class="br0">&#40;</span><span class="nu0">3</span><span class="sy0">,</span> srcArr.<span class="me1">shape</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="sy0">,</span> srcArr.<span class="me1">shape</span><span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span><span class="sy0">,</span><span class="br0">&#41;</span><span class="sy0">,</span> gdalnumeric.<span class="me1">numpy</span>.<span class="me1">float32</span><span class="br0">&#41;</span>
&nbsp;
<span class="co1"># Process all classes and assign colors</span>
<span class="kw1">for</span> i <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span><span class="kw2">len</span><span class="br0">&#40;</span>classes<span class="br0">&#41;</span><span class="br0">&#41;</span>:
    mask <span class="sy0">=</span> gdalnumeric.<span class="me1">numpy</span>.<span class="me1">logical_and</span><span class="br0">&#40;</span>start <span class="sy0">&lt;=</span> srcArr<span class="sy0">,</span> srcArr <span class="sy0">&lt;=</span> classes<span class="br0">&#91;</span>i<span class="br0">&#93;</span><span class="br0">&#41;</span>
    <span class="kw1">for</span> j <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span><span class="kw2">len</span><span class="br0">&#40;</span>lut<span class="br0">&#91;</span>i<span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>:
        rgb<span class="br0">&#91;</span>j<span class="br0">&#93;</span> <span class="sy0">=</span> gdalnumeric.<span class="me1">numpy</span>.<span class="me1">choose</span><span class="br0">&#40;</span>mask<span class="sy0">,</span> <span class="br0">&#40;</span>rgb<span class="br0">&#91;</span>j<span class="br0">&#93;</span><span class="sy0">,</span> lut<span class="br0">&#91;</span>i<span class="br0">&#93;</span><span class="br0">&#91;</span>j<span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
    start <span class="sy0">=</span> classes<span class="br0">&#91;</span>i<span class="br0">&#93;</span>+<span class="nu0">1</span> 
&nbsp;
<span class="co1"># Save the image    </span>
gdalnumeric.<span class="me1">SaveArray</span><span class="br0">&#40;</span>rgb.<span class="me1">astype</span><span class="br0">&#40;</span>gdalnumeric.<span class="me1">numpy</span>.<span class="me1">uint8</span><span class="br0">&#41;</span><span class="sy0">,</span> tgt<span class="sy0">,</span> format<span class="sy0">=</span><span class="st0">&quot;JPEG&quot;</span><span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/06/06-threshold.py" class="mediafile mf_py">06/06-threshold.py</a></dt>
<dd><pre class="code file python"><span class="st0">&quot;&quot;&quot;Threshold an image to black and white&quot;&quot;&quot;</span>
<span class="kw1">import</span> gdalnumeric
&nbsp;
<span class="co1"># Input file name (thermal image)  </span>
src <span class="sy0">=</span> <span class="st0">&quot;islands.tif&quot;</span>
&nbsp;
<span class="co1"># Output file name</span>
tgt <span class="sy0">=</span> <span class="st0">&quot;islands_classified.tiff&quot;</span>
&nbsp;
<span class="co1"># Load the image into numpy using gdal</span>
srcArr <span class="sy0">=</span> gdalnumeric.<span class="me1">LoadFile</span><span class="br0">&#40;</span>src<span class="br0">&#41;</span>
&nbsp;
<span class="co1"># Split the histogram into 20 bins as our classes</span>
classes <span class="sy0">=</span> gdalnumeric.<span class="me1">numpy</span>.<span class="me1">histogram</span><span class="br0">&#40;</span>srcArr<span class="sy0">,</span> bins<span class="sy0">=</span><span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span>
&nbsp;
lut <span class="sy0">=</span> <span class="br0">&#91;</span><span class="br0">&#91;</span><span class="nu0">255</span><span class="sy0">,</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="sy0">,</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="sy0">,</span><span class="br0">&#91;</span><span class="nu0">255</span><span class="sy0">,</span><span class="nu0">255</span><span class="sy0">,</span><span class="nu0">255</span><span class="br0">&#93;</span><span class="br0">&#93;</span>
&nbsp;
<span class="co1"># Starting value for classification</span>
start <span class="sy0">=</span> <span class="nu0">1</span>
&nbsp;
<span class="co1"># Set up the output image</span>
rgb <span class="sy0">=</span> gdalnumeric.<span class="me1">numpy</span>.<span class="me1">zeros</span><span class="br0">&#40;</span><span class="br0">&#40;</span><span class="nu0">3</span><span class="sy0">,</span> srcArr.<span class="me1">shape</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="sy0">,</span> srcArr.<span class="me1">shape</span><span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span><span class="sy0">,</span><span class="br0">&#41;</span><span class="sy0">,</span> gdalnumeric.<span class="me1">numpy</span>.<span class="me1">float32</span><span class="br0">&#41;</span>
&nbsp;
<span class="co1"># Process all classes and assign colors</span>
<span class="kw1">for</span> i <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span><span class="kw2">len</span><span class="br0">&#40;</span>classes<span class="br0">&#41;</span><span class="br0">&#41;</span>:
    mask <span class="sy0">=</span> gdalnumeric.<span class="me1">numpy</span>.<span class="me1">logical_and</span><span class="br0">&#40;</span>start <span class="sy0">&lt;=</span> srcArr<span class="sy0">,</span> srcArr <span class="sy0">&lt;=</span> classes<span class="br0">&#91;</span>i<span class="br0">&#93;</span><span class="br0">&#41;</span>
    <span class="kw1">for</span> j <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span><span class="kw2">len</span><span class="br0">&#40;</span>lut<span class="br0">&#91;</span>i<span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>:
        rgb<span class="br0">&#91;</span>j<span class="br0">&#93;</span> <span class="sy0">=</span> gdalnumeric.<span class="me1">numpy</span>.<span class="me1">choose</span><span class="br0">&#40;</span>mask<span class="sy0">,</span> <span class="br0">&#40;</span>rgb<span class="br0">&#91;</span>j<span class="br0">&#93;</span><span class="sy0">,</span> lut<span class="br0">&#91;</span>i<span class="br0">&#93;</span><span class="br0">&#91;</span>j<span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
    start <span class="sy0">=</span> classes<span class="br0">&#91;</span>i<span class="br0">&#93;</span>+<span class="nu0">1</span> 
&nbsp;
<span class="co1"># Save the image    </span>
gdalnumeric.<span class="me1">SaveArray</span><span class="br0">&#40;</span>rgb.<span class="me1">astype</span><span class="br0">&#40;</span>gdalnumeric.<span class="me1">numpy</span>.<span class="me1">uint8</span><span class="br0">&#41;</span><span class="sy0">,</span> tgt<span class="sy0">,</span> format<span class="sy0">=</span><span class="st0">&quot;GTIFF&quot;</span><span class="sy0">,</span> prototype<span class="sy0">=</span>src<span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/06/07-extract.py" class="mediafile mf_py">06/07-extract.py</a></dt>
<dd><pre class="code file python"><span class="st0">&quot;&quot;&quot;Automatically extract features of a thresholded image to a shapefile&quot;&quot;&quot;</span>
<span class="kw1">import</span> gdal
<span class="kw1">import</span> ogr<span class="sy0">,</span> osr
&nbsp;
<span class="co1"># Thresholded input raster name</span>
src <span class="sy0">=</span> <span class="st0">&quot;islands_classified.tiff&quot;</span>
<span class="co1"># Output shapefile name</span>
tgt <span class="sy0">=</span> <span class="st0">&quot;extract.shp&quot;</span>
<span class="co1"># OGR layer name</span>
tgtLayer <span class="sy0">=</span> <span class="st0">&quot;extract&quot;</span>
<span class="co1"># Open the input raster</span>
srcDS <span class="sy0">=</span> gdal.<span class="me1">Open</span><span class="br0">&#40;</span>src<span class="br0">&#41;</span>
<span class="co1"># Grab the first band</span>
band <span class="sy0">=</span> srcDS.<span class="me1">GetRasterBand</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>
<span class="co1"># Force gdal to use the band as a mask</span>
mask <span class="sy0">=</span> band
<span class="co1"># Set up the output shapefile</span>
driver <span class="sy0">=</span> ogr.<span class="me1">GetDriverByName</span><span class="br0">&#40;</span><span class="st0">&quot;ESRI Shapefile&quot;</span><span class="br0">&#41;</span>
shp <span class="sy0">=</span> driver.<span class="me1">CreateDataSource</span><span class="br0">&#40;</span>tgt<span class="br0">&#41;</span>
<span class="co1"># Copy the spatial reference</span>
srs <span class="sy0">=</span> osr.<span class="me1">SpatialReference</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
srs.<span class="me1">ImportFromWkt</span><span class="br0">&#40;</span>srcDS.<span class="me1">GetProjectionRef</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
layer <span class="sy0">=</span> shp.<span class="me1">CreateLayer</span><span class="br0">&#40;</span>tgtLayer<span class="sy0">,</span> srs<span class="sy0">=</span>srs<span class="br0">&#41;</span>
<span class="co1"># Set up the dbf file</span>
fd <span class="sy0">=</span> ogr.<span class="me1">FieldDefn</span><span class="br0">&#40;</span> <span class="st0">&quot;DN&quot;</span><span class="sy0">,</span> ogr.<span class="me1">OFTInteger</span> <span class="br0">&#41;</span>
layer.<span class="me1">CreateField</span><span class="br0">&#40;</span>fd<span class="br0">&#41;</span>
dst_field <span class="sy0">=</span> <span class="nu0">0</span>
<span class="co1"># Automatically extract features from an image!</span>
extract <span class="sy0">=</span> gdal.<span class="me1">Polygonize</span><span class="br0">&#40;</span>band<span class="sy0">,</span> mask<span class="sy0">,</span> layer<span class="sy0">,</span> dst_field<span class="sy0">,</span> <span class="br0">&#91;</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="kw2">None</span><span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/06/08-draw.py" class="mediafile mf_py">06/08-draw.py</a></dt>
<dd><pre class="code file python"><span class="st0">&quot;&quot;&quot;Rasterize a shapefile and account for polygon holes&quot;&quot;&quot;</span>
<span class="kw1">import</span> shapefile
<span class="kw1">import</span> pngcanvas
<span class="co1"># Open the extracted islands</span>
r <span class="sy0">=</span> shapefile.<span class="me1">Reader</span><span class="br0">&#40;</span><span class="st0">&quot;extract.shp&quot;</span><span class="br0">&#41;</span>
<span class="co1"># Setup the world to pixels conversion</span>
xdist <span class="sy0">=</span> r.<span class="me1">bbox</span><span class="br0">&#91;</span><span class="nu0">2</span><span class="br0">&#93;</span> - r.<span class="me1">bbox</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>
ydist <span class="sy0">=</span> r.<span class="me1">bbox</span><span class="br0">&#91;</span><span class="nu0">3</span><span class="br0">&#93;</span> - r.<span class="me1">bbox</span><span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span>
iwidth <span class="sy0">=</span> <span class="nu0">800</span>
iheight <span class="sy0">=</span> <span class="nu0">600</span>
xratio <span class="sy0">=</span> iwidth/xdist
yratio <span class="sy0">=</span> iheight/ydist
polygons <span class="sy0">=</span> <span class="br0">&#91;</span><span class="br0">&#93;</span>
<span class="co1"># Loop through all shapes</span>
<span class="kw1">for</span> shape <span class="kw1">in</span> r.<span class="me1">shapes</span><span class="br0">&#40;</span><span class="br0">&#41;</span>:
  <span class="co1"># Loop through all parts to catch</span>
  <span class="co1"># polygon holes!</span>
  <span class="kw1">for</span> i <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span><span class="kw2">len</span><span class="br0">&#40;</span>shape.<span class="me1">parts</span><span class="br0">&#41;</span><span class="br0">&#41;</span>:
    pixels<span class="sy0">=</span><span class="br0">&#91;</span><span class="br0">&#93;</span>
    pt <span class="sy0">=</span> <span class="kw2">None</span>
    <span class="kw1">if</span> i<span class="sy0">&lt;</span><span class="kw2">len</span><span class="br0">&#40;</span>shape.<span class="me1">parts</span><span class="br0">&#41;</span>-<span class="nu0">1</span>:
      pt <span class="sy0">=</span> shape.<span class="me1">points</span><span class="br0">&#91;</span>shape.<span class="me1">parts</span><span class="br0">&#91;</span>i<span class="br0">&#93;</span>:shape.<span class="me1">parts</span><span class="br0">&#91;</span>i+<span class="nu0">1</span><span class="br0">&#93;</span><span class="br0">&#93;</span>
    <span class="kw1">else</span>:
      pt <span class="sy0">=</span> shape.<span class="me1">points</span><span class="br0">&#91;</span>shape.<span class="me1">parts</span><span class="br0">&#91;</span>i<span class="br0">&#93;</span>:<span class="br0">&#93;</span>
    <span class="kw1">for</span> x<span class="sy0">,</span>y <span class="kw1">in</span> pt:
      px <span class="sy0">=</span> <span class="kw2">int</span><span class="br0">&#40;</span>iwidth - <span class="br0">&#40;</span><span class="br0">&#40;</span>r.<span class="me1">bbox</span><span class="br0">&#91;</span><span class="nu0">2</span><span class="br0">&#93;</span> - x<span class="br0">&#41;</span> * xratio<span class="br0">&#41;</span><span class="br0">&#41;</span>
      py <span class="sy0">=</span> <span class="kw2">int</span><span class="br0">&#40;</span><span class="br0">&#40;</span>r.<span class="me1">bbox</span><span class="br0">&#91;</span><span class="nu0">3</span><span class="br0">&#93;</span> - y<span class="br0">&#41;</span> * yratio<span class="br0">&#41;</span>
      pixels.<span class="me1">append</span><span class="br0">&#40;</span><span class="br0">&#91;</span>px<span class="sy0">,</span>py<span class="br0">&#93;</span><span class="br0">&#41;</span>
    polygons.<span class="me1">append</span><span class="br0">&#40;</span>pixels<span class="br0">&#41;</span>
<span class="co1"># Set up the output canvas</span>
c <span class="sy0">=</span> pngcanvas.<span class="me1">PNGCanvas</span><span class="br0">&#40;</span>iwidth<span class="sy0">,</span>iheight<span class="br0">&#41;</span>
<span class="co1"># Loop through the polygons and draw them</span>
<span class="kw1">for</span> p <span class="kw1">in</span> polygons:
  c.<span class="me1">polyline</span><span class="br0">&#40;</span>p<span class="br0">&#41;</span>
<span class="co1"># Save the image</span>
f <span class="sy0">=</span> <span class="kw2">file</span><span class="br0">&#40;</span><span class="st0">&quot;extract.png&quot;</span><span class="sy0">,</span> <span class="st0">&quot;wb&quot;</span><span class="br0">&#41;</span>
f.<span class="me1">write</span><span class="br0">&#40;</span>c.<span class="me1">dump</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
f.<span class="me1">close</span><span class="br0">&#40;</span><span class="br0">&#41;</span></pre>
</dd></dl><dl class="file">
<dt><a href="https://github.com/fpl/geotutorial_basic/blob/master/06/09-change.py" class="mediafile mf_py">06/09-change.py</a></dt>
<dd><pre class="code file python"><span class="st0">&quot;&quot;&quot;Perform a simple difference image change detection on a 
'before' and 'after' image.&quot;&quot;&quot;</span>
<span class="kw1">import</span> gdal<span class="sy0">,</span> gdalnumeric
<span class="kw1">import</span> numpy <span class="kw1">as</span> np
&nbsp;
<span class="co1"># &quot;Before&quot; image</span>
im1 <span class="sy0">=</span> <span class="st0">&quot;before.tif&quot;</span>
<span class="co1"># &quot;After&quot; image</span>
im2 <span class="sy0">=</span> <span class="st0">&quot;after.tif&quot;</span>
<span class="co1"># Load before and after into arrays</span>
ar1 <span class="sy0">=</span> gdalnumeric.<span class="me1">LoadFile</span><span class="br0">&#40;</span>im1<span class="br0">&#41;</span>.<span class="me1">astype</span><span class="br0">&#40;</span>np.<span class="me1">int8</span><span class="br0">&#41;</span>                                 
ar2 <span class="sy0">=</span> gdalnumeric.<span class="me1">LoadFile</span><span class="br0">&#40;</span>im2<span class="br0">&#41;</span><span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span>.<span class="me1">astype</span><span class="br0">&#40;</span>np.<span class="me1">int8</span><span class="br0">&#41;</span>
<span class="co1"># Perform a simple array difference on the images</span>
diff <span class="sy0">=</span> ar2 - ar1
<span class="co1"># Set up our classification scheme to try</span>
<span class="co1"># and isolate significant changes</span>
classes <span class="sy0">=</span> np.<span class="me1">histogram</span><span class="br0">&#40;</span>diff<span class="sy0">,</span> bins<span class="sy0">=</span><span class="nu0">5</span><span class="br0">&#41;</span><span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span>
<span class="co1"># The color black is repeated to mask insignificant changes</span>
lut <span class="sy0">=</span> <span class="br0">&#91;</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="sy0">,</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="sy0">,</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="sy0">,</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="sy0">,</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">255</span><span class="sy0">,</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="sy0">,</span><span class="br0">&#91;</span><span class="nu0">255</span><span class="sy0">,</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="br0">&#93;</span>
<span class="co1"># Starting value for classification</span>
start <span class="sy0">=</span> <span class="nu0">1</span>
<span class="co1"># Set up the output image</span>
rgb <span class="sy0">=</span> np.<span class="me1">zeros</span><span class="br0">&#40;</span><span class="br0">&#40;</span><span class="nu0">3</span><span class="sy0">,</span> diff.<span class="me1">shape</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="sy0">,</span> diff.<span class="me1">shape</span><span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span><span class="sy0">,</span><span class="br0">&#41;</span><span class="sy0">,</span> np.<span class="me1">int8</span><span class="br0">&#41;</span>       
<span class="co1"># Process all classes and assign colors</span>
<span class="kw1">for</span> i <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span><span class="kw2">len</span><span class="br0">&#40;</span>classes<span class="br0">&#41;</span><span class="br0">&#41;</span>:
    mask <span class="sy0">=</span> np.<span class="me1">logical_and</span><span class="br0">&#40;</span>start <span class="sy0">&lt;=</span> diff<span class="sy0">,</span> diff <span class="sy0">&lt;=</span> classes<span class="br0">&#91;</span>i<span class="br0">&#93;</span><span class="br0">&#41;</span>
    <span class="kw1">for</span> j <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span><span class="kw2">len</span><span class="br0">&#40;</span>lut<span class="br0">&#91;</span>i<span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>:
        rgb<span class="br0">&#91;</span>j<span class="br0">&#93;</span> <span class="sy0">=</span> np.<span class="me1">choose</span><span class="br0">&#40;</span>mask<span class="sy0">,</span> <span class="br0">&#40;</span>rgb<span class="br0">&#91;</span>j<span class="br0">&#93;</span><span class="sy0">,</span> lut<span class="br0">&#91;</span>i<span class="br0">&#93;</span><span class="br0">&#91;</span>j<span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
    start <span class="sy0">=</span> classes<span class="br0">&#91;</span>i<span class="br0">&#93;</span>+<span class="nu0">1</span>
<span class="co1"># Save the output image</span>
gdalnumeric.<span class="me1">SaveArray</span><span class="br0">&#40;</span>rgb<span class="sy0">,</span> <span class="st0">&quot;change.tif&quot;</span><span class="sy0">,</span> format<span class="sy0">=</span><span class="st0">&quot;GTiff&quot;</span><span class="sy0">,</span> prototype<span class="sy0">=</span>im2<span class="br0">&#41;</span></pre>
</dd></dl><hr />

</div>
<!-- EDIT8 SECTION "Playing with rasters" [4840-5604] -->
<h2 class="sectionedit9" id="some_introductory_readings">Some introductory readings</h2>
<div class="level2">

<p>
<a href="http://en.wikipedia.org/wiki/Flood_fill" class="urlextern" target="blanc" title="http://en.wikipedia.org/wiki/Flood_fill" rel="nofollow noopener">Flood fill algotithms</a>
</p>

<p>
<a href="http://en.wikipedia.org/wiki/Dijkstra's_algorithm" class="urlextern" target="blanc" title="http://en.wikipedia.org/wiki/Dijkstra&#039;s_algorithm" rel="nofollow noopener">Dijkstra algorithm</a>
</p>

<p>
<a href="http://en.wikipedia.org/wiki/A-star_algorithm" class="urlextern" target="blanc" title="http://en.wikipedia.org/wiki/A-star_algorithm" rel="nofollow noopener">A* simple algorithm</a>
</p>

<p>
<a href="https://www.wunderground.com/weather/api/" class="urlextern" target="blanc" title="https://www.wunderground.com/weather/api/" rel="nofollow noopener">Weather underground API</a>
</p>

</div>
<!-- EDIT9 SECTION "Some introductory readings" [5605-] -->