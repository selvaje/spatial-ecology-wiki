
<h1 class="sectionedit1" id="advance_bash_scripts">Advance bash scripts</h1>
<div class="level1">

<p>
An advance bash script is a combination of commands which allows you to perform a complicated task.
</p>

<p>
Exercise:<br/>

Script: open by kate <a href="http://www.spatial-ecology.net/ost4sem/exercise/basic_adv_bash/adv_bash.sh" class="urlextern" target="blanc" title="http://www.spatial-ecology.net/ost4sem/exercise/basic_adv_bash/adv_bash.sh" rel="nofollow noopener"> ~/ost4sem/exercise/basic_adv_bash/adv_bash.sh </a><br/>

Data: <a href="http://www.spatial-ecology.net/ost4sem/exercise/basic_adv_bash/aver_month_nuts3_fire.asc" class="urlextern" target="blanc" title="http://www.spatial-ecology.net/ost4sem/exercise/basic_adv_bash/aver_month_nuts3_fire.asc" rel="nofollow noopener"> ~/ost4sem/exercise/basic_adv_bash/aver_month_nuts3_fire.asc </a><br/>

Directory: ~/ost4sem/exercise/basic<em>adv</em>bash<br/>

</p>

<p>
Change directory and create a little file from a large file:
</p>
<pre class="code bash">kate ~<span class="sy0">/</span>ost4sem<span class="sy0">/</span>exercise<span class="sy0">/</span>basic_adv_bash<span class="sy0">/</span>adv_bash.sh <span class="sy0">&amp;</span>
<span class="kw3">cd</span> ~<span class="sy0">/</span>ost4sem<span class="sy0">/</span>exercise<span class="sy0">/</span>basic_adv_bash<span class="sy0">/</span>
<span class="kw2">head</span> <span class="re5">-1000</span> aver_month_nuts3_fire.asc <span class="sy0">&gt;</span> input.txt </pre>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Advance bash scripts&quot;,&quot;hid&quot;:&quot;advance_bash_scripts&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:1,&quot;range&quot;:&quot;1-735&quot;} -->
<h2 class="sectionedit2" id="if_condition_in_a_for_loop">If condition in a for loop</h2>
<div class="level2">

<p>
As for the previews exercise, we want to automatically count how many observations exist from year 2000 to 2008 in input.txt file, but not for the year 2003.
For this you should use the serial number list loop function with the if condition.
</p>
<pre class="code bash"><span class="kw2">rm</span> no2003output.txt
<span class="kw1">for</span> <span class="br0">&#40;</span><span class="br0">&#40;</span><span class="re2">year</span>=<span class="nu0">2000</span> ; year<span class="sy0">&lt;</span>=<span class="nu0">2008</span> ; year++<span class="br0">&#41;</span><span class="br0">&#41;</span>; <span class="kw1">do</span>
<span class="kw1">if</span> <span class="br0">&#91;</span> <span class="re1">$year</span> <span class="sy0">!</span>= <span class="nu0">2003</span> <span class="br0">&#93;</span> ; <span class="kw1">then</span>
    <span class="kw2">grep</span> <span class="st0">&quot; <span class="es2">$year</span> &quot;</span> aver_month_nuts3_fire.asc  <span class="sy0">|</span> <span class="kw2">wc</span> <span class="re5">-l</span>  <span class="sy0">&gt;&gt;</span> no2003output.txt      
<span class="kw1">fi</span>
<span class="kw1">done</span></pre>

<p>
I need to know in each year which was the biggest fire and print it.
I can use the sort command and get the largest fire in the last position.
</p>
<pre class="code bash"><span class="kw1">for</span> <span class="br0">&#40;</span><span class="br0">&#40;</span><span class="re2">year</span>=<span class="nu0">2000</span> ; year<span class="sy0">&lt;</span>=<span class="nu0">2008</span> ; year++<span class="br0">&#41;</span><span class="br0">&#41;</span>; <span class="kw1">do</span>
<span class="kw1">if</span> <span class="br0">&#91;</span> <span class="re1">$year</span> <span class="sy0">!</span>= <span class="nu0">2003</span> <span class="br0">&#93;</span> ; <span class="kw1">then</span>
    <span class="kw2">grep</span> <span class="st0">&quot; <span class="es2">$year</span> &quot;</span> aver_month_nuts3_fire.asc  <span class="sy0">|</span> <span class="kw2">sort</span> <span class="re5">-k</span> <span class="nu0">5</span>,<span class="nu0">5</span> <span class="re5">-g</span> <span class="sy0">|</span> <span class="kw2">tail</span> <span class="re5">-1</span>       
<span class="kw1">fi</span>
<span class="kw1">done</span></pre>

<p>
<strong>Exercise:</strong><br/>

I would like perform the same loop but excluding the year from 2002 to 2004. (try do not use != simbol).<br/>

Use the “man test” to see the option for the if condition.<br/>

Googled “if statement with multiple condition bash”.
</p>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;If condition in a for loop&quot;,&quot;hid&quot;:&quot;if_condition_in_a_for_loop&quot;,&quot;codeblockOffset&quot;:1,&quot;secid&quot;:2,&quot;range&quot;:&quot;736-1780&quot;} -->
<h2 class="sectionedit3" id="use_of_predefined_user-variables_by_invoking_a_bash_script_do_it_by_yourself">Use of predefined user-variables by invoking a Bash Script (Do it by yourself)</h2>
<div class="level2">

<p>
Create a script that needs user interaction during the running process.<br/>

Open a new kate and copy/paste the following commands
</p>
<pre class="code bash"><span class="kw3">echo</span> <span class="re5">-n</span> <span class="st0">&quot;Starting the process from year  = &quot;</span>
<span class="kw2">read</span> yearstart
&nbsp;
<span class="kw3">echo</span> <span class="re5">-n</span> <span class="st0">&quot;Ending the process in year  = &quot;</span>
<span class="kw2">read</span> yearend
&nbsp;
<span class="kw1">for</span> <span class="br0">&#40;</span><span class="br0">&#40;</span><span class="re2">year</span>=<span class="re1">$yearstart</span> ; year<span class="sy0">&lt;</span>=<span class="re1">$yearend</span> ; year++<span class="br0">&#41;</span><span class="br0">&#41;</span>; <span class="kw1">do</span>
    <span class="kw2">grep</span> <span class="st0">&quot; <span class="es2">$year</span> &quot;</span> <span class="re4">$1</span>  <span class="sy0">|</span> <span class="kw2">wc</span> <span class="re5">-l</span>       
<span class="kw1">done</span> <span class="sy0">&gt;</span> <span class="re4">$2</span></pre>

<p>
Save it  ( year<em>events.sh ) in the current directory and run it choosing input.txt (aver</em>month<em>nuts3</em>fire.asc) and output.txt, and reply to the questions.
</p>
<pre class="code bash"><span class="kw2">sh</span> year_events.sh input.txt output.txt </pre>

<p>
Of course year<em>events.sh can be called from a bigger script and can be used several times.<br/>

Open a new kate documents and copy/paste the following commands:
&lt;code bash&gt;
bash year</em>events.sh aver<em>month</em>nuts3_fire.asc output1.txt  «<abbr title="End of file">EOF</abbr>
1990
1999
<abbr title="End of file">EOF</abbr>
</p>

<p>
bash year<em>events.sh aver</em>month<em>nuts3</em>fire.asc output2.txt  «<abbr title="End of file">EOF</abbr>
2000
2008
<abbr title="End of file">EOF</abbr>
&lt;/code&gt;
</p>

<p>
Save it  ( more<em>year</em>events.sh ) in the current directory and run it:
</p>
<pre class="code bash"><span class="kw2">sh</span> more_year_events.sh</pre>

<p>
Be aware that sometimes the use of the command <em>sh</em> and <em>bash</em> can be different.<br/>

<br/>

These two examples show the use of a <em>master</em> script <em>(macro script)</em> that includes a little one<em>(micro script)</em>.
The micro scripts are done to standardise operations that need to be re-run several times to different files (calculate the average).<br/>

On the other hand the macro file tells which files and setting need to be used to run the micro one.<br/>

In the study cases this is often reported. 
</p>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Use of predefined user-variables by invoking a Bash Script (Do it by yourself)&quot;,&quot;hid&quot;:&quot;use_of_predefined_user-variables_by_invoking_a_bash_script_do_it_by_yourself&quot;,&quot;codeblockOffset&quot;:3,&quot;secid&quot;:3,&quot;range&quot;:&quot;1781-3398&quot;} -->
<h2 class="sectionedit4" id="checking_the_flow_statement">Checking the flow statement</h2>
<div class="level2">

<p>
How can I check that the results are correct and that i&#039;m using the correct variables?
By printing the variable during the process and if you need also in the file.
</p>
<pre class="code bash"><span class="kw2">rm</span> no2003output.txt
<span class="kw1">for</span> <span class="br0">&#40;</span><span class="br0">&#40;</span><span class="re2">year</span>=<span class="nu0">2000</span> ; year<span class="sy0">&lt;</span>=<span class="nu0">2008</span> ; year++<span class="br0">&#41;</span><span class="br0">&#41;</span>; <span class="kw1">do</span>
<span class="kw1">if</span> <span class="br0">&#91;</span> <span class="re1">$year</span> <span class="sy0">!</span>= <span class="nu0">2003</span> <span class="br0">&#93;</span> ; <span class="kw1">then</span>
    <span class="kw3">echo</span> year <span class="re1">$year</span> 
    <span class="kw2">grep</span> <span class="st0">&quot; <span class="es2">$year</span> &quot;</span> aver_month_nuts3_fire.asc  <span class="sy0">|</span> <span class="kw2">wc</span> <span class="re5">-l</span>     
<span class="kw1">fi</span>
<span class="kw1">done</span> <span class="sy0">&gt;</span> no2003output.txt</pre>

<p>
I can also run manually a command and compare the results.
</p>
<pre class="code bash"><span class="kw2">grep</span> <span class="st0">&quot; 2007 &quot;</span> aver_month_nuts3_fire.asc  <span class="sy0">|</span> <span class="kw2">wc</span> <span class="re5">-l</span> 
<span class="kw2">grep</span> <span class="st0">&quot; 2002 &quot;</span> aver_month_nuts3_fire.asc  <span class="sy0">|</span> <span class="kw2">wc</span> <span class="re5">-l</span> </pre>

<p>
How many seconds needed to run a process:
</p>
<pre class="code bash"><span class="kw1">time</span> <span class="kw1">for</span> <span class="br0">&#40;</span><span class="br0">&#40;</span><span class="re2">year</span>=<span class="nu0">2000</span> ; year<span class="sy0">&lt;</span>=<span class="nu0">2008</span> ; year++<span class="br0">&#41;</span><span class="br0">&#41;</span>; <span class="kw1">do</span>
<span class="kw1">if</span> <span class="br0">&#91;</span> <span class="re1">$year</span> <span class="sy0">!</span>= <span class="nu0">2003</span> <span class="br0">&#93;</span> ; <span class="kw1">then</span>
    <span class="kw3">echo</span> year <span class="re1">$year</span> 
    <span class="kw2">grep</span> <span class="st0">&quot; <span class="es2">$year</span> &quot;</span> aver_month_nuts3_fire.asc  <span class="sy0">|</span> <span class="kw2">wc</span> 
<span class="kw1">fi</span>
<span class="kw1">done</span>
<span class="kw2">date</span></pre>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Checking the flow statement&quot;,&quot;hid&quot;:&quot;checking_the_flow_statement&quot;,&quot;codeblockOffset&quot;:6,&quot;secid&quot;:4,&quot;range&quot;:&quot;3399-4230&quot;} -->
<h2 class="sectionedit5" id="debugging">Debugging</h2>
<div class="level2">

<p>
The shell reports message and status symbols in case of error syntax, incorrect commands or inexistent files.<br/>

Here are reported the most common errors using the example:
</p>
<pre class="code bash"><span class="kw1">for</span> <span class="br0">&#40;</span><span class="br0">&#40;</span><span class="re2">year</span>=<span class="nu0">2000</span> ; year<span class="sy0">&lt;</span>=<span class="nu0">2008</span> ; year++<span class="br0">&#41;</span><span class="br0">&#41;</span>; <span class="kw1">do</span>
    <span class="kw2">grep</span> <span class="st0">&quot; <span class="es2">$year</span> &quot;</span> aver_month_nuts3_fire.asc  <span class="sy0">|</span> <span class="kw2">wc</span> <span class="re5">-l</span>     
<span class="kw1">done</span></pre>

<p>
Run the script and see the error results.<br/>

<br/>

The loop was not close and the prompt ($) is not appearing. The shell is expecting another command (&gt;).<br/>

</p>
<pre class="code bash"><span class="kw1">for</span> <span class="br0">&#40;</span><span class="br0">&#40;</span><span class="re2">year</span>=<span class="nu0">2000</span> ; year<span class="sy0">&lt;</span>=<span class="nu0">2008</span> ; year++<span class="br0">&#41;</span><span class="br0">&#41;</span>; <span class="kw1">do</span>
    <span class="kw2">grep</span> <span class="st0">&quot; <span class="es2">$year</span> &quot;</span> aver_month_nuts3_fire.asc  <span class="sy0">|</span> <span class="kw2">wc</span> <span class="re5">-l</span></pre>

<p>
<br/>

Syntax error:  try to find and test it. Search for example on the Internet.<br/>

</p>
<pre class="code bash"><span class="kw1">for</span> <span class="br0">&#40;</span> <span class="br0">&#40;</span><span class="re2">year</span>=<span class="nu0">2000</span> ; year<span class="sy0">&lt;</span>=<span class="nu0">2008</span> ; year++<span class="br0">&#41;</span><span class="br0">&#41;</span>; <span class="kw1">do</span>
    <span class="kw2">grep</span> <span class="st0">&quot; <span class="es2">$year</span> &quot;</span> aver_month_nuts3_fire.asc  <span class="sy0">|</span> <span class="kw2">wc</span> <span class="re5">-l</span>  
<span class="kw1">done</span>   </pre>

<p>
<em>bash: syntax error near unexpected token `(&#039; </em><br/>

The error is near the brackets. Often it is just a space!<br/>

<br/>

Bash command error: use <em>apropos</em> for searching the operation that you need.<br/>

</p>
<pre class="code bash"><span class="kw1">for</span> <span class="br0">&#40;</span><span class="br0">&#40;</span><span class="re2">year</span>=<span class="nu0">2000</span> ; year<span class="sy0">&lt;</span>=<span class="nu0">2008</span> ; year++<span class="br0">&#41;</span><span class="br0">&#41;</span>; <span class="kw1">do</span>
    grap <span class="st0">&quot; <span class="es2">$year</span> &quot;</span> aver_month_nuts3_fire.asc  <span class="sy0">|</span> <span class="kw2">wc</span> <span class="re5">-l</span>     
<span class="kw1">done</span></pre>

<p>
<em>bash: grap: command not found.</em><br/>

<br/>

Invalid command option: read carefully the <em>man command</em><br/>

</p>
<pre class="code bash"><span class="kw1">for</span> <span class="br0">&#40;</span><span class="br0">&#40;</span><span class="re2">year</span>=<span class="nu0">2000</span> ; year<span class="sy0">&lt;</span>=<span class="nu0">2008</span> ; year++<span class="br0">&#41;</span><span class="br0">&#41;</span>; <span class="kw1">do</span>
    <span class="kw2">grep</span> <span class="st0">&quot; <span class="es2">$year</span> &quot;</span> aver_month_nuts3_fire.asc  <span class="sy0">|</span> <span class="kw2">wc</span> <span class="re5">-k</span>
<span class="kw1">done</span></pre>

<p>
<em>wc: invalid option – &#039;k&#039;</em><br/>

<br/>

The file or directory does not exist: search for the correct file and directory, using <em>cd</em> and <em>pwd</em><br/>

</p>
<pre class="code bash"><span class="kw1">for</span> <span class="br0">&#40;</span><span class="br0">&#40;</span><span class="re2">year</span>=<span class="nu0">2000</span> ; year<span class="sy0">&lt;</span>=<span class="nu0">2008</span> ; year++<span class="br0">&#41;</span><span class="br0">&#41;</span>; <span class="kw1">do</span>
    <span class="kw2">grep</span> <span class="st0">&quot; <span class="es2">$year</span> &quot;</span> ..<span class="sy0">/</span>aver_month_nuts3_fire.asc  <span class="sy0">|</span> <span class="kw2">wc</span> <span class="re5">-l</span>     
<span class="kw1">done</span></pre>

<p>
<em>grep: ../aver<em>month</em>nuts3_fire1.asc: No such file or directory.</em><br/>

</p>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Debugging&quot;,&quot;hid&quot;:&quot;debugging&quot;,&quot;codeblockOffset&quot;:9,&quot;secid&quot;:5,&quot;range&quot;:&quot;4231-&quot;} -->