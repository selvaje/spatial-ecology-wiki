#################################################
&nbsp;
#!/bin/bash
#
#	This script copies all the vectors in the PERMANENT mapset starting with Eidsberg to the new location Eidberg.
#	This subregion will be the target for prediction since predicting on the whole data set at 25 meters resolution 
#	turned out to be too much for my computer
#
#
#
&nbsp;
g.mapset -c Eidsberg
&nbsp;
for file in Eidsberg_AdminOmrader_lin Eidsberg_AdminOmrader_pol Eidsberg_Arealdekke_lin Eidsberg_Arealdekke_pnt Eidsberg_Arealdekke_pol Eidsberg_ByggOgAnlegg_lin Eidsberg_ByggOgAnlegg_pnt Eidsberg_ByggOgAnlegg_pol Eidsberg_Hoyde_lin Eidsberg_Hoyde_pnt Eidsberg_RestriksjonsOmrader_lin Eidsberg_RestriksjonsOmrader_pol Eidsberg_Samferdsel_lin Eidsberg_Samferdsel_pnt    
do
&nbsp;
g.copy vect=$file@PERMANENT,$file
&nbsp;
done
&nbsp;
##########################################################################
&nbsp;
&nbsp;
&nbsp;
################################################################################################################
#
#
#   This script first changes the land use types to numeric codes. 
#   Then it creates a raster of the land use information to get values at every pixel.
#   Then it fits a simple GLM to the data, using the newly acquired information as explanatory variables.
#   As an example, I will use the total abundance of Bumblebees.
#
#
#
&nbsp;
&nbsp;
R
&nbsp;
library(spgrass6)
##This is the corresponding codes for the land use types. I have to use numbers in the models later
&nbsp;
#1 Alpinbakke
#2 BymessigBebyggelse
#3 DyrketMark
#4 ElvBekk
#5 FerskvannTorrfall
#6 Golfbane
#7 Gravplass
#8 Havflate
#9 Industriomrade
#10 Innsjo
#11 Lufthavn
#12 Myr
#13 Park
#14 OpentOmrade
#15 Skog
#16 SportIdrettPlass
#17 Steinbrudd
#18 Steintipp
#19 TettBebyggelse
&nbsp;
##It turned out to be a bit of a chore changing the land use names to numbers in GRASS, so I did it in R in stead
&nbsp;
&nbsp;
areal&lt;-readVECT6(&quot;Arealdekke_num&quot;) ##Import the vector into R
areal@data$NR&lt;-as.numeric(areal@data$OBJTYPE) #change it to numeric,easy-peasy
writeVECT6(areal,&quot;areal_num&quot;) ##Export it again to GRASS
&nbsp;
##  Then make a raster out of it to get the information on a pixel level
system(&quot;v.to.rast input=areal_num@Combined output=arealdekke_num use=attr type=point,line,area layer=1 column=NR value=1 rows=4096 &quot;) ##Call grass with &quot;system&quot;
&nbsp;
&nbsp;
system(&quot;g.mapset Eidsberg&quot;) ## Make sure you have the correct mapset
areal&lt;-readRAST6(&quot;Arealdekke_eid&quot;) ##This is the land use information
gc() ##This clean the memory of garbage, makes you computer happy. Useful when handling large files
elev&lt;-readRAST6(&quot;Elev_dem_eid&quot;) ## This is the elevation information, already in raster format
gc()
&nbsp;
pred.frame&lt;-data.frame(c(areal@data,elev@data)) ##Make a data frame with both predictors to work on
names(pred.frame)&lt;-c(&quot;Arealdekke&quot;,&quot;Elev&quot;)
pred.frame$Arealdekke&lt;-factor(pred.frame$Arealdekke) ##Make it into a factor
gc()
&nbsp;
&nbsp;
pred.frame$Arealdekke&lt;-as.character(pred.frame$Arealdekke)
pred.frame$Arealdekke[is.na(pred.frame$Arealdekke)]&lt;-0 ##Weird things happen when you have NAs in the treatment categories. Replace them with zeroes
pred.frame$Arealdekke&lt;-as.factor(pred.frame$Arealdekke)
&nbsp;
##The next part is a bit complicated if you don't know the data. 
##It has to do with the fact that the are more land use categories in the new data set then the ones used for model calibration. 
##The following code is really ugly at some places
##First make a subset of the new region that only contains the land use types visited
temp&lt;-pred.frame[pred.frame$Arealdekke==3 | pred.frame$Arealdekke==9 | pred.frame$Arealdekke==12 | pred.frame$Arealdekke==14 | pred.frame$Arealdekke==15 | pred.frame$Arealdekke==19,]
bla&lt;-as.factor(as.character(temp$Arealdekke))
temp$Arealdekke&lt;-bla
rm(bla)
#table(temp$Arealdekke) 
&nbsp;
## Reclassify the land use types visited when inventoring to numbers
bumble$Arealdekke&lt;-as.character(bumble$Arealdekke)
bumble$Arealdekke[bumble$Arealdekke==&quot;DyrketMark&quot;]&lt;-&quot;3&quot;
bumble$Arealdekke[bumble$Arealdekke==&quot;Gravplass&quot;]&lt;-&quot;7&quot;
bumble$Arealdekke[bumble$Arealdekke==&quot;Industriomr&quot;]&lt;-&quot;9&quot;
bumble$Arealdekke[bumble$Arealdekke==&quot;Myr&quot;]&lt;-&quot;12&quot;
bumble$Arealdekke[bumble$Arealdekke==&quot;OpentOmrade&quot;]&lt;-&quot;14&quot;
bumble$Arealdekke[bumble$Arealdekke==&quot;Skog&quot;]&lt;-&quot;15&quot;
bumble$Arealdekke[bumble$Arealdekke==&quot;TettBebyggelse&quot;]&lt;-&quot;19&quot;
bumble$Arealdekke&lt;-as.factor(bumble$Arealdekke)
&nbsp;
##Make a prediction based on a simplistic GLM
##
#pred.frame$predict&lt;-rep(0,nrow(pred.frame)) ##Make a new vector in the prediction data frame for the predictions. Areas without information will get value 0. This can be changed later
pred.frame$predict&lt;-rep(NA,nrow(pred.frame))
calib3&lt;-glm(tot.huml~Arealdekke+Elev,data=bumble,family=poisson) ##Simplistic GLM to predict from
predicted&lt;-predict(calib3,temp,type=&quot;response&quot;) ##New prediction
#pred.frame$predict&lt;-numeric(nrow(pred.frame))
##Fill the right slots with predictions
pred.frame$predict[pred.frame$Arealdekke==3 | pred.frame$Arealdekke==9 | pred.frame$Arealdekke==12 | pred.frame$Arealdekke==14 | pred.frame$Arealdekke==15 | pred.frame$Arealdekke==19]&lt;-predicted
elev$predicted&lt;-pred.frame$predict
## Prediction done!
## The prediction can then be transported to GRASS by: writeRAST6(elev,&quot;New_raster&quot;,zcol=&quot;predict&quot;,overwrite=T)
&nbsp;
###########################################################################################################################