# in QGis, exported attribute table of shape file to csv file.
&nbsp;
# upload this csv :
rocks &lt;- read.csv(file=&quot;~/Documents/GISdata/SGU2013/SGU2014/berggrund/berggrundsytor.csv&quot;)
&nbsp;
# what's in it?:
names(rocks) # BRG is code, Lithology is label
&nbsp;
# subset to code and label:
rocks &lt;- rocks[,c(1,3)]
&nbsp;
# subset to unique values:
rocks &lt;- unique(rocks)
&nbsp;
# sort alphabetically:
rocks &lt;- with(rocks,  rocks[order(LITHOLOGY) , ])
&nbsp;
# export table to csv::
write.csv(rocks, file=&quot;~/Documents/GISdata/SGU2013/SGU2014/berggrund/categories.csv&quot;, row.names=F)
&nbsp;
# manually add aggregated classes - numbered and with label - in OpenOffice,
# then reload:
rocks &lt;- read.csv(file=&quot;~/Documents/GISdata/SGU2013/SGU2014/berggrund/categories.csv&quot;)
&nbsp;
# make rcl matrix: col1 &quot;is&quot;, col2 &quot;becomes&quot;:
reclass &lt;- as.matrix(rocks[,c(1,2)])
&nbsp;
# cd to dir with raster file, and reclassify original tif based on rcl:
setwd(&quot;~/Documents/GISdata/ph_predictors_sweref_50m&quot;)
reclassify(rock, reclass, filename='rock_reclassified')
&nbsp;
system('ls') # written to .gri file - cannot use gdalwarp (unknown format)
&nbsp;
# load that instead of old rock layer, to export then as tif:
rock &lt;- raster(&quot;~/Documents/GISdata/ph_predictors_sweref_50m/rock_reclassified.gri&quot;)
&nbsp;
# check values:
as.matrix(table(values(rock))) # classes 1:15 plus 999 for unknown
&nbsp;
# make factor to work with it in R:
#rock &lt;- as.factor(rock)
&nbsp;
# export the reclassified raster to tif:
writeRaster(rock, &quot;rock_reclassified.tif&quot;, format=&quot;GTiff&quot;)
&nbsp;
# check if it worked:
system('gdalinfo rock_reclassified.tif')
&nbsp;
# clean up:
rm(rocks, reclass)