<span class="co0">#create temp mapset</span>
g.mapset <span class="re5">-c</span> <span class="re2">mapset</span>=workloc2
<span class="co0">#check settings</span>
g.gisenv 
<span class="co0">#go to mapsetlocation</span>
<span class="kw3">cd</span> ~<span class="sy0">/</span>MANDIST<span class="sy0">/</span>INDIA2<span class="sy0">/</span>workloc2
<span class="co0"># set location of dataset</span>
<span class="re2">path</span>=<span class="st0">&quot;//media/sf_sharelinux/&quot;</span>
&nbsp;
<span class="co0">#add the PERMANENT mapset</span>
g.mapsets <span class="re2">addmapset</span>=PERMANENT
<span class="co0">#copy the projected raster to mapset workloc </span>
g.copy <span class="re2">rast</span>=isonuts05<span class="sy0">@</span>PERMANENT,isonuts
&nbsp;
&nbsp;
<span class="co0">#create binary rastermap at half degree for India isocode for india is 356</span>
r.mapcalc <span class="st0">&quot; indiamap = if ( isonuts == 356 , 1 , 0) &quot;</span>
<span class="co0">#create mask</span>
r.mask <span class="re2">input</span>=indiamap <span class="re2">maskcats</span>=<span class="st0">&quot;1&quot;</span> <span class="re5">-o</span>
<span class="co0">#set region</span>
g.region <span class="re2">rast</span>=indiamap <span class="re2">zoom</span>=indiamap
<span class="co0">#check region</span>
g.region <span class="re5">-p</span>
&nbsp;
<span class="co0">#set database driver to sqlite</span>
db.connect <span class="re2">driver</span>=sqlite <span class="re2">database</span>=<span class="st_h">'$GISDBASE/$LOCATION_NAME/$MAPSET/sqlite.db'</span>
db.connect <span class="re5">-p</span>
<span class="co0">#import the administrative boundaries of india </span>
<span class="co0">#snap threshold value is used to snap boundary vertices to each other if the distance </span>
<span class="co0">#in map units between two vertices is not larger than the threshold.</span>
<span class="co0">#-o overwrite projection (use projection of location)</span>
v.in.ogr <span class="re2">dsn</span>=<span class="sy0">//</span>media<span class="sy0">/</span>sf_sharelinux<span class="sy0">/</span>indiashape<span class="sy0">/</span>IND_adm1.shp\
  <span class="re2">output</span>=statevect <span class="re2">snap</span>=1e-14 <span class="re5">--overwrite</span> <span class="re5">-o</span>
<span class="co0"># transform the vector to grid</span>
v.to.rast <span class="re2">input</span>=statevect <span class="re2">output</span>=stategrid  <span class="re2">use</span>=attr  <span class="re2">column</span>=ID_1  <span class="re5">--overwrite</span>
<span class="co0">#import grid with area (km)of land per gridcell</span>
<span class="co0"># India is big and area per gridcell change with latitude, </span>
<span class="co0"># also accounts for gridcells that contain coasts</span>
r.in.gdal <span class="re5">-o</span> <span class="re2">input</span>=<span class="re1">$path</span><span class="sy0">/</span>GAREALAND.asc <span class="re2">output</span>=CELLAREA <span class="re5">--quiet</span> <span class="re5">--overwrite</span>
&nbsp;
<span class="co0">#calculate zonal statistics  scripts based on example given in r.univar</span>
<span class="co0">#for each state the zonal statistics are calculated</span>
<span class="co0"># this output is piped to only obtain the the sum (column 13) and saved as txt file</span>
r.univar <span class="re5">-t</span> <span class="re2">map</span>=CELLAREA <span class="re2">zones</span>=stategrid <span class="sy0">|</span> \
  <span class="kw2">cut</span> -f1,<span class="nu0">13</span> <span class="re5">-d</span><span class="st_h">'|'</span> <span class="sy0">&gt;</span> gridarea.txt
<span class="co0">#import area according to India. bash script expect output</span>
<span class="co0"># could be circumvented but this was easier</span>
<span class="kw2">bash</span> ~<span class="sy0">/</span>workdir<span class="sy0">/</span>script<span class="sy0">/</span>fromCSVtoTXT.sh <span class="re1">$path</span><span class="sy0">/</span>statearea.csv statearea.txt
<span class="kw2">cut</span> -f1,<span class="nu0">3</span> statearea.txt <span class="re5">-d</span> <span class="st_h">' '</span><span class="sy0">&gt;</span>statearea2.txt
<span class="kw2">rm</span> statearea.txt
&nbsp;
<span class="co0"># add columns to vector to include areas of grid, </span>
<span class="co0">#the vector map and the official area</span>
v.db.addcol <span class="re2">map</span>=statevect \
  <span class="re2">columns</span>=<span class="st_h">'gridarea INTEGER,vectarea_km INTEGER,officialarea INTEGER'</span>
&nbsp;
<span class="co0"># create SQL command file to link the , sed is a streameditor </span>
<span class="co0">#-e means expression 1d deletes first line -F in awk is sed delimitor</span>
<span class="kw2">sed</span> <span class="re5">-e</span> <span class="st_h">'1d'</span> gridarea.txt <span class="sy0">|</span> <span class="kw2">awk</span> <span class="re5">-F</span><span class="st_h">'|'</span> \
  <span class="st_h">'{print &quot;UPDATE statevect SET gridarea = &quot;$2&quot; WHERE cat = &quot;$1&quot;;&quot;}'</span> \
   <span class="sy0">&gt;</span> gridarea_sqlcmd.txt
&nbsp;
<span class="kw2">sed</span> <span class="re5">-e</span> <span class="st_h">'1d'</span> statearea2.txt <span class="sy0">|</span> <span class="kw2">awk</span> <span class="re5">-F</span><span class="st_h">' '</span> \
  <span class="st_h">'{print &quot;UPDATE statevect SET officialarea = &quot;$2&quot; WHERE cat = &quot;$1&quot;;&quot;}'</span> \
   <span class="sy0">&gt;</span> statearea_sqlcmd.txt
&nbsp;
<span class="co0">#excute the sql statement</span>
db.execute <span class="re2">input</span>=gridarea_sqlcmd.txt
db.execute <span class="re2">input</span>=statearea_sqlcmd.txt
&nbsp;
<span class="co0">#calculate area in km^2</span>
v.to.db <span class="re2">map</span>=statevect  <span class="re2">columns</span>=<span class="st_h">'vectarea_km'</span> <span class="re2">option</span>=area <span class="re2">units</span>=k
&nbsp;
<span class="co0">#show result</span>
db.select <span class="re2">sql</span>=<span class="st0">&quot;SELECT cat,NAME_1,gridarea,vectarea_km,officialarea FROM statevect&quot;</span>