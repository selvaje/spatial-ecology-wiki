a:73:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:44:"Load geographical data and visualize it on R";i:1;i:1;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:3;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:62;}i:4;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:25:"Vector data visualization";i:1;i:2;i:2;i:62;}i:2;i:62;}i:5;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:62;}i:6;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:62;}i:7;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:19:"We have followed a ";}i:2;i:100;}i:8;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:60:"http://spatial.ly/2013/12/introduction-spatial-data-ggplot2/";i:1;s:11:" spatial.ly";}i:2;i:119;}i:9;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:207:" tutorial to replicate and improve our case study. Here we work on vector layers, first download a compressed folder in linux environment and extract it and check what you have using bash functions within R.";}i:2;i:196;}i:10;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:403;}i:11;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:405;}i:12;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:230:" system("wget http://www.spatial-ecology.net/ost4sem/exercise/r_ecoservice/vector/cornwall_agri.zip")
 system("unzip cornwall_agri.zip")
 system("ogrinfo -al cornwall_ward_27700.shp | more ")
 # ... 
 # Layer SRS WKT:
 # (unknown)";}i:2;i:405;}i:13;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:405;}i:14;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:168:"We downloaded a vector shape file in EPSG 27700 but this info is not available in the metadata, so we can update the metadata with projection parameters in a new layer.";}i:2;i:649;}i:15;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:817;}i:16;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:819;}i:17;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:94:" system("ogr2ogr -s_srs EPSG:27700 -t_srs EPSG:27700 cornwall2.shp cornwall_ward_27700.shp")
 ";}i:2;i:819;}i:18;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:919;}i:19;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:17:"Spatial Join in R";i:1;i:4;i:2;i:919;}i:2;i:919;}i:20;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:919;}i:21;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:919;}i:22;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:65:"Using the raster library we can load shape files in R from linux ";}i:2;i:945;}i:23;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:2:"OS";}i:2;i:1010;}i:24;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:" folder.";}i:2;i:1012;}i:25;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1020;}i:26;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:189:" library(raster)
 ward.no.proj <- shapefile("cornwall_ward_27700.shp")
 ward <- shapefile("cornwall.shp")
 # Tell the difference between the two layers
 summary(ward.no.proj)
 summary(ward)";}i:2;i:1020;}i:27;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1020;}i:28;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:42:"Then we load  a text table in csv format. ";}i:2;i:1224;}i:29;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1266;}i:30;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:43:" stat = read.csv("SYNT_2002.csv", header=T)";}i:2;i:1266;}i:31;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1266;}i:32;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:123:"To join files we need a common identifier. Which is the table and vector file common ID? Find it and merge the files using ";}i:2;i:1313;}i:33;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:1436;}i:34;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"merge";}i:2;i:3;i:3;s:5:"merge";}i:2;i:1438;}i:35;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:1443;}i:36;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:117:" function from raster library to then plot the map and save the join vector file in your working directory outside R.";}i:2;i:1445;}i:37;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:1562;}i:38;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1565;}i:39;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:132:"  str(stat)
  str(ward)
  agri <- merge(ward, stat, by.x='PI', by.y='ID')
  writeOGR(agri, ".", "agristat", driver="ESRI Shapefile")";}i:2;i:1565;}i:40;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1565;}i:41;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:43:"The ward administrative boudary in cornwall";}i:2;i:1708;}i:42;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:1751;}i:43;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:1753;}i:44;a:3:{i:0;s:13:"internalmedia";i:1;a:7:{i:0;s:22:":wiki:rstat:wardsr.png";i:1;s:0:"";i:2;N;i:3;s:3:"200";i:4;N;i:5;s:5:"cache";i:6;s:7:"details";}i:2;i:1754;}i:45;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:1785;}i:46;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:1786;}i:47;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1788;}i:48;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1788;}i:49;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:134:"Now we can plot in the ward map some features about agriculture using the statistics we have joined to our spatial database using the ";}i:2;i:1790;}i:50;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:1924;}i:51;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:7:"ggplot2";}i:2;i:3;i:3;s:7:"ggplot2";}i:2;i:1926;}i:52;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:1933;}i:53;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" library.";}i:2;i:1935;}i:54;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:1944;}i:55;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:129:"
Plotting some features of our database (ex: ward surface vs numberof diary livestock per ward) in black and white and in colour.";}i:2;i:1946;}i:56;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2075;}i:57;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:380:" library(ggplot2)
 # simple visualization black and white
 p<-ggplot(agri@data, aes(SUM_HA,dairy_v))
 p+geom_point()
 # Add some colours
 p+geom_point(colour="red", size=2)
 # Add a legend
 p+geom_point(aes(colour=SUM_HA, size=dairy_v))
 # Add labels  (these are too many for our cvisualization)
 p+geom_point(aes(colour=SUM_HA,size=dairy_v))+geom_text(size=8,aes(label=FIRST_NM))";}i:2;i:2075;}i:58;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2075;}i:59;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:42:"Play with this and plot other informations";}i:2;i:2478;}i:60;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:2520;}i:61;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2523;}i:62;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2523;}i:63;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:106:"Now we map the number of Diary livestock in Cornwall per each ward. We use fortify ( check ?fortify in R).";}i:2;i:2525;}i:64;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2631;}i:65;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:635:" agri_geom<-fortify(agri, region="PI")
 agri_geom<-merge(agri_geom, agri@data, by.x="id", by.y="PI")
 head(agri_geom)
 ## The map function:
 ## Map<-ggplot(agri_geom, aes(long,lat, group=group, fill=dairy_v))
 ## + geom_polygon()+ coord_equal() + 
 ## labs(x="Easting (m)", y="Northing (m)",fill= "# of livestocks")
 ## + ggtitle ("Dairy cow in Cornwall")
 Map<-ggplot(agri_geom, aes(long,lat, group=group, fill=dairy_v))+ geom_polygon()+ coord_equal() + labs(x="Easting (m)", y="Northing (m)",fill= "# of livestocks")+ ggtitle ("Dairy cow in Cornwall")
 Map
 # Black and white map
 Map + scale_fill_gradient(low="white", high="black")";}i:2;i:2631;}i:66;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2631;}i:67;a:3:{i:0;s:13:"internalmedia";i:1;a:7:{i:0;s:25:":wiki:rstat:ggplot2_r.png";i:1;s:0:"";i:2;N;i:3;s:3:"400";i:4;N;i:5;s:5:"cache";i:6;s:7:"details";}i:2;i:3293;}i:68;a:3:{i:0;s:13:"internalmedia";i:1;a:7:{i:0;s:25:":wiki:rstat:ggplot_bw.png";i:1;s:0:"";i:2;N;i:3;s:3:"400";i:4;N;i:5;s:5:"cache";i:6;s:7:"details";}i:2;i:3327;}i:69;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:3361;}i:70;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3363;}i:71;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3373;}i:72;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:3373;}}