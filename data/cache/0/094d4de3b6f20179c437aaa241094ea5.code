    <span class="st0">&quot;&quot;&quot;
    Crawls a terrain raster from a starting
    point and &quot;floods&quot; everything at the same
    or lower elevation by producing a mask
    image of 1,0 values.
    &quot;&quot;&quot;</span>
&nbsp;
    <span class="kw1">import</span> numpy <span class="kw1">as</span> np
    <span class="kw1">from</span> <span class="kw3">linecache</span> <span class="kw1">import</span> getline
&nbsp;
    <span class="kw1">def</span> floodFill<span class="br0">&#40;</span>c<span class="sy0">,</span>r<span class="sy0">,</span>mask<span class="br0">&#41;</span>:
      <span class="st0">&quot;&quot;&quot;
      Crawls a mask array containing
      only 1 and 0 values from the
      starting point (c=column,
      r=row - a.k.a. x,y) and returns
      an array with all 1 values
      connected to the starting cell.
      This algorithm performs a 4-way
      check non-recursively.  
      &quot;&quot;&quot;</span>
      <span class="co1"># cells already filled</span>
      filled <span class="sy0">=</span> <span class="kw2">set</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
      <span class="co1"># cells to fill</span>
      fill <span class="sy0">=</span> <span class="kw2">set</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
      fill.<span class="me1">add</span><span class="br0">&#40;</span><span class="br0">&#40;</span>c<span class="sy0">,</span>r<span class="br0">&#41;</span><span class="br0">&#41;</span>
      width <span class="sy0">=</span> mask.<span class="me1">shape</span><span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span>-<span class="nu0">1</span>
      height <span class="sy0">=</span> mask.<span class="me1">shape</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>-<span class="nu0">1</span>
      <span class="co1"># Our output inundation array</span>
      flood <span class="sy0">=</span> np.<span class="me1">zeros_like</span><span class="br0">&#40;</span>mask<span class="sy0">,</span> dtype<span class="sy0">=</span>np.<span class="me1">int8</span><span class="br0">&#41;</span>
      <span class="co1"># Loop through and modify the cells which</span>
      <span class="co1"># need to be checked.</span>
      <span class="kw1">while</span> fill:
        <span class="co1"># Grab a cell</span>
        x<span class="sy0">,</span>y <span class="sy0">=</span> fill.<span class="me1">pop</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
        <span class="kw1">if</span> y <span class="sy0">==</span> height <span class="kw1">or</span> x <span class="sy0">==</span> width <span class="kw1">or</span> x <span class="sy0">&lt;</span> <span class="nu0">0</span> <span class="kw1">or</span> y <span class="sy0">&lt;</span> <span class="nu0">0</span>:
          <span class="co1"># Don't fill</span>
          <span class="kw1">continue</span>
        <span class="kw1">if</span> mask<span class="br0">&#91;</span>y<span class="br0">&#93;</span><span class="br0">&#91;</span>x<span class="br0">&#93;</span> <span class="sy0">==</span> <span class="nu0">1</span>:
          <span class="co1"># Do fill</span>
          flood<span class="br0">&#91;</span>y<span class="br0">&#93;</span><span class="br0">&#91;</span>x<span class="br0">&#93;</span><span class="sy0">=</span><span class="nu0">1</span>
          filled.<span class="me1">add</span><span class="br0">&#40;</span><span class="br0">&#40;</span>x<span class="sy0">,</span>y<span class="br0">&#41;</span><span class="br0">&#41;</span>
          <span class="co1"># Check neighbors for 1 values</span>
          west <span class="sy0">=</span><span class="br0">&#40;</span>x-<span class="nu0">1</span><span class="sy0">,</span>y<span class="br0">&#41;</span>
          east <span class="sy0">=</span> <span class="br0">&#40;</span>x+<span class="nu0">1</span><span class="sy0">,</span>y<span class="br0">&#41;</span>
          north <span class="sy0">=</span> <span class="br0">&#40;</span>x<span class="sy0">,</span>y-<span class="nu0">1</span><span class="br0">&#41;</span>
          south <span class="sy0">=</span> <span class="br0">&#40;</span>x<span class="sy0">,</span>y+<span class="nu0">1</span><span class="br0">&#41;</span>
          <span class="kw1">if</span> <span class="kw1">not</span> west <span class="kw1">in</span> filled:
            fill.<span class="me1">add</span><span class="br0">&#40;</span>west<span class="br0">&#41;</span>
          <span class="kw1">if</span> <span class="kw1">not</span> east <span class="kw1">in</span> filled:      
            fill.<span class="me1">add</span><span class="br0">&#40;</span>east<span class="br0">&#41;</span>
          <span class="kw1">if</span> <span class="kw1">not</span> north <span class="kw1">in</span> filled: 
            fill.<span class="me1">add</span><span class="br0">&#40;</span>north<span class="br0">&#41;</span>
          <span class="kw1">if</span> <span class="kw1">not</span> south <span class="kw1">in</span> filled: 
            fill.<span class="me1">add</span><span class="br0">&#40;</span>south<span class="br0">&#41;</span>
      <span class="kw1">return</span> flood 
&nbsp;
    source <span class="sy0">=</span> <span class="st0">&quot;terrain.asc&quot;</span>
    target <span class="sy0">=</span> <span class="st0">&quot;flood.asc&quot;</span>
&nbsp;
    <span class="kw1">print</span> <span class="st0">&quot;Opening image...&quot;</span>
    img <span class="sy0">=</span> np.<span class="me1">loadtxt</span><span class="br0">&#40;</span>source<span class="sy0">,</span> skiprows<span class="sy0">=</span><span class="nu0">6</span><span class="br0">&#41;</span>
    <span class="kw1">print</span> <span class="st0">&quot;Image opened&quot;</span>
&nbsp;
    a <span class="sy0">=</span> np.<span class="me1">where</span><span class="br0">&#40;</span>img<span class="sy0">&lt;</span><span class="nu0">70</span><span class="sy0">,</span> <span class="nu0">1</span><span class="sy0">,</span><span class="nu0">0</span><span class="br0">&#41;</span>
    <span class="kw1">print</span> <span class="st0">&quot;Image masked&quot;</span>
&nbsp;
    <span class="co1"># Parse the headr using a loop and</span>
    <span class="co1"># the built-in linecache module</span>
    hdr <span class="sy0">=</span> <span class="br0">&#91;</span>getline<span class="br0">&#40;</span>source<span class="sy0">,</span> i<span class="br0">&#41;</span> <span class="kw1">for</span> i <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="sy0">,</span><span class="nu0">7</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
    values <span class="sy0">=</span> <span class="br0">&#91;</span><span class="kw2">float</span><span class="br0">&#40;</span>h.<span class="me1">split</span><span class="br0">&#40;</span><span class="st0">&quot; &quot;</span><span class="br0">&#41;</span><span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.<span class="me1">strip</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">for</span> h <span class="kw1">in</span> hdr<span class="br0">&#93;</span>
    cols<span class="sy0">,</span>rows<span class="sy0">,</span>lx<span class="sy0">,</span>ly<span class="sy0">,</span>cell<span class="sy0">,</span>nd <span class="sy0">=</span> values
    xres <span class="sy0">=</span> cell
    yres <span class="sy0">=</span> cell * -<span class="nu0">1</span>
&nbsp;
    <span class="co1"># Starting point for the </span>
    <span class="co1"># flood inundation </span>
    sx <span class="sy0">=</span> <span class="nu0">2582</span>
    sy <span class="sy0">=</span> <span class="nu0">2057</span>
&nbsp;
    <span class="kw1">print</span> <span class="st0">&quot;Beginning flood fill&quot;</span>      
    fld <span class="sy0">=</span> floodFill<span class="br0">&#40;</span>sx<span class="sy0">,</span>sy<span class="sy0">,</span> a<span class="br0">&#41;</span>
    <span class="kw1">print</span> <span class="st0">&quot;Finished Flood fill&quot;</span>
&nbsp;
    header<span class="sy0">=</span><span class="st0">&quot;&quot;</span>
    <span class="kw1">for</span> i <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span><span class="nu0">6</span><span class="br0">&#41;</span>:
      header +<span class="sy0">=</span> hdr<span class="br0">&#91;</span>i<span class="br0">&#93;</span>
&nbsp;
    <span class="kw1">print</span> <span class="st0">&quot;Saving grid&quot;</span>
    <span class="co1"># Open the output file, add the hdr, save the array</span>
    <span class="kw1">with</span> <span class="kw2">open</span><span class="br0">&#40;</span>target<span class="sy0">,</span> <span class="st0">&quot;wb&quot;</span><span class="br0">&#41;</span> <span class="kw1">as</span> f:
      f.<span class="me1">write</span><span class="br0">&#40;</span>header<span class="br0">&#41;</span>
      np.<span class="me1">savetxt</span><span class="br0">&#40;</span>f<span class="sy0">,</span> fld<span class="sy0">,</span> fmt<span class="sy0">=</span><span class="st0">&quot;%1i&quot;</span><span class="br0">&#41;</span>
    <span class="kw1">print</span> <span class="st0">&quot;Done!&quot;</span>