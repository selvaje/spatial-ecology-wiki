
<h1 class="sectionedit1" id="mapping_the_future_projections_of_distribution_for_natural_forest_in_italy">Mapping the Future projections of distribution for Natural Forest in Italy</h1>
<div class="level1">

<p>
The objective is to use the randomForest distribution model and a series of 23 environmental predictor variables including future climatic conditions, to map natural forests. <br/>
<br/>
The bioclimatic predictors are issued from the IPCC SRES A2a Scenario. The climatic model is an averaged computation of CISRO, CCCMA and HADCM3 models.   (see <a href="http://www.worldclim.org" class="urlextern" target="blanc" title="http://www.worldclim.org" rel="nofollow noopener">www.worldclim.org</a> for specifications and data download) .<br/>

</p>

<p>
 see /../map<em>RF</em>ITAveg.R  for specifications on the functioning of the present script
</p>

</div>
<!-- EDIT1 SECTION "Mapping the Future projections of distribution for Natural Forest in Italy" [1-581] -->
<h3 class="sectionedit2" id="load_required_libraries_and_import_randomforest_model">Load required libraries and import randomforest model</h3>
<div class="level3">
<pre class="code r">   library(rgdal)
   library(maptools)
   library(grid)
   library(randomForest) </pre>

<p>
If necessary you will have to install some packages as follows:
</p>
<pre class="code r">install.packages(pkgs=&quot;maptools&quot;,lib= &quot;/usr/lib/R/site-library/&quot;)</pre>

<p>
Import model Random forest model:
</p>
<pre class="code r">load(&quot;~/ost4sem/studycase/ITA_veg/models/RF23tune_ITAveg&quot;)
gc()</pre>

</div>
<!-- EDIT2 SECTION "Load required libraries and import randomforest model" [582-1010] -->
<h3 class="sectionedit3" id="define_your_working_path">Define your working path</h3>
<div class="level3">
<pre class="code r">  path.rasters = as.character(&quot;/home/ste/ost4sem/grassdbnew/europe/Vmodel/cellhd/&quot;)
  path.results = as.character(&quot;/home/ste/ost4sem/studycase/ITA_veg/outmaps/&quot;)</pre>

</div>
<!-- EDIT3 SECTION "Define your working path" [1011-1228] -->
<h3 class="sectionedit4" id="create_a_predictor_grid_stack">Create a predictor grid stack</h3>
<div class="level3">
<pre class="code r">   print(&quot; ------------- NOW CREATE predictors grid stack  -------------&quot;)</pre>

<p>
Importing ARC INFO grid into R SpatialGridDataFrame and generate a spatial data stack with readGDAL function 
This is done in a loop tiles to tiles
</p>
<pre class="code r">   tile = c(20*0:114)
&nbsp;
   for(t in 1:57){
&nbsp;
   datagrids = readGDAL(paste(path.rasters,&quot;pr104ENSA2a80&quot;,sep=&quot;&quot;), offset=c(0,tile[t]), region.dim=c(1480,20))
   datagrids$pr104 = datagrids$band1
   datagrids$pr105 = readGDAL(paste(path.rasters,&quot;pr105ENSA2a80&quot;,sep=&quot;&quot;), offset=c(0,tile[t]), region.dim=c(1480,20))$band1
&nbsp;
   datagrids$pr106 = readGDAL(paste(path.rasters,&quot;pr106ENSA2a80&quot;,sep=&quot;&quot;), offset=c(0,tile[t]), region.dim=c(1480,20))$band1
   gc()
&nbsp;
   datagrids$pr109 = readGDAL(paste(path.rasters,&quot;pr109ENSA2a80&quot;,sep=&quot;&quot;), offset=c(0,tile[t]), region.dim=c(1480,20))$band1
   datagrids$pr110 = readGDAL(paste(path.rasters,&quot;pr110ENSA2a80&quot;,sep=&quot;&quot;), offset=c(0,tile[t]), region.dim=c(1480,20))$band1
&nbsp;
   gc()
   datagrids$pr111 = readGDAL(paste(path.rasters,&quot;pr111ENSA2a80&quot;,sep=&quot;&quot;), offset=c(0,tile[t]), region.dim=c(1480,20))$band1
   datagrids$pr118 = readGDAL(paste(path.rasters,&quot;pr118ENSA2a80&quot;,sep=&quot;&quot;), offset=c(0,tile[t]), region.dim=c(1480,20))$band1
&nbsp;
   gc()
   datagrids$pr120 = readGDAL(paste(path.rasters,&quot;pr120ENSA2a80&quot;,sep=&quot;&quot;), offset=c(0,tile[t]), region.dim=c(1480,20))$band1
   datagrids$pr123 = readGDAL(paste(path.rasters,&quot;pr123ENSA2a80&quot;,sep=&quot;&quot;), offset=c(0,tile[t]), region.dim=c(1480,20))$band1
&nbsp;
   gc()
   datagrids$pr126 = readGDAL(paste(path.rasters,&quot;pr126ENSA2a80&quot;,sep=&quot;&quot;), offset=c(0,tile[t]), region.dim=c(1480,20))$band1
   datagrids$pr128 = readGDAL(paste(path.rasters,&quot;pr128ENSA2a80&quot;,sep=&quot;&quot;), offset=c(0,tile[t]), region.dim=c(1480,20))$band1
&nbsp;
   gc()
   datagrids$pr131 = readGDAL(paste(path.rasters,&quot;pr131ENSA2a80&quot;,sep=&quot;&quot;), offset=c(0,tile[t]), region.dim=c(1480,20))$band1
   datagrids$pr134 = readGDAL(paste(path.rasters,&quot;pr134ENSA2a80&quot;,sep=&quot;&quot;), offset=c(0,tile[t]), region.dim=c(1480,20))$band1
&nbsp;
   gc()
   datagrids$pr135 = readGDAL(paste(path.rasters,&quot;pr135ENSA2a80&quot;,sep=&quot;&quot;), offset=c(0,tile[t]), region.dim=c(1480,20))$band1
   datagrids$pr136 = readGDAL(paste(path.rasters,&quot;pr136ENSA2a80&quot;,sep=&quot;&quot;), offset=c(0,tile[t]), region.dim=c(1480,20))$band1
&nbsp;
   gc()
   datagrids$pr137 = readGDAL(paste(path.rasters,&quot;pr137ENSA2a80&quot;,sep=&quot;&quot;), offset=c(0,tile[t]), region.dim=c(1480,20))$band1
   datagrids$pr138 = readGDAL(paste(path.rasters,&quot;pr138ENSA2a80&quot;,sep=&quot;&quot;), offset=c(0,tile[t]), region.dim=c(1480,20))$band1
&nbsp;
   datagrids$pr198 = readGDAL(paste(path.rasters,&quot;pr198ENSA2a80&quot;,sep=&quot;&quot;), offset=c(0,tile[t]), region.dim=c(1480,20))$band1
   datagrids$pr200 = readGDAL(paste(path.rasters,&quot;pr200ita&quot;,sep=&quot;&quot;), offset=c(0,tile[t]), region.dim=c(1480,20))$band1
   gc()
&nbsp;
   datagrids$pr201 = readGDAL(paste(path.rasters,&quot;pr201ita&quot;,sep=&quot;&quot;), offset=c(0,tile[t]), region.dim=c(1480,20))$band1
   datagrids$pr202 = readGDAL(paste(path.rasters,&quot;pr202ita&quot;,sep=&quot;&quot;), offset=c(0,tile[t]), region.dim=c(1480,20))$band1
   gc()
   datagrids$pr203 = readGDAL(paste(path.rasters,&quot;pr203ita&quot;,sep=&quot;&quot;), offset=c(0,tile[t]), region.dim=c(1480,20))$band1
   datagrids$pr204 = readGDAL(paste(path.rasters,&quot;pr204ita&quot;,sep=&quot;&quot;), offset=c(0,tile[t]), region.dim=c(1480,20))$band1
&nbsp;
   gc()
&nbsp;
   cat(&quot; ---- 23 grids inported into datagrids file - now drawing the map------\n&quot;)</pre>

</div>
<!-- EDIT4 SECTION "Create a predictor grid stack" [1229-4644] -->
<h3 class="sectionedit5" id="imput_future_climate_into_the_random_forest_model">Imput future climate into the Random Forest model</h3>
<div class="level3">

<p>
The predict function is used to calculate pixel values and index according to the random forest model and original rasters imported 
</p>
<pre class="code r">   pred.mapRF = predict (RF23tuned , newdata=datagrids, type=&quot;response&quot;)
   cat(&quot;class predicted\n&quot;)
&nbsp;
   pred.mapRFindex = predict (RF23tuned , newdata=datagrids, type=&quot;vote&quot;)
   cat(&quot;class index recorded\n&quot;)
&nbsp;
   cat(&quot;map values for Forest Type calculated and added to predict map vector\n&quot;)</pre>

<p>
Generate an empty tile with geographical coordinates to pixel values =-9999
</p>
<pre class="code r">   data2map = readGDAL(paste(path.rasters,&quot;pr104ita&quot;,sep=&quot;&quot;), offset=c(0,tile[t]), region.dim=c(1500,20))
   cat(&quot;geocoordinates inported\n&quot;)
&nbsp;
   data2map$band1 = 20
   cat(&quot; no data value is now = 15 in this tile[t]\n&quot;)</pre>

<p>
Add predicted values to the empty tile[t] 
</p>
<pre class="code r">   data2map$band1[as.numeric(dimnames(pred.mapRFindex)[[1]])] = as.numeric(pred.mapRF)
   cat(&quot;class values added to tile[t]\n&quot;)</pre>

<p>
Generate ascii map tiles ====
Generate an asciii TILE file for modelled species 
</p>
<pre class="code r">   write.asciigrid(data2map, paste(path.results,t,&quot;tile_ITAveg_ENS80.asc&quot;,sep=&quot;&quot;))
&nbsp;
   cat(&quot;-----------------------------------------Tile&quot;, t,&quot;created--------------------------\n&quot;)</pre>

</div>
<!-- EDIT5 SECTION "Imput future climate into the Random Forest model" [4645-5945] -->
<h3 class="sectionedit6" id="clean_up_the_memory_and_close_the_tile_loop">Clean up the memory and close the tile loop</h3>
<div class="level3">
<pre class="code r">rm(data2map)
rm(datagrids)
rm(pred.mapRF)
rm(pred.mapRFindex)
gc()
&nbsp;
}</pre>

</div>
<!-- EDIT6 SECTION "Clean up the memory and close the tile loop" [5946-6090] -->
<h3 class="sectionedit7" id="merging_tiles">Merging tiles</h3>
<div class="level3">

<p>
Now we use a bash shell command from the gdal library to merge tiles into the final mosaic map of modeled current natuaral forest vegetation of Italy and we delete these once the map is produced.
</p>
<pre class="code r">  system(&quot;cd ost4sem/studycase/ITA_veg/results/maps&quot;)
  system(&quot;gdalwarp  -srcnodata &quot;-9999&quot;  -dstnodata &quot;-9999&quot; -of GTiff -ot Int16 -wt Int16     *tile_ITAveg_ENS80.asc   ITAveg_A2a_ENS80.tif&quot;) 
  system(&quot;rm *tile_ITAveg.asc&quot;)</pre>

<p>
This script is finished.
You have now mapped current and future natural forest vegetation in Italy.
</p>

</div>
<!-- EDIT7 SECTION "Merging tiles" [6091-] -->