    <span class="st0">&quot;&quot;&quot;
    Classify an NDVI tiff using 7 classes 
    by &quot;pushing&quot; the NDVI through
    masks defined by the desired 
    range of values for each class.
    &quot;&quot;&quot;</span>
    <span class="kw1">import</span> gdalnumeric <span class="kw1">as</span> gd
    <span class="kw1">import</span> <span class="kw3">operator</span>
&nbsp;
    <span class="kw1">def</span> histogram<span class="br0">&#40;</span>a<span class="sy0">,</span> bins<span class="sy0">=</span><span class="kw2">range</span><span class="br0">&#40;</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">256</span><span class="br0">&#41;</span><span class="br0">&#41;</span>:
      <span class="st0">&quot;&quot;&quot;
      Histogram function for multi-dimensional array.
      a = array
      bins = range of numbers to match 
      &quot;&quot;&quot;</span>
      fa <span class="sy0">=</span> a.<span class="me1">flat</span>
      n <span class="sy0">=</span> gd.<span class="me1">numpy</span>.<span class="me1">searchsorted</span><span class="br0">&#40;</span>gd.<span class="me1">numpy</span>.<span class="me1">sort</span><span class="br0">&#40;</span>fa<span class="br0">&#41;</span><span class="sy0">,</span> bins<span class="br0">&#41;</span>
      n <span class="sy0">=</span> gd.<span class="me1">numpy</span>.<span class="me1">concatenate</span><span class="br0">&#40;</span><span class="br0">&#91;</span>n<span class="sy0">,</span> <span class="br0">&#91;</span><span class="kw2">len</span><span class="br0">&#40;</span>fa<span class="br0">&#41;</span><span class="br0">&#93;</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
      hist <span class="sy0">=</span> n<span class="br0">&#91;</span><span class="nu0">1</span>:<span class="br0">&#93;</span>-n<span class="br0">&#91;</span>:-<span class="nu0">1</span><span class="br0">&#93;</span> 
      <span class="kw1">return</span> hist
&nbsp;
    <span class="kw1">def</span> stretch<span class="br0">&#40;</span>a<span class="br0">&#41;</span>:
      <span class="st0">&quot;&quot;&quot;
      Performs a histogram stretch on a gdalnumeric array image.
      &quot;&quot;&quot;</span>
      hist <span class="sy0">=</span> histogram<span class="br0">&#40;</span>a<span class="br0">&#41;</span>
      lut <span class="sy0">=</span> <span class="br0">&#91;</span><span class="br0">&#93;</span>
      <span class="kw1">for</span> b <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span><span class="nu0">0</span><span class="sy0">,</span> <span class="kw2">len</span><span class="br0">&#40;</span>hist<span class="br0">&#41;</span><span class="sy0">,</span> <span class="nu0">256</span><span class="br0">&#41;</span>:
        <span class="co1"># step size</span>
        step <span class="sy0">=</span> <span class="kw2">reduce</span><span class="br0">&#40;</span><span class="kw3">operator</span>.<span class="me1">add</span><span class="sy0">,</span> hist<span class="br0">&#91;</span>b:b+<span class="nu0">256</span><span class="br0">&#93;</span><span class="br0">&#41;</span> / <span class="nu0">255</span>
        <span class="co1"># create equalization lookup table</span>
        n <span class="sy0">=</span> <span class="nu0">0</span>
        <span class="kw1">for</span> i <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span><span class="nu0">256</span><span class="br0">&#41;</span>:
          lut.<span class="me1">append</span><span class="br0">&#40;</span>n / step<span class="br0">&#41;</span>
          n <span class="sy0">=</span> n + hist<span class="br0">&#91;</span>i+b<span class="br0">&#93;</span>
      gd.<span class="me1">numpy</span>.<span class="me1">take</span><span class="br0">&#40;</span>lut<span class="sy0">,</span> a<span class="sy0">,</span> out<span class="sy0">=</span>a<span class="br0">&#41;</span>
      <span class="kw1">return</span> a
&nbsp;
    <span class="co1"># NDVI output from ndvi script</span>
    source <span class="sy0">=</span> <span class="st0">&quot;ndvi.tif&quot;</span>
    <span class="co1"># Target file name for classified</span>
    <span class="co1"># image image</span>
    target <span class="sy0">=</span> <span class="st0">&quot;ndvi_color.tif&quot;</span>
&nbsp;
    <span class="co1"># Load the image into an array</span>
    ndvi <span class="sy0">=</span> gd.<span class="me1">LoadFile</span><span class="br0">&#40;</span>source<span class="br0">&#41;</span>.<span class="me1">astype</span><span class="br0">&#40;</span>gd.<span class="me1">numpy</span>.<span class="me1">uint8</span><span class="br0">&#41;</span>
    <span class="co1"># Peform a histogram stretch so we are able to</span>
    <span class="co1"># use all of the classes</span>
    ndvi <span class="sy0">=</span> stretch<span class="br0">&#40;</span>ndvi<span class="br0">&#41;</span>
&nbsp;
    <span class="co1"># Create a blank 3-band image the same size as the ndvi</span>
    rgb <span class="sy0">=</span> gd.<span class="me1">numpy</span>.<span class="me1">zeros</span><span class="br0">&#40;</span><span class="br0">&#40;</span><span class="nu0">3</span><span class="sy0">,</span> <span class="kw2">len</span><span class="br0">&#40;</span>ndvi<span class="br0">&#41;</span><span class="sy0">,</span> <span class="kw2">len</span><span class="br0">&#40;</span>ndvi<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">,</span> gd.<span class="me1">numpy</span>.<span class="me1">uint8</span><span class="br0">&#41;</span>
&nbsp;
    <span class="co1"># Class list with ndvi upper range values.</span>
    <span class="co1"># Note the lower and upper values are listed on the ends</span>
    classes <span class="sy0">=</span> <span class="br0">&#91;</span><span class="nu0">58</span><span class="sy0">,</span><span class="nu0">73</span><span class="sy0">,</span><span class="nu0">110</span><span class="sy0">,</span><span class="nu0">147</span><span class="sy0">,</span><span class="nu0">184</span><span class="sy0">,</span><span class="nu0">220</span><span class="sy0">,</span><span class="nu0">255</span><span class="br0">&#93;</span>
&nbsp;
    <span class="co1"># Color look-up table (lut)</span>
    <span class="co1"># The lut must match the number of classes</span>
    <span class="co1"># Specified as R,G,B tuples from dark brown to dark green</span>
    lut <span class="sy0">=</span> <span class="br0">&#91;</span><span class="br0">&#91;</span><span class="nu0">120</span><span class="sy0">,</span><span class="nu0">69</span><span class="sy0">,</span><span class="nu0">25</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="nu0">255</span><span class="sy0">,</span><span class="nu0">178</span><span class="sy0">,</span><span class="nu0">74</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="nu0">255</span><span class="sy0">,</span><span class="nu0">237</span><span class="sy0">,</span><span class="nu0">166</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="nu0">173</span><span class="sy0">,</span><span class="nu0">232</span><span class="sy0">,</span><span class="nu0">94</span><span class="br0">&#93;</span><span class="sy0">,</span>
           <span class="br0">&#91;</span><span class="nu0">135</span><span class="sy0">,</span><span class="nu0">181</span><span class="sy0">,</span><span class="nu0">64</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="nu0">3</span><span class="sy0">,</span><span class="nu0">156</span><span class="sy0">,</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="nu0">1</span><span class="sy0">,</span><span class="nu0">100</span><span class="sy0">,</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="br0">&#93;</span>
&nbsp;
    <span class="co1"># Starting value of the first class</span>
    start <span class="sy0">=</span> <span class="nu0">1</span>
&nbsp;
    <span class="co1"># Process all classes.</span>
    <span class="kw1">for</span> i <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span><span class="kw2">len</span><span class="br0">&#40;</span>classes<span class="br0">&#41;</span><span class="br0">&#41;</span>:
        mask <span class="sy0">=</span> gd.<span class="me1">numpy</span>.<span class="me1">logical_and</span><span class="br0">&#40;</span>\
        start <span class="sy0">&lt;=</span> ndvi<span class="sy0">,</span> ndvi <span class="sy0">&lt;=</span> classes<span class="br0">&#91;</span>i<span class="br0">&#93;</span><span class="br0">&#41;</span>
        <span class="kw1">for</span> j <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">&#40;</span><span class="kw2">len</span><span class="br0">&#40;</span>lut<span class="br0">&#91;</span>i<span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>:
            rgb<span class="br0">&#91;</span>j<span class="br0">&#93;</span> <span class="sy0">=</span> gd.<span class="me1">numpy</span>.<span class="me1">choose</span><span class="br0">&#40;</span>mask<span class="sy0">,</span> \
              <span class="br0">&#40;</span>rgb<span class="br0">&#91;</span>j<span class="br0">&#93;</span><span class="sy0">,</span> lut<span class="br0">&#91;</span>i<span class="br0">&#93;</span><span class="br0">&#91;</span>j<span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
        start <span class="sy0">=</span> classes<span class="br0">&#91;</span>i<span class="br0">&#93;</span>+<span class="nu0">1</span>    
&nbsp;
    <span class="co1"># Save a geotiff image of the colorized ndvi.</span>
    gd.<span class="me1">SaveArray</span><span class="br0">&#40;</span>rgb<span class="sy0">,</span> target<span class="sy0">,</span> format<span class="sy0">=</span><span class="st0">&quot;GTiff&quot;</span><span class="sy0">,</span> prototype<span class="sy0">=</span>source<span class="br0">&#41;</span>