
<h1 class="sectionedit1" id="transform_a_simple_for_loop_in_multicore_for_loop">Transform a simple &quot;for loop&quot; in multicore &quot;for loop&quot;</h1>
<div class="level1">

<p>
<a href="http://en.wikipedia.org/wiki/Multi-core_processor" class="urlextern" target="blanc" title="http://en.wikipedia.org/wiki/Multi-core_processor" rel="nofollow noopener"> Multi-core processor </a> are very common used in desk-top and lab-top pc.
If a pc has 8 processors you should open 8 programs or terminal to use all of them. But this is not an efficient way for stand-alone processing routines.<br/>

<br/>

Let&#039;s consider that you want run a gdalwarp command to several tif files (*.tif), to perform a re-projection. 
<br/>

</p>

</div>
<!-- EDIT1 SECTION "Transform a simple for loop in multicore for loop" [2-476] -->
<h3 class="sectionedit2" id="for_loop">For Loop</h3>
<div class="level3">

<p>
You may run the full process by applying the loop in the usual way:
</p>
<pre class="code bash"><span class="re2">OUTDIR</span>=<span class="re1">$HOME</span><span class="sy0">/</span>outdir
<span class="kw2">mkdir</span> <span class="re1">$OUTDIR</span>
<span class="re2">INDIR</span>=<span class="sy0">/</span>data<span class="sy0">/</span>ost4sem<span class="sy0">/</span>exercise<span class="sy0">/</span>basic_adv_gdalogr<span class="sy0">/</span>fagus_sylvatica
&nbsp;
<span class="kw1">time</span>  <span class="br0">&#40;</span> 
<span class="kw1">for</span> <span class="kw2">file</span> <span class="kw1">in</span> <span class="re1">$INDIR</span><span class="sy0">/</span><span class="nu0">20</span>?<span class="nu0">0</span>_TSSP_IP-ENS-A2-SP20_43023435.tif ; <span class="kw1">do</span> 
    <span class="re2">filename</span>=$<span class="br0">&#40;</span><span class="kw2">basename</span> <span class="re1">$file</span> .tif<span class="br0">&#41;</span>
    gdalwarp <span class="re5">-r</span> cubic <span class="re5">-tr</span> <span class="nu0">0.008</span> <span class="nu0">0.008</span> -t_srs EPSG:<span class="nu0">4326</span> <span class="re1">$file</span>  <span class="re1">$OUTDIR</span><span class="sy0">/</span>proj_<span class="re1">$filename</span>.tif <span class="re5">-overwrite</span>
<span class="kw1">done</span> 
<span class="br0">&#41;</span></pre>

<p>
In this way only one processor will be used. The others will be just sleeping or eventually swap when the process is applied to another tif.<br/>

</p>

<p>
For example, the following picture shows the processing time during the for loop. As you can see only one processor, the red one, is working.
</p>
<div class="table sectionedit3"><table class="inline">
	<tr class="row0">
		<td class="col0"><a href="/dokuwiki/lib/exe/detail.php?id=wiki%3Aamazon_zargs1&amp;media=wiki:for_loop.png" class="media" title="wiki:for_loop.png"><img src="/dokuwiki/lib/exe/fetch.php?media=wiki:for_loop.png" class="media" alt="" /></a></td>
	</tr>
</table></div>
<!-- EDIT3 TABLE [1188-1212] -->
<p>
<br/>

</p>

</div>
<!-- EDIT2 SECTION "For Loop" [477-1216] -->
<h3 class="sectionedit4" id="xargs_loop">xargs loop</h3>
<div class="level3">

<p>
The <em><strong>xargs</strong></em> command allows to run a process splitting the task to several processors numerically defined by the user:
</p>
<pre class="code bash"><span class="kw3">export</span> <span class="re2">OUTDIR</span>=<span class="re1">$HOME</span><span class="sy0">/</span>outdir
<span class="kw3">export</span> <span class="re2">INDIR</span>=<span class="sy0">/</span>data<span class="sy0">/</span>ost4sem<span class="sy0">/</span>exercise<span class="sy0">/</span>basic_adv_gdalogr<span class="sy0">/</span>fagus_sylvatica
<span class="kw1">time</span>  <span class="br0">&#40;</span> 
<span class="kw2">ls</span> <span class="re1">$INDIR</span><span class="sy0">/</span><span class="nu0">20</span>?<span class="nu0">0</span>_TSSP_IP-ENS-A2-SP20_43023435.tif  <span class="sy0">|</span> <span class="kw2">xargs</span> <span class="re5">-n</span> <span class="nu0">1</span> <span class="re5">-P</span> <span class="nu0">3</span>  <span class="kw2">bash</span> <span class="re5">-c</span> $<span class="st_h">'
file=$1
filename=$(basename $file .tif)
gdalwarp -r cubic -tr 0.008 0.008 -t_srs EPSG:4326 $file  $OUTDIR/proj_$filename.tif -overwrite
'</span> _ 
<span class="br0">&#41;</span></pre>

<p>
The <em>-n</em> option identifies the argument. The argument is the variable imported inside the loop. <br/>

The argument is identifies with $1 and for a better understanding renamed to file (file=$1).<br/>

The <em>-P</em> option identify the processors (in this case 2) used to run the full line inside -c $&#039; …… &#039; _ <br/>

<br/>

This will process<br/>

- the first tif in processor number 1 (orange line)<br/>

- the second tif in processor number 2 (red line)<br/>

than<br/>

- the third  tif in processor number 1 (orange line)<br/>

<br/>

For example, the following picture shows the processing time during the xargs loop. As you can see two processors are running simultaneously, and the whole processing time is shorter. 
<br/>

</p>
<div class="table sectionedit5"><table class="inline">
	<tr class="row0">
		<td class="col0"><a href="/dokuwiki/lib/exe/detail.php?id=wiki%3Aamazon_zargs1&amp;media=wiki:xargs.png" class="media" title="wiki:xargs.png"><img src="/dokuwiki/lib/exe/fetch.php?media=wiki:xargs.png" class="media" alt="" /></a></td>
	</tr>
</table></div>
<!-- EDIT5 TABLE [2402-2423] -->
<p>
<br/>

</p>

<p>
The use of more arguments is also possible
</p>
<pre class="code bash"><span class="kw1">time</span>  <span class="br0">&#40;</span> 
<span class="kw1">for</span> <span class="kw2">file</span> <span class="kw1">in</span> <span class="re1">$INDIR</span><span class="sy0">/</span><span class="nu0">20</span>?<span class="nu0">0</span>_TSSP_??-ENS-A2-SP20_43023435.tif  ; <span class="kw1">do</span> <span class="kw1">for</span> res <span class="kw1">in</span> <span class="nu0">0.008</span> <span class="nu0">0.08</span> ; <span class="kw1">do</span> <span class="kw3">echo</span> <span class="re1">$file</span> <span class="re1">$res</span> ; <span class="kw1">done</span> ; <span class="kw1">done</span> <span class="sy0">|</span> <span class="kw2">xargs</span> <span class="re5">-n</span> <span class="nu0">2</span> <span class="re5">-P</span> <span class="nu0">2</span> <span class="kw2">bash</span> <span class="re5">-c</span> $<span class="st_h">'
file=$1
res=$2
filename=$(basename $file .tif)
gdalwarp -r cubic -tr $res $res -t_srs EPSG:4326 $file $OUTDIR/RES$res&quot;_&quot;$file -overwrite
)
'</span> _</pre>

<p>
This will process<br/>

- the first tif  with res = 0.008  in processor number 1<br/>

- the first tif  with res = 0.08  in processor number 2<br/>

and then<br/>

<br/>

- the second tif  with res = 0.008  in processor number 1<br/>

- the second tif  with res = 0.08   in processor number 2<br/>

and so on….
<br/>

</p>

</div>
<!-- EDIT4 SECTION "xargs loop" [1217-] -->