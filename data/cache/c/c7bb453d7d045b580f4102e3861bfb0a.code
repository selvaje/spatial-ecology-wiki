<span class="co0">################################################################################################</span>
<span class="co0">## Agnieszka Malinowska      20.01.2014						              ##</span>
<span class="co0">## Project for SPATIO-TEMPORAL ANALYSIS AND BIG DATA PROCESSING USING FOSS                    ##</span>
<span class="co0">################################################################################################</span>
&nbsp;
<span class="co0">#######################################################</span>
<span class="co0"># create a new grass project with a new location</span>
&nbsp;
<span class="kw3">cd</span> ~<span class="sy0">/</span>ost4sem
<span class="kw2">ls</span> ~<span class="sy0">/</span>ost4sem
&nbsp;
<span class="co0">#create project folder</span>
<span class="kw2">mkdir</span> ~<span class="sy0">/</span>ost4sem<span class="sy0">/</span>snake_project
&nbsp;
<span class="co0">#create grass database folder </span>
<span class="kw2">mkdir</span> ~<span class="sy0">/</span>ost4sem<span class="sy0">/</span>snake_project<span class="sy0">/</span>grassdb
&nbsp;
<span class="co0">#mount a shared folder with data from my windows computer</span>
<span class="kw2">sudo</span> <span class="kw2">mount</span> <span class="re5">-a</span> <span class="re5">-t</span> vboxsf PhD <span class="sy0">/</span>media<span class="sy0">/</span>sf_PhD
<span class="co0"># allow write/read permission to the folder</span>
<span class="kw2">sudo</span> <span class="kw2">mount</span> <span class="re5">-t</span> vboxsf <span class="re5">-o</span> <span class="re2">uid</span>=<span class="nu0">1000</span>,<span class="re2">gid</span>=<span class="nu0">1000</span> PhD <span class="sy0">/</span>media<span class="sy0">/</span>sf_PhD
&nbsp;
<span class="co0"># copy one raster file to the grass database to create a new location from it</span>
<span class="kw2">cp</span> <span class="sy0">/</span>media<span class="sy0">/</span>sf_PhD<span class="sy0">/</span>data<span class="sy0">/</span>rain.tif <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>snake_project<span class="sy0">/</span>grassdb<span class="sy0">/</span>rain.tif
<span class="kw3">cd</span> ~<span class="sy0">/</span>ost4sem<span class="sy0">/</span>snake_project<span class="sy0">/</span>grassdb
&nbsp;
<span class="co0">#to create a new location, open in bash the existing script create_location.sh and as an input #give a name of the raster file, name of the new location folder and a path to a grass database</span>
<span class="kw2">bash</span> <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>exercise<span class="sy0">/</span>basic_adv_grass<span class="sy0">/</span>create_location.sh rain.tif netherlands <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>snake_project<span class="sy0">/</span>grassdb
&nbsp;
<span class="co0">#open grass </span>
grass64 <span class="re5">-text</span> <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>snake_project<span class="sy0">/</span>grassdb<span class="sy0">/</span>netherlands<span class="sy0">/</span>PERMANENT
&nbsp;
<span class="co0">#check current grass environment settings</span>
g.gisenv
&nbsp;
<span class="co0">#check current projection details</span>
g.region <span class="re5">-p</span>
&nbsp;
<span class="co0">#####################################################</span>
<span class="co0"># PREPROCESSING (1/2)</span>
<span class="co0"># import all the necessary data</span>
&nbsp;
<span class="co0">#import raster data -o means override projection (so use the projection of the location)</span>
r.in.gdal <span class="re2">input</span>=<span class="sy0">/</span>media<span class="sy0">/</span>sf_PhD<span class="sy0">/</span>data<span class="sy0">/</span>gvg_floatr1.tif <span class="re2">output</span>=gvg <span class="re5">-o</span> <span class="re5">--overwrite</span> 
&nbsp;
<span class="co0">#import vector data</span>
v.in.ogr <span class="re2">dsn</span>=<span class="sy0">/</span>media<span class="sy0">/</span>sf_PhD<span class="sy0">/</span>data<span class="sy0">/</span>heide.shp <span class="re2">output</span>=heath_org <span class="re2">snap</span>=1e-09 <span class="re5">--overwrite</span>
v.in.ogr <span class="re2">dsn</span>=<span class="sy0">/</span>media<span class="sy0">/</span>sf_PhD<span class="sy0">/</span>data<span class="sy0">/</span>zand.shp <span class="re2">output</span>=sand_org <span class="re5">--overwrite</span>
v.in.ogr <span class="re2">dsn</span>=<span class="sy0">/</span>media<span class="sy0">/</span>sf_PhD<span class="sy0">/</span>data<span class="sy0">/</span>Export_reptielen2t.shp <span class="re2">output</span>=transects <span class="re5">--overwrite</span> 
v.in.ogr <span class="re2">dsn</span>=<span class="sy0">/</span>media<span class="sy0">/</span>sf_PhD<span class="sy0">/</span>data<span class="sy0">/</span>FGR.shp <span class="re2">output</span>=fgr <span class="re5">--overwrite</span>
<span class="co0">#this one does not work ERROR: Unable to write feature (negative offset)</span>
v.in.ogr <span class="re2">dsn</span>=<span class="sy0">/</span>media<span class="sy0">/</span>sf_PhD<span class="sy0">/</span>data<span class="sy0">/</span>bos.shp <span class="re2">output</span>=forest_org <span class="re5">--overwrite</span>
&nbsp;
<span class="co0">#build the topography, not sure if this is needed </span>
<span class="co0">#Q: I don't uderstand why v.categry shows only centroids if there are boundaries as well?</span>
v.category <span class="re2">input</span>=heath_org <span class="re2">option</span>=report
v.build <span class="re2">map</span>=heath_org
v.category <span class="re2">input</span>=heath_org <span class="re2">option</span>=report
&nbsp;
<span class="co0">#Q: how to do it more efficiently? can I use some kind of indexing? wildcards? I want to drop all but the first collumn (2:ncol)</span>
v.info <span class="re5">-c</span> <span class="re2">map</span>=heath_org
v.db.dropcol <span class="re2">map</span>=heath_org <span class="re2">column</span>=IDENTIFICA
v.db.dropcol <span class="re2">map</span>=heath_org <span class="re2">column</span>=FYSIEKVOOR
v.db.dropcol <span class="re2">map</span>=heath_org <span class="re2">column</span>=TOP10_ID
v.db.dropcol <span class="re2">map</span>=heath_org <span class="re2">column</span>=FYSIEKVO_1
v.db.dropcol <span class="re2">map</span>=heath_org <span class="re2">column</span>=VOORKOMEN_
v.db.dropcol <span class="re2">map</span>=heath_org <span class="re2">column</span>=VOORKOMEN1
v.db.dropcol <span class="re2">map</span>=heath_org <span class="re2">column</span>=OBJECTBEGI
v.db.dropcol <span class="re2">map</span>=heath_org <span class="re2">column</span>=VERSIEBEGI
v.db.dropcol <span class="re2">map</span>=heath_org <span class="re2">column</span>=BRONACTUAL
v.db.dropcol <span class="re2">map</span>=heath_org <span class="re2">column</span>=BRONBESCHR
v.db.dropcol <span class="re2">map</span>=heath_org <span class="re2">column</span>=BRONNAUWKE
v.db.dropcol <span class="re2">map</span>=heath_org <span class="re2">column</span>=SHAPE_AREA
v.db.dropcol <span class="re2">map</span>=heath_org <span class="re2">column</span>=SHAPE_LEN
v.db.dropcol <span class="re2">map</span>=heath_org <span class="re2">column</span>=GEOMETRIE_
&nbsp;
v.db.droptable <span class="re2">map</span>=sand_org <span class="re5">-f</span>
v.build <span class="re2">map</span>=sand_org
&nbsp;
<span class="co0"># list mapsets</span>
g.mapset <span class="re5">-l</span>
&nbsp;
<span class="co0">#list available maps:</span>
g.list vect  
g.list rast
&nbsp;
<span class="co0">######################################################</span>
<span class="co0"># PREPROCESSING (2/2)</span>
<span class="co0"># clip existing maps to a clipshape, which is high sands (hz from fgr)</span>
&nbsp;
<span class="co0">#clip the vector data</span>
<span class="co0">#show attribute table</span>
v.db.select <span class="re2">map</span>=fgr
<span class="co0">#show one column only</span>
v.db.select <span class="re2">map</span>=fgr <span class="re2">column</span>=<span class="st0">&quot;AFK&quot;</span>
<span class="co0">#select attributes that meet a condition (only fgr category hz) and make a map &quot;high_sand&quot; that will be the project clip/mask</span>
v.extract <span class="re2">input</span>=fgr <span class="re2">output</span>=high_sand <span class="re2">where</span>=<span class="st0">&quot;AFK = 'hz'&quot;</span>
&nbsp;
<span class="co0">#select from other maps only areas within high sands</span>
v.overlay <span class="re2">ainput</span>=transects <span class="re2">binput</span>=high_sand <span class="re2">output</span>=transects_hz <span class="re2">operator</span>=and <span class="re5">--overwrite</span>
v.overlay <span class="re5">-t</span> <span class="re2">ainput</span>=heath_org <span class="re2">binput</span>=high_sand <span class="re2">output</span>=heath_hs <span class="re2">operator</span>=and <span class="re5">--overwrite</span>
v.overlay <span class="re2">ainput</span>=sand_org <span class="re2">binput</span>=high_sand <span class="re2">output</span>=sand_hs <span class="re2">operator</span>=and <span class="re5">--overwrite</span>
&nbsp;
<span class="co0">#clip the raster data</span>
<span class="co0">#convert clip polygon to raster</span>
v.to.rast <span class="re2">in</span>=high_sand <span class="re2">out</span>=high_sand_r <span class="re2">use</span>=val <span class="re2">value</span>=<span class="nu0">1</span>
<span class="co0">#calculate new raster map </span>
r.mapcalc <span class="st0">&quot;gvg_hs = if(high_sand_r,gvg)&quot;</span>
&nbsp;
<span class="co0">######################################################</span>
<span class="co0"># MAKE HABITAT PATCHES</span>
&nbsp;
<span class="co0">#merge polygons that are closer than 100m to each other into multipart features because animals see e.g. 2 polygons 5m apart as one habitat patch (see figures attached)</span>
&nbsp;
<span class="co0">#aggregate polygons with a changeable distance tolerance</span>
<span class="co0"># make a buffer around all polygons</span>
<span class="kw3">export</span> <span class="re2">BUFF_DIST</span>=<span class="nu0">100</span>
v.buffer <span class="re2">input</span>=heath_hs <span class="re2">output</span>=heath_buff <span class="re2">distance</span>=$<span class="br0">&#40;</span><span class="br0">&#40;</span><span class="re1">$BUFF_DIST</span><span class="sy0">/</span><span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="re5">--overwrite</span> 
<span class="co0">#look at the result</span>
v.category <span class="re2">input</span>=heath_buff <span class="re2">option</span>=report
&nbsp;
<span class="co0">#something similar to Multipart-To-Singlepart (in arcGIS): divide buffer, which is now one multipart polygon, to separate buffers</span>
<span class="co0">#remove all categories from all centroids and check the result   #change names to the same with --overwrite</span>
v.category <span class="re2">input</span>=heath_buff <span class="re2">output</span>=heath_buf1 <span class="re2">type</span>=centroid <span class="re2">option</span>=del <span class="re2">cat</span>=-<span class="nu0">1</span> <span class="re2">layer</span>=<span class="nu0">1</span> <span class="re5">--overwrite</span>
<span class="co0">#and check the results</span>
v.category <span class="re2">input</span>=heath_buf1 <span class="re2">option</span>=report
<span class="co0">#and then add new categories with</span>
v.category <span class="re2">input</span>=heath_buf1 <span class="re2">output</span>=heath_buf2 <span class="re2">type</span>=centroid <span class="re2">option</span>=add <span class="re2">cat</span>=<span class="nu0">1</span> <span class="re2">step</span>=<span class="nu0">1</span> <span class="re2">layer</span>=<span class="nu0">1</span> <span class="re5">--overwrite</span>
<span class="co0">#and check the results</span>
v.category <span class="re2">input</span>=heath_buf2 <span class="re2">option</span>=report
<span class="co0">#there is no table associated with this map</span>
v.info <span class="re2">map</span>=heath_buf2 <span class="re5">-c</span>
<span class="co0">#add table and make a new column to store the centroid IDs (cat)</span>
v.db.addtable <span class="re2">map</span>=heath_buf2 <span class="re2">columns</span>=<span class="st0">&quot;buff_id integer&quot;</span>
<span class="co0">#copy cat to column buff_id</span>
v.db.update <span class="re2">map</span>=heath_buf2 <span class="re2">col</span>=buff_id <span class="re2">qcol</span>=<span class="st0">&quot;cat&quot;</span>
<span class="co0">#check the result</span>
<span class="kw3">echo</span> <span class="st0">&quot;SELECT * FROM heath_buf2 WHERE cat &lt; 8&quot;</span> <span class="sy0">|</span> db.select
&nbsp;
<span class="co0">#to get rid of all the unecessary columns, drop the table and build topography again</span>
db.droptable <span class="re5">-f</span> <span class="re2">table</span>=heath_hs
v.build <span class="re2">map</span>=heath_hs
&nbsp;
<span class="co0">#overlay heath patches on buffers to get both ids in one table</span>
v.overlay <span class="re2">ainput</span>=heath_hs <span class="re2">binput</span>=heath_buf2 <span class="re2">output</span>=heath_ovrl <span class="re2">operator</span>=and <span class="re5">--overwrite</span>
<span class="co0">#patches belongng to the same buffer have the same b_cat</span>
<span class="kw3">echo</span> <span class="st0">&quot;SELECT * FROM heath_ovrl WHERE cat &lt; 8&quot;</span> <span class="sy0">|</span> db.select
<span class="co0">#dissolve heath patches based on buffer id (b_cat) to make multipart patches </span>
v.dissolve <span class="re2">input</span>=heath_ovrl <span class="re2">output</span>=heath <span class="re2">column</span>=b_cat <span class="re5">--overwrite</span>
&nbsp;
<span class="co0"># some display options to verify the result</span>
<span class="co0">#start a display monitor</span>
d.mon <span class="re2">start</span>=x2
<span class="co0">#display the maps</span>
<span class="co0">#original patches</span>
d.vect <span class="re2">map</span>=heath_hs <span class="re5">-c</span>
<span class="co0">#buffers multipart</span>
d.vect <span class="re2">map</span>=heath_buff <span class="re5">-c</span>
<span class="co0">#buffers singlepart</span>
d.vect <span class="re2">map</span>=heath_buf2 <span class="re5">-c</span>
<span class="co0">#heath patches</span>
d.vect <span class="re2">map</span>=heath <span class="re5">-c</span>
<span class="co0">#interactively zoom the map</span>
d.zoom <span class="re5">-h</span>
<span class="co0">#after closing display monitor go back to the default region (zoom out)</span>
g.region <span class="re5">-d</span>
&nbsp;
<span class="co0">#later: incorporate barriers (motorways)</span>
&nbsp;
<span class="co0">######################################################</span>
<span class="co0"># CALCULATE PATCH CHARACTERISTICS</span>
&nbsp;
<span class="co0">#	heath area</span>
<span class="co0">#create new attribute table (because the old one was droped) and column</span>
v.info <span class="re5">-c</span> <span class="re2">map</span>=heath
v.db.addtable <span class="re2">map</span>=heath 
v.db.addcol <span class="re2">map</span>=heath <span class="re2">col</span>=<span class="st0">&quot;area_m2 DOUBLE PRECISION&quot;</span>
<span class="co0">#calculate polygon areas</span>
v.to.db <span class="re2">map</span>=heath <span class="re2">option</span>=area <span class="re2">col</span>=area_m2 <span class="re2">unit</span>=me
&nbsp;
<span class="co0"># 	presence (yes/no) of sand (stuifzand) as a measure of habitat heterogeneity </span>
<span class="co0">#	forest edge length</span>
<span class="co0">#	wet/dry heath %</span>
<span class="co0">#       other covariates</span>
&nbsp;
<span class="co0">#work in progress ...</span>
&nbsp;
<span class="co0">######################################################</span>
<span class="co0"># GET TRANSECT CHARACTERISTICS</span>
&nbsp;
<span class="co0"># for each transect, find what are the intersecting patches and their summarised characteristics</span>
&nbsp;
<span class="co0">#work in progress ...</span>