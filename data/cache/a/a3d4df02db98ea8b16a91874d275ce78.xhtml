
<h1 class="sectionedit1" id="transform_a_simple_for_loop_script_in_multicore_for_loop_script_using_qsub">Transform a simple &quot;for loop script&quot; in multicore &quot;for loop script&quot; using qsub</h1>
<div class="level1">

<p>
<br/>

We have seen in the <a href="/dokuwiki/lib/exe/fetch.php?media=wiki:cluster_xargs1" class="media mediafile mf_ wikilink2" title="wiki:cluster_xargs1"> Transform a simple &quot;for loop&quot; in multicore &quot;for loop&quot;</a> &amp; <a href="/dokuwiki/lib/exe/fetch.php?media=wiki:cluster_xargs" class="media mediafile mf_ wikilink2" title="wiki:cluster_xargs"> Transform a simple &quot;for loop script&quot; in multicore &quot;for loop script&quot; using xargs </a> how to use  <em><strong>xargs</strong></em> to perform multicore processing. In clusters or servers where several users have access to multicore processing the job submission is managed by <em><strong>qsub</strong></em>. Qsub is the command used for job submission that create a job cue scheduled for each user with specific priority.
<br/>

</p>
<pre class="code"> ssh -X geodata??@omega.hpc.yale.edu</pre>
<pre class="code"> # if you do not have the folder or you are log to the Yale-HPC
 mkdir -p $HOME/ost4sem/exercise/basic_adv_gdalogr/fagus_sylvatica
 cd $HOME/ost4sem/exercise/basic_adv_gdalogr/fagus_sylvatica
 wget https://dl.dropboxusercontent.com/u/29337496/2020_TSSP_IP-ENS-A2-SP20_43023435.tif
 wget https://dl.dropboxusercontent.com/u/29337496/2050_TSSP_IP-ENS-A2-SP20_43023435.tif
 wget https://dl.dropboxusercontent.com/u/29337496/2080_TSSP_IP-ENS-A2-SP20_43023435.tif
 </pre>

<p>
<br/>

Now let&#039;s suppose that we have a script called myQSUBscript4cluster.sh with inside gdalwarp command and  settings specific for qsub.
</p>

</div>

<h4 id="qsub">QSUB</h4>
<div class="level4">

<p>
This example use qsub to send each file to a node. 
</p>
<pre class="code"> wget https://dl.dropboxusercontent.com/u/29337496/myQSUBXARGSscript4cluster.sh
 mkdir $HOME/stdout
 mkdir $HOME/stderr</pre>
<dl class="code">
<dt><a href="/dokuwiki/doku.php?do=export_code&amp;id=wiki:cluster_qsub&amp;codeblock=0" title="Download Snippet" class="mediafile mf_sh">myQSUBscript4cluster.sh</a></dt>
<dd><pre class="code bash"><span class="co0">#PBS -S /bin/bash </span>
<span class="co0">#PBS -q fas_devel</span>
<span class="co0">#PBS -l walltime=00:10:00    # maximum estimated processing time</span>
<span class="co0">#PBS -l nodes=1:ppn=1       # number of nodes and processors used in the computation</span>
<span class="co0">#PBS -V</span>
<span class="co0">#PBS -o $HOME/stdout        # directory where standard output are saved</span>
<span class="co0">#PBS -e $HOME/stderr        # directory where standard errors are saved</span>
&nbsp;
<span class="co0"># load modules for GIS and RS application </span>
&nbsp;
<span class="co0"># varibles</span>
&nbsp;
<span class="re2">DIR</span>=<span class="re1">$HOME</span><span class="sy0">/</span>ost4sem<span class="sy0">/</span>exercise<span class="sy0">/</span>basic_adv_gdalogr<span class="sy0">/</span>fagus_sylvatica
&nbsp;
<span class="re2">filename</span>=$<span class="br0">&#40;</span><span class="kw2">basename</span> <span class="re1">$file</span><span class="br0">&#41;</span>
gdalwarp <span class="re5">-r</span> cubic <span class="re5">-tr</span> <span class="nu0">0.008</span> <span class="nu0">0.008</span> -t_srs EPSG:<span class="nu0">4326</span> <span class="re1">$DIR</span><span class="sy0">/</span><span class="re1">$filename</span>.tif  <span class="re1">$DIR</span><span class="sy0">/</span>proj_<span class="re1">$filename</span>.tif <span class="re5">-overwrite</span> 
&nbsp;
checkjob <span class="re5">-v</span> <span class="re1">$PBS_JOBID</span></pre>
</dd></dl>

<p>
You can run myQSUBscript4cluster.sh with the following code<br/>

</p>
<pre class="code"> for file in $HOME/ost4sem/exercise/basic_adv_gdalogr/fagus_sylvatica/20?0_TSSP_IP-ENS-A2-SP20_43023435.tif ; do qsub   -v file=$file myQSUBscript4cluster.sh ; done </pre>

<p>
This solution is not computational efficient because each node use only one processor to accomplish the task. Rather we can use QSUB &amp; XARGS to send all the files to a node and then all the files to the processors.
</p>

</div>

<h4 id="qsub_xargs">QSUB &amp; XARGS</h4>
<div class="level4">
<pre class="code"> wget https://dl.dropboxusercontent.com/u/29337496/myQSUBXARGSscript4cluster.sh
 mkdir $HOME/stdout
 mkdir $HOME/stderr</pre>
<dl class="code">
<dt><a href="/dokuwiki/doku.php?do=export_code&amp;id=wiki:cluster_qsub&amp;codeblock=1" title="Download Snippet" class="mediafile mf_sh">myQSUBXARGSscript4cluster.sh</a></dt>
<dd><pre class="code bash"><span class="co0">#PBS -S /bin/bash </span>
<span class="co0">#PBS -q fas_devel</span>
<span class="co0">#PBS -l walltime=00:10:00    # maximum estimated processing time</span>
<span class="co0">#PBS -l nodes=1:ppn=4       # number of nodes and processors used in the computation</span>
<span class="co0">#PBS -V</span>
<span class="co0">#PBS -o $HOME/stdout        # directory where standard output are saved</span>
<span class="co0">#PBS -e $HOME/stderr        # directory where standard errors are saved</span>
&nbsp;
<span class="co0"># load modules for GIS and RS application </span>
&nbsp;
<span class="co0"># varibles</span>
&nbsp;
<span class="re2">DIR</span>=<span class="re1">$HOME</span><span class="sy0">/</span>ost4sem<span class="sy0">/</span>exercise<span class="sy0">/</span>basic_adv_gdalogr<span class="sy0">/</span>fagus_sylvatica
&nbsp;
<span class="kw2">ls</span> <span class="re1">$DIR</span><span class="sy0">/</span><span class="nu0">20</span>?<span class="nu0">0</span>_TSSP_IP-ENS-A2-SP20_43023435.tif <span class="sy0">|</span> <span class="kw2">xargs</span> <span class="re5">-n</span> <span class="nu0">1</span> <span class="re5">-P</span> <span class="nu0">4</span> <span class="kw2">bash</span> <span class="re5">-c</span> $<span class="st_h">'
file=$1
filename=$(basename $file)
gdalwarp -r cubic -tr 0.008 0.008 -t_srs EPSG:4326 $DIR/$filename.tif  $DIR/proj_$filename.tif -overwrite 
&nbsp;
'</span> _ 
checkjob <span class="re5">-v</span> <span class="re1">$PBS_JOBID</span></pre>
</dd></dl>

<p>
You can run myQSUBXARGSscript4cluster.sh with the following code<br/>

</p>
<pre class="code"> qsub myQSUBXARGSscript4cluster.sh  </pre>

<p>
This solution is more efficient the previous one because we are using one node and the 4 processors in one node.<br/>

</p>

</div>
