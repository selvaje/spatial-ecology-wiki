<span class="co0">#    1. Rasterization shp and spatial criteria in ectar unity measure (pixel = 100 * 100 meters);</span>
<span class="co0">#    2. Application of fuzzy logic method;</span>
<span class="co0">#    3. Replacement of the spatial information criteria with generated weighted coefficient (vegetation cover, forest vegetation type, slope, elevation etc);</span>
<span class="co0">#    4. Union and subsequent query of the information for each raster pixel:</span>
&nbsp;
&nbsp;
<span class="co0">##</span>
<span class="co0"># Open Qgis and create a new location:  Basilicata, mapset: biomass using italian extent and</span>
<span class="co0"># projection as follow</span>
<span class="co0"># name: Universe Traverse Marcator</span>
<span class="co0"># proj: utm</span>
<span class="co0"># datum: wgs84</span>
<span class="co0"># ellps: wgs84</span>
<span class="co0"># zone: 33</span>
<span class="co0"># no_defets: definied</span>
<span class="co0"># EPGS: 32633</span>
&nbsp;
<span class="co0">#  start grass in the new working directory</span>
grass <span class="re5">-text</span> ~<span class="sy0">/</span>ost4sem<span class="sy0">/</span>grassdb<span class="sy0">/</span>basilicata<span class="sy0">/</span>biomass<span class="sy0">/</span>
&nbsp;
<span class="co0"># import Pignola raster file</span>
r.in.gdal   <span class="re5">-o</span> <span class="re2">input</span>=~<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>raster<span class="sy0">/</span>Pantano.tif <span class="re2">output</span>=Pantano_raster
<span class="co0"># -o override projection,  -e = extent to the new shp file extent</span>
&nbsp;
<span class="co0"># import forest cover shp file</span>
v.in.ogr   <span class="re5">-o</span> <span class="re5">-e</span> <span class="re2">dsn</span>=~<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>shp<span class="sy0">/</span>CFR_BASILICATA_ALDO_VERIFICATO_INTERSECT_AREA.shp <span class="re2">output</span>=bas_forest
<span class="co0"># -o override projection,  -e = extent to the new shp file extent</span>
&nbsp;
<span class="co0"># WARNING: 518 areas represent more (overlapping) features, because polygons</span>
<span class="co0">#          overlap in input layer(s). Such areas are linked to more than 1</span>
<span class="co0">#          row in attribute table. The number of features for those areas is</span>
<span class="co0">#          stored as category in layer 2</span>
<span class="co0"># 14178 input polygons</span>
<span class="co0"># Total area: 4.031687e+09 (17773 areas)</span>
<span class="co0"># Overlapping area: 5.491385e+05 (518 areas)</span>
<span class="co0"># Area without category: 4.781430e+08 (4133 areas)</span>
&nbsp;
<span class="co0"># # select, in shp file, study area from comune = Pignola</span>
<span class="co0"># g.region bas_forest</span>
<span class="co0"># </span>
<span class="co0"># # select, in shp file, study area from coordinate projection, WGS 84 - UTM N 33</span>
<span class="co0"># g.region n=5322500 s=401000 w=300700 e=889700</span>
<span class="co0"># </span>
<span class="co0"># # select study area from multiple comune or other parameter</span>
<span class="co0"># v.extract input=bas_forest output=pantano_forest    where=&quot;(NOMECOMUNE = 'PIGNOLA') or (NOMECOMUNE = 'TITO') or (NOMECOMUNE = 'ABRIOLA') or (NOMECOMUNE = 'SASSO DI CASTALDA') or (NOMECOMUNE = 'PICERNO') or (NOMECOMUNE = 'SATRIANO DI LUCANIA') or (NOMECOMUNE = 'CALVELLO') or (NOMECOMUNE = 'POTENZA')&quot; new=-1 --overwrite ; d.mon start=x1 ; d.vect pantano_forest</span>
&nbsp;
<span class="co0"># select study area from buffer area (used method)</span>
    <span class="co0">## create a new empty vector map that contain a point of selected coordinates, and a circle of 15000 meters ray </span>
    v.edit <span class="re2">tool</span>=create <span class="re2">map</span>=biomass_plant
&nbsp;
    <span class="co0">## create a point, from coordinate projection, that will represent the centre of a circle of 15000 meters ray </span>
    <span class="kw3">echo</span> <span class="st0">&quot;P 1 1
     563280 4493294
     1 1&quot;</span> <span class="sy0">|</span> v.edit <span class="re5">-n</span> <span class="re2">tool</span>=add <span class="re2">map</span>=biomass_plant
&nbsp;
    <span class="co0">## generate a buffer area</span>
    v.buffer <span class="re2">input</span>=biomass_plant <span class="re2">output</span>=circles <span class="re2">type</span>=point <span class="re2">buffer</span>=<span class="nu0">15000</span>
&nbsp;
    <span class="co0">## Selects features from vector map (A) by features from other vector map in the buffer circle (B). </span>
    v.select <span class="re2">ainput</span>=bas_forest <span class="re2">binput</span>=circles <span class="re2">output</span>=baslimit <span class="re2">operator</span>=overlap
&nbsp;
<span class="co0"># create folder: reclass_table</span>
<span class="kw2">mkdir</span> <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table
&nbsp;
<span class="co0"># Rasterization shp and spatial criteria in unity measure (pixel = 5 * 5 meters)</span>
<span class="co0"># change resolution in 5 meters</span>
g.region <span class="re2">res</span>=<span class="nu0">5</span> <span class="re2">vect</span>=baslimit
&nbsp;
<span class="co0"># 1. convert a unique baslimit.shp file, with multiple informations, in n. 5 raster file of 5 meters side with unique parameter information considered more relevant to the use of forest stands  </span>
<span class="co0"># 2. Replacement of the spatial information criteria with fuzzy logic weighted coefficient;</span>
&nbsp;
<span class="co0">######</span>
<span class="co0"># Aj = Productivity in mc/ectar for vegetation cover type</span>
v.to.rast <span class="re2">input</span>=baslimit <span class="re2">output</span>=prim_liv <span class="re2">use</span>=attr <span class="re2">col</span>=PRIM_LIV  <span class="re5">--overwrite</span>
&nbsp;
<span class="kw3">echo</span> <span class="st0">&quot;101 thru 104 = 265 faggio&quot;</span> <span class="sy0">&gt;</span> <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_prim_liv.txt
<span class="kw3">echo</span> <span class="st0">&quot;105 thru 111 = 427 rimboschimenti misti&quot;</span> <span class="sy0">&gt;&gt;</span> <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_prim_liv.txt
<span class="kw3">echo</span> <span class="st0">&quot;112 thru 114 = 645 castagno&quot;</span> <span class="sy0">&gt;&gt;</span> <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_prim_liv.txt
<span class="kw3">echo</span> <span class="st0">&quot;115 thru 123 = 260 querceti&quot;</span> <span class="sy0">&gt;&gt;</span> <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_prim_liv.txt
<span class="kw3">echo</span> <span class="st0">&quot;124 thru 126 = 0 arbusteti&quot;</span> <span class="sy0">&gt;&gt;</span> <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_prim_liv.txt
<span class="kw3">echo</span> <span class="st0">&quot;127 thru 135 = 200 pini mediterranei&quot;</span> <span class="sy0">&gt;&gt;</span> <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_prim_liv.txt
<span class="kw3">echo</span> <span class="st0">&quot;136 thru 140 = 500 igrofile&quot;</span> <span class="sy0">&gt;&gt;</span> <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_prim_liv.txt
<span class="kw3">echo</span> <span class="st0">&quot;141 thru 144 = 200 rimboschimenti&quot;</span> <span class="sy0">&gt;&gt;</span> <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_prim_liv.txt
<span class="kw3">echo</span> <span class="st0">&quot;145 thru 146 = 0 temporaneamente priva&quot;</span> <span class="sy0">&gt;&gt;</span> <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_prim_liv.txt
&nbsp;
r.reclass <span class="re2">input</span>=prim_liv <span class="re2">output</span>=prim_liv_r <span class="re2">rules</span>=<span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_prim_liv.txt <span class="re5">--overwrite</span> 
&nbsp;
<span class="co0"># convert from integer to double value</span>
r.mapcalc prim_liv_r2 = prim_liv_r<span class="sy0">*</span><span class="nu0">0.00100000</span>
&nbsp;
&nbsp;
<span class="co0">######</span>
<span class="co0"># ƒ(Jaccess) = Fuzzy function for accessibility criteria;</span>
v.to.rast <span class="re2">input</span>=baslimit <span class="re2">output</span>=access <span class="re2">use</span>=attr <span class="re2">column</span>=ACCESS  <span class="re5">--overwrite</span>
&nbsp;
<span class="kw3">echo</span> <span class="st0">&quot;401 = 10 buona&quot;</span> <span class="sy0">&gt;</span> <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_access.txt
<span class="kw3">echo</span> <span class="st0">&quot;402 = 7 scarsa&quot;</span> <span class="sy0">&gt;&gt;</span> <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_access.txt
<span class="kw3">echo</span> <span class="st0">&quot;403 = 4 insufficiente&quot;</span> <span class="sy0">&gt;&gt;</span> <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_access.txt
&nbsp;
r.reclass <span class="re2">input</span>=access <span class="re2">output</span>=access_r <span class="re2">rules</span>=<span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_access.txt  <span class="re5">--overwrite</span> 
&nbsp;
<span class="co0"># convert from integer to double value</span>
r.mapcalc access_r2 = access_r<span class="sy0">*</span><span class="nu0">0.10000</span>
&nbsp;
&nbsp;
<span class="co0">######</span>
<span class="co0"># ƒ(Jpend) = Fuzzy function for slope criteria;</span>
v.to.rast <span class="re2">input</span>=baslimit <span class="re2">output</span>=pend_media <span class="re2">use</span>=attr <span class="re2">column</span>=PEND_MEDIA  <span class="re5">--overwrite</span>
&nbsp;
<span class="kw3">echo</span> <span class="st0">&quot;1 thru 18 = 10 buona&quot;</span> <span class="sy0">&gt;</span> <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_pend_media.txt <span class="re5">--overwrite</span>
<span class="kw3">echo</span> <span class="st0">&quot;19 thru 24 = 7 scarsa&quot;</span> <span class="sy0">&gt;&gt;</span> <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_pend_media.txt <span class="re5">--overwrite</span>
<span class="kw3">echo</span> <span class="st0">&quot;25 thru 31 = 4 scarsa&quot;</span> <span class="sy0">&gt;&gt;</span> <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_pend_media.txt <span class="re5">--overwrite</span>
<span class="kw3">echo</span> <span class="st0">&quot;32 thru 100 = 0 Insufficiente&quot;</span> <span class="sy0">&gt;&gt;</span> <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_pend_media.txt <span class="re5">--overwrite</span>
&nbsp;
r.reclass <span class="re2">input</span>=pend_media <span class="re2">output</span>=pend_media_r <span class="re2">rules</span>=<span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_pend_media.txt <span class="re5">--overwrite</span>
&nbsp;
<span class="co0"># convert from integer to double value</span>
r.mapcalc pend_media_r2 = pend_media_r<span class="sy0">*</span><span class="nu0">0.100000</span>
&nbsp;
&nbsp;
<span class="co0">######</span>
<span class="co0"># ƒ(J3liv) = Fuzzy function for utilisation type criteria</span>
v.to.rast <span class="re2">input</span>=baslimit <span class="re2">output</span>=terz_liv <span class="re2">use</span>=attr <span class="re2">col</span>=TERZ_LIV  <span class="re5">--overwrite</span>
&nbsp;
<span class="kw3">echo</span> <span class="st0">&quot;301 thru 302 = 10 ceduo&quot;</span> <span class="sy0">&gt;</span> <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_terz_liv.txt
<span class="kw3">echo</span> <span class="st0">&quot;303 thru 306 = 20 ceduo coniferato&quot;</span> <span class="sy0">&gt;&gt;</span> <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_terz_liv.txt
<span class="kw3">echo</span> <span class="st0">&quot;308 thru 309 = 10 popolamenti transitori&quot;</span> <span class="sy0">&gt;&gt;</span> <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_terz_liv.txt
<span class="kw3">echo</span> <span class="st0">&quot;310 thru 311 = 4 novelleto e perticaia&quot;</span> <span class="sy0">&gt;&gt;</span> <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_terz_liv.txt
<span class="kw3">echo</span> <span class="st0">&quot;312 thru 313 = 8 fustaia giovane e matura&quot;</span> <span class="sy0">&gt;&gt;</span> <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_terz_liv.txt
<span class="kw3">echo</span> <span class="st0">&quot;315 thru 320 = 12 fustaia disetaneiforme&quot;</span> <span class="sy0">&gt;&gt;</span> <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_terz_liv.txt
&nbsp;
r.reclass <span class="re2">input</span>=terz_liv <span class="re2">output</span>=terz_liv_r <span class="re2">rules</span>=<span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_terz_liv.txt <span class="re5">--overwrite</span>
&nbsp;
<span class="co0"># convert from integer to double value</span>
r.mapcalc terz_liv_r2 = terz_liv_r<span class="sy0">*</span><span class="nu0">0.100000</span>
&nbsp;
&nbsp;
<span class="co0">######</span>
<span class="co0"># ƒ(Jvig) = Fuzzy function for fertility criteria;</span>
v.to.rast <span class="re2">input</span>=baslimit <span class="re2">output</span>=vigore <span class="re2">use</span>=attr <span class="re2">col</span>=VIGORE  <span class="re5">--overwrite</span>
&nbsp;
<span class="kw3">echo</span> <span class="st0">&quot;603 = 10 alto&quot;</span> <span class="sy0">&gt;</span> <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_vigore.txt
<span class="kw3">echo</span> <span class="st0">&quot;602 = 7 medio&quot;</span> <span class="sy0">&gt;&gt;</span> <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_vigore.txt
<span class="kw3">echo</span> <span class="st0">&quot;601 = 4 basso&quot;</span> <span class="sy0">&gt;&gt;</span> <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_vigore.txt
&nbsp;
r.reclass <span class="re2">input</span>=vigore <span class="re2">output</span>=vigore_r <span class="re2">rules</span>=<span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_vigore.txt <span class="re5">--overwrite</span> 
&nbsp;
<span class="co0"># convert from integer to double value</span>
r.mapcalc vigore_r2 = vigore_r<span class="sy0">*</span><span class="nu0">0.100000</span>
&nbsp;
&nbsp;
&nbsp;
<span class="co0"># ƒ(Jquot) = Fuzzy function for elevation criteria;</span>
v.to.rast <span class="re2">input</span>=baslimit <span class="re2">output</span>=quota_medi <span class="re2">use</span>=attr <span class="re2">col</span>=QUOTA_MEDI  <span class="re5">--overwrite</span>
&nbsp;
<span class="kw3">echo</span> <span class="st0">&quot;0 thru 1400 = 1 buona&quot;</span> <span class="sy0">&gt;</span> <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_quota_medi.txt <span class="re5">--overwrite</span>
<span class="kw3">echo</span> <span class="st0">&quot;1400 thru 2000 = 0 nulla&quot;</span> <span class="sy0">&gt;&gt;</span> <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_quota_medi.txt <span class="re5">--overwrite</span>
&nbsp;
r.reclass <span class="re2">input</span>=quota_medi <span class="re2">output</span>=quota_medi_r <span class="re2">rules</span>=<span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>project<span class="sy0">/</span>input<span class="sy0">/</span>reclass_table<span class="sy0">/</span>reclass_quota_medi.txt <span class="re5">--overwrite</span> 
&nbsp;
<span class="co0"># overlope of the various informative stands obtained</span>
&nbsp;
          <span class="co0"># Aj = ∑Xij [ƒ(Jaccess) + ƒ(Jpend) + ƒ(Jvig) + ƒ(J3liv) + ƒ(Jvig) 5־¹]</span>
&nbsp;
                  <span class="co0"># where:</span>
                  <span class="co0"># Aj = Productivity; </span>
                  <span class="co0"># Xij = Unitary provvigion for forestry category, for ectar in twenty years;</span>
                  <span class="co0"># ƒ(Jaccess) = Fuzzy function for accessibility criteria;</span>
                  <span class="co0"># ƒ(Jpend) = Fuzzy function for slope criteria;</span>
                  <span class="co0"># ƒ(J3liv) = Fuzzy function for accessibility criteria</span>
                  <span class="co0"># ƒ(Jvig) = Fuzzy function for vigore criteria;</span>
                  <span class="co0"># ƒ(Jquot) = Fuzzy function for elevation criteria;</span>
                  <span class="co0"># Wj = Forestry area value..</span>
&nbsp;
r.mapcalc <span class="re2">produttivita</span>=<span class="st0">&quot;prim_liv_r2*((access_r2+pend_media_r2+terz_liv_r2+vigore_r2+quota_medi_r)/5)&quot;</span>
\\