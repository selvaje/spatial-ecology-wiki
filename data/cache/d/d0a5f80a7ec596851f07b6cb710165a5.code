#plot the Hypsometry dataset for the whole world showing 
#rectangle with location of study area
&nbsp;
image2D(Hypsometry, xlab = &quot;longitude&quot;, ylab = &quot;latitude&quot;, \
 contour = list(levels = 0, col = &quot;black&quot;, lwd = 2), \
shade = 0.1, main = &quot;Hypsometry data set&quot;, clab = &quot;m&quot;) \
rect(55, 25 ,80,45 ,lwd=3)
&nbsp;
#subsetting the study area
&nbsp;
ii=which(Hypsometry$x &gt; 55 &amp; Hypsometry$x &lt; 80) 
jj=which(Hypsometry$y &gt; 25 &amp; Hypsometry$y &lt; 45) 
zlim=c(5000, 0)
par(mfrow = c(1, 1))
persp3D(z = Hypsometry$z[ii,jj], xlab = &quot;longitude&quot;, main= &quot;Study area&quot;, \
bty =&quot;bl2&quot;, ylab = &quot;latitude&quot;,  zlab = &quot;height&quot;, clab = &quot;height, m&quot;, \
expand = 0.5, d = 2, phi = 20, theta = 30, resfac = 4, \
contour = list(col = &quot;grey&quot;, side = c(&quot;zmin&quot;, &quot;z&quot;)), \
zlim = zlim, colkey = list(side = 1, length = 0.5))
&nbsp;
#3D scatter plot of the dataset
&nbsp;
par(mfrow = c(1, 1))
panelfirst &lt;- function(pmat) {
zmin=min(ord$time)
XY=trans3D(ord$lon, ord$lat, z = rep(zmin, nrow(ord)), pmat = pmat)
scatter2D(XY$x, XY$y, colvar = ord$int, pch = &quot;.&quot;, cex = 2, \
add = TRUE, colkey = FALSE)
xmin=min(ord$lon)
XY=trans3D(x = rep(xmin, nrow(ord)), y = ord$lat,
z = ord$time, pmat = pmat)
scatter2D(XY$x, XY$y, colvar = ord$int, pch = &quot;.&quot;, \
cex = 2, add = TRUE, colkey = FALSE)
}
&nbsp;
with(ord, scatter3D(x = lon, y = lat, z = time, colvar = int, \
pch = 16, cex = 1.5, xlab = &quot;longitude&quot;, ylab = &quot;latitude&quot;, \
zlab = &quot;time&quot;, clab = c(&quot;Anomalous&quot;,&quot;counts&quot;), \
main = &quot;Distribution of anomalous counts&quot;, ticktype = &quot;detailed&quot;, \
panel.first = panel first, theta = 10, d = 2, \
colkey = list(length = 0.5, width = 0.5, cex.clab = 0.75)))
&nbsp;
&nbsp;
#create combined scatterplot+study area+volcanic eruption
# surface = volcano 
&nbsp;
M = mesh(1:nrow(volcano), 1:ncol(volcano)) 
scatter3D(xss, ys, zs, ticktype = &quot;detailed&quot;, pch = 16, bty = &quot;f&quot;, \
xlab=&quot;pixel&quot;, ylab=&quot;line&quot;, zlab=&quot;time&quot;, \
xlim = c(1, 87), ylim = c(1,61), zlim = c(94, 315),phi=10, \
surf = list(x = M$x, y = M$y, z = volcano, \
col = &quot;grey&quot;, shade = 0.3, alpha=0.8)) 
&nbsp;
scatter3D(x = 20, y = 40, z = 300, add = TRUE, \
colkey = FALSE,pch = 18, cex = 3, col = &quot;black&quot;)
&nbsp;
&nbsp;
#create matrix with the data
&nbsp;
matrix=array(0, c(100,100,100)) 
&gt; for (i in 1:100){ 
+ matrix[ord$lat[i],ord$lon[i],ord$time[i]]=ord$int[i] 
+ } 
&nbsp;
&nbsp;
#plot isosurface of the volumetric data
&nbsp;
iso = createisosurf(ord$lat, ord$lon, ord$time, matrix, level = 34)
triangle3D(iso, col = &quot;lightskyblue&quot;, alpha=0.8,  shade = 0.3) 
&nbsp;
#plot 3D transparent histogram
&nbsp;
hist3D(z=volcano, scale = FALSE, expand = 0.01, col = jet.col(100, alpha = 0.3), \
border = &quot;black&quot;, main=&quot;3D histogram of altitude values&quot;)
&nbsp;
#plot isosurface of anomalies with contour3D
&nbsp;
contour3d(matrix, 34, alpha=0.8) 
box3d(col=&quot;gray&quot;)
&nbsp;
#plot density contour surface (kernel density estimate)
&nbsp;
de=kde3d(ord$lon, ord$lat, ord$time, n=40)
contour3d(de$d, 0.00005, de$x, de$y, de$z, color=&quot;magenta&quot;) 
box3d(col=&quot;gray&quot;)
&nbsp;
#create small array
&nbsp;
cube=array(0, c(8,10,12))
cube[3:6,4:6,5:8]=1 
cube[4:5,5,6:7]=2 
&nbsp;
#plot nested transparent isosurfaces with the cube
&nbsp;
n=40 
k=3 
cmap=heat.colors 
lev&lt;-c(0,1,2)
al=c(0,0.4,0.8) 
contour3d(cube, lev, color=col, alpha=al) 
box3d(col=&quot;gray&quot;)
&nbsp;
#plot isosurfaces and slices of the cube
&nbsp;
mcube=mesh(8,10,12)
x=c(1:8) 
y=c(1:10) 
z=c(1:12)
isoc=createisosurf(x,y,z, cube, level = 1) 
triangle3D(isoc, col = &quot;lightskyblue&quot;, alpha=0.8,  shade = 0.3)
slice3D(x,y,z, colvar=cube, xs=4, ys=NULL, zs=c(6,8))