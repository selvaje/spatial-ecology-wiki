
<h2 class="sectionedit1" id="understanding_autoecology_synecology_to_model_species_distribution">Understanding Autoecology &amp; Synecology to model species distribution</h2>
<div class="level2">

<p>
The main aim of this page is to show how to retrieve environmental information at point level and build up a table useful to identify  Autoecology and Synecology of a species.
</p>
<ul>
<li class="level1"><div class="li"> Autoecology: the branch of ecology which deals with individual species and their reactions to environmental factors. <a href="http://www.everythingbio.com" class="urlextern" target="blanc" title="http://www.everythingbio.com" rel="nofollow noopener">sources</a></div>
</li>
<li class="level1"><div class="li"> Synecology : The branch of ecology which deals with the distribution, abundance, demography, and interactions between coexisting populations. </div>
</li>
</ul>

<p>
As an example we show a typical pattern of 3 plant species.<br/>
<br/>

<a href="/lib/exe/detail.php?id=wiki%3Aspec_distrib&amp;media=wiki:synecology_cembro.png" class="media" title="wiki:synecology_cembro.png"><img src="/lib/exe/fetch.php?w=600&amp;tok=8661e2&amp;media=wiki:synecology_cembro.png" class="media" alt="" width="600" /></a><br/>

</p>

<p>
<br/>

Autoecology and synecology of Pinus cembra, according to bioclimatic variables and to the distribution of Larix decidua and Picea abies  <a href="http://www.spatial-ecology.net/giuseppe/publications/1-s2.0-S0378112709007257-main.pdf" class="urlextern" target="blanc" title="http://www.spatial-ecology.net/giuseppe/publications/1-s2.0-S0378112709007257-main.pdf" rel="nofollow noopener"> (S. Casalegno et. al. 2010)</a>. ( <a href="http://spatial-ecology.net/dokuwiki/doku.php?id=wiki:pcem_syneco_r" class="urlextern" target="blanc" title="http://spatial-ecology.net/dokuwiki/doku.php?id=wiki:pcem_syneco_r" rel="nofollow noopener"> script</a>)
</p>

</div>
<!-- EDIT1 SECTION "Understanding Autoecology & Synecology to model species distribution" [1-1023] -->
<h2 class="sectionedit2" id="autoecology_of_solitary_tinamou">Autoecology of Solitary Tinamou</h2>
<div class="level2">

<p>
The <a href="http://en.wikipedia.org/wiki/Solitary_Tinamou" class="urlextern" target="blanc" title="http://en.wikipedia.org/wiki/Solitary_Tinamou" rel="nofollow noopener"> Solitary Tinamou </a> is a bird that is living in South America.<br/>

Points data can be download from <a href="http://ebird.org/content/ebird/" class="urlextern" target="blanc" title="http://ebird.org/content/ebird/" rel="nofollow noopener"> ebird </a> and <a href="http://www.gbif.org/" class="urlextern" target="blanc" title="http://www.gbif.org/" rel="nofollow noopener"> gbif</a>. Moreover, in Map Of Life there are dataset of presence and absence in National Parks. 
We will use these points to extract environment variable values as in this picture<br/>

</p>
<div class="table sectionedit3"><table class="inline">
	<tr class="row0">
		<td class="col0"><a href="/lib/exe/detail.php?id=wiki%3Aspec_distrib&amp;media=wiki:gis.jpg" class="media" title="wiki:gis.jpg"><img src="/lib/exe/fetch.php?w=350&amp;tok=f9e646&amp;media=wiki:gis.jpg" class="media" title="gis.jpg" alt="gis.jpg" width="350" /></a></td>
	</tr>
</table></div>
<!-- EDIT3 TABLE [1478-1505] -->
</div>

<h4 id="prepare_the_data_before_import_in_r">Prepare the data before import in R</h4>
<div class="level4">
<pre class="code bash"><span class="kw2">cp</span>  <span class="re5">-r</span>  <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>Dropbox<span class="sy0">/</span>itc2013<span class="sy0">/</span>Solitary_Tinamou  <span class="sy0">/</span>home<span class="sy0">/</span>user<span class="sy0">/</span>ost4sem<span class="sy0">/</span>exercise<span class="sy0">/</span></pre>

<p>
The following code focus in data download and data preparation. You may skip this part because the data has been already downloaded and unzipped.<br/>

</p>
<pre class="code bash"><span class="co0"># see the text data file </span>
<span class="co0"># cd /home/user/ost4sem/exercise/Solitary_Tinamou/pointdata/</span>
<span class="co0"># more ebd_soltin1_relAug-2013.txt</span>
<span class="co0"># select the the column 21 LATITUDE and 22 LONGITUDE </span>
<span class="co0"># awk -F  &quot;\t&quot; '{  print $21 ,  $22 }'   ebd_soltin1_relAug-2013.txt &gt; lat_long_ebd.txt</span>
&nbsp;
<span class="co0"># download WorldCom data </span>
<span class="co0"># the WorldCom data have been already downloaded and stored in this directory /home/user/ost4sem/exercise/Solitary_Tinamou/worldclim</span>
&nbsp;
<span class="co0"># wget http://biogeo.ucdavis.edu/data/climate/worldclim/1_4/tiles/cur/tmean_34_tif.zip </span>
<span class="co0"># wget http://biogeo.ucdavis.edu/data/climate/worldclim/1_4/tiles/cur/tmax_34_tif.zip </span>
<span class="co0"># wget http://biogeo.ucdavis.edu/data/climate/worldclim/1_4/tiles/cur/tmin_34_tif.zip </span>
<span class="co0"># wget http://biogeo.ucdavis.edu/data/climate/worldclim/1_4/tiles/cur/alt_34_tif.zip </span>
<span class="co0"># wget http://biogeo.ucdavis.edu/data/climate/worldclim/1_4/tiles/cur/prec_34_tif.zip </span>
&nbsp;
<span class="co0"># unzipped the dataset</span>
<span class="co0"># unzip alt_34_tif.zip</span>
<span class="co0"># unzip prec_34_tif.zip</span>
<span class="co0"># unzip tmax_34_tif.zip</span>
<span class="co0"># unzip tmean_34_tif.zip</span>
<span class="co0"># unzip tmin_34_tif.zip</span></pre>

<p>
Before to start R navigate in the /home/user/ost4sem/exercise/Solitary_Tinamou/* directories and open the file with the different software that we present so far: openev , qgis , more for txt file. 
Try to use as much as possible the terminal to navigate in the directories and for opening the software<br/>

</p>

</div>

<h4 id="install_library_r">Install library R</h4>
<div class="level4">

<p>
Check if you have the following library are installed and if not installed them by starting R with <em>sudo</em> right in the terminal.
</p>
<pre class="code bash"><span class="kw2">sudo</span> R</pre>
<pre class="code r">install.packages(&quot;dismo&quot;)
install.packages(&quot;XML&quot;)
install.packages(&quot;maptools&quot;)
install.packages(&quot;rgeos&quot;)
install.packages(&quot;rasterVis&quot;)</pre>

</div>

<h4 id="start_r">Start R</h4>
<div class="level4">

<p>
From this point you can open in Rstudio following script /home/user/ost4sem/exercise/Solitary_Tinamou/script/Tinamou.R
</p>
<pre class="code r">library(raster)
library (dismo)
library (XML)
library (rgeos)
library (maptools)
library(sp)
library(rasterVis)
library(rgdal)
library(car)
&nbsp;
## download point data of occurrences from the Global Biodiversity Information Facility (GBIF) dataset 
gbif_points = gbif('Tinamus' , 'solitarius' , download=T , geo=T)
gbif_points=gbif_points[!is.na(gbif_points$lat),]
&nbsp;
## import the ebird points
ebird = read.table(&quot;/home/user/ost4sem/exercise/Solitary_Tinamou/pointdata/lat_long_ebd.txt&quot; ,header = TRUE  )
&nbsp;
## import a presence-absence dataset from parks
parks = read.table (&quot;/home/user/ost4sem/exercise/Solitary_Tinamou/pointdata/Tinamus_solitarius_rowids.asc&quot; , header = TRUE  )
&nbsp;
## import expert range
tin_range=readOGR(&quot;/home/user/ost4sem/exercise/Solitary_Tinamou/shp/iucn_birds_proj.shp&quot;,&quot;iucn_birds_proj&quot;)
tin_range=spTransform(tin_range,CRS(&quot;+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs&quot;))
&nbsp;
## Make some pseudo-absences
pa=as.data.frame(coordinates(spsample(tin_range,70,type=&quot;random&quot;)))
&nbsp;
## Build a combined dataset (with source, presence/absence, and coordinates)
points=rbind.data.frame(
  data.frame(src=&quot;gbif&quot;,obs=1,lat=gbif_points$lat,lon=gbif_points$lon),
  data.frame(src=&quot;ebird&quot;,obs=1,lat=ebird$LATITUDE,lon=ebird$LONGITUDE),
  data.frame(src=&quot;parks&quot;,obs=parks$presence,lat=parks$st_y,lon=parks$st_x),  
  data.frame(src=&quot;psuedo&quot;,obs=0,lat=pa$y,lon=pa$x)  
  )
## turn it into a spatial dataframe and define projection
coordinates(points)=c('lon','lat')
projection(points)=&quot;+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs&quot;
&nbsp;
## Create a combined src_presence field for easy plotting
points$type=paste(points$src,points$obs,sep=&quot;_&quot;)
&nbsp;
##import a world country boundary to ground the map
World  = readShapePoly (&quot;/home/user/ost4sem/exercise/Solitary_Tinamou/shp/world_country_admin_boundary_shapefile_with_fips_codes.shp&quot;)
projection(World)=&quot;+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs&quot;
&nbsp;
## check out the data
spplot(points,zcol=&quot;type&quot;,pch=1:5,col.regions=c(&quot;red&quot;,&quot;red&quot;,&quot;black&quot;,&quot;red&quot;,&quot;black&quot;))+
  layer(sp.polygons( World))# ,xlim=c(-80 , -15) , ylim=c(-40,-5) ) ;
&nbsp;
### uh oh, there are some records out in the ocean (typical GBIF!)
### There are several ways to handle this, one is to clip by the 'expert' range of the species.
&nbsp;
## plot it again with the range
spplot(points,zcol=&quot;type&quot;,pch=1:5,col.regions=c(&quot;red&quot;,&quot;red&quot;,&quot;black&quot;,&quot;red&quot;,&quot;black&quot;))+
  layer(sp.polygons( World))+
  layer(sp.polygons(tin_range,fill=&quot;grey&quot;),under=T)
&nbsp;
## So there are a few points just outside the range, but those in the ocean are most likely wrong.  
## Let's add the distance to the range polygon as a way to filter the observations:
## First we need a equidistant projection to do the calculation
dproj=CRS(&quot;+proj=eqc +lat_ts=0 +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +a=6371007 +b=6371007 +units=m +no_defs&quot;) 
points$dist=gDistance(spTransform(points,dproj),spTransform(tin_range,dproj),byid=T)[1,]
## that adds 'distance' (in meters) from each point to the polygon, check out the values:
hist(points$dist/1000,xlab=&quot;km to expert range&quot;)
## so some points are &gt; 2000km from the range, let's drop any more than 10km
points=points[points$dist&lt;10000,]
&nbsp;
## plot it again with the range
spplot(points,zcol=&quot;type&quot;,pch=1:5,col.regions=c(&quot;red&quot;,&quot;red&quot;,&quot;black&quot;,&quot;red&quot;,&quot;black&quot;))+
  layer(sp.polygons( World))+
  layer(sp.polygons(tin_range,fill=&quot;grey&quot;),under=T)
## that looks better.
&nbsp;
&nbsp;
&nbsp;
## plot it again adding psuedo-absences
spplot(points,zcol=&quot;type&quot;,pch=1:5,col.regions=c(&quot;red&quot;,&quot;red&quot;,&quot;black&quot;,&quot;red&quot;,&quot;black&quot;))+
  layer(sp.polygons( World))+
  layer(sp.polygons(tin_range,fill=&quot;grey&quot;),under=T)+
  layer(sp.points(pa,col=&quot;purple&quot;))
&nbsp;
## that looks better.
&nbsp;
&nbsp;
################################################################################
## Import some evironmental data (Climate &amp; NPP) and align it to a common grid
env=stack(list.files(path = &quot;/home/user/ost4sem/exercise/Solitary_Tinamou/worldclim/&quot;, pattern=&quot;*.tif$&quot; , full.names = TRUE ))
## do some renaming for convenience
names(env)=sub(&quot;_34&quot;,&quot;&quot;,names(env))
names(env)[names(env)==&quot;MOD17A3_Science_NPP_mean_00_12_clip&quot;]=&quot;npp&quot;
## set missing value in npp
NAvalue(env[[&quot;npp&quot;]])=65535
&nbsp;
## get total % forest
forest=sum(env[[grep(&quot;consensus&quot;,names(env))]])
names(forest)=&quot;forest&quot;
## add forest into the env stack
env=stack(env,forest)
&nbsp;
##  List all available environmental data
names(env)
&nbsp;
## See how the points compare to altitude
var=&quot;prec12&quot;
levelplot(env[[var]],col.regions=terrain.colors(20),margin=F)+
  layer(sp.polygons(tin_range))+
  layer(sp.points(points[points$obs==0,],col=&quot;black&quot;))+ #add absences
  layer(sp.points(points[points$obs==1,],col=&quot;red&quot;))    #add presences
&nbsp;
&nbsp;
## variable selection is tricky business and we're not going to dwell on it here...  
## we'll use the following variables
vars=c(&quot;tmean12&quot;,&quot;prec12&quot;,&quot;npp&quot;,&quot;alt&quot;,&quot;forest&quot;)
## look at the environmental variability
plot(env[[vars]])
&nbsp;
## add the environmental data to each point
pointsd=extract(env[[vars]],points,sp=T)
&nbsp;
## now check out some bivariate plots
## feel free to explore other variables
&nbsp;
xyplot(npp~alt,groups=type,data=pointsd@data,auto.key=T)+
  layer(panel.ellipse(x,y,groups=pointsd$type,subscripts=T,level=.68))
&nbsp;
xyplot(tmean12~prec12,groups=type,data=pointsd@data,auto.key=T)+
  layer(panel.ellipse(x,y,groups=pointsd$type,subscripts=T,level=.68))
&nbsp;
xyplot(npp~forest,groups=type,data=pointsd@data,auto.key=T)+
  layer(panel.ellipse(x,y,groups=pointsd$type,subscripts=T,level=.68))
&nbsp;
## Fit a very simple GLM to the data
m1=glm(obs~tmean12+prec12+npp+alt+forest,data=pointsd@data)
## Show the model summary
summary(m1)
&nbsp;
## Use the model to predict p(presence) for all sites
pred=predict(env[[vars]],m1)
&nbsp;
## Plot the predictions
levelplot(pred,col.regions=rainbow(20,start=.2,end=.9),margin=F)+
  layer(sp.polygons(tin_range,lwd=2))+
  layer(sp.points(points[points$obs==0,],col=&quot;black&quot;,cex=2,lwd=4))+ #add absences
  layer(sp.points(points[points$obs==1,],col=&quot;red&quot;,cex=2,lwd=4))    #add presences
&nbsp;
&nbsp;
## perhaps we should mask the predictions to the expert range
pred2=mask(pred,tin_range)
&nbsp;
levelplot(pred2,col.regions=rainbow(20,start=.2,end=.9),margin=F)+
  layer(sp.polygons( World))+
  layer(sp.polygons(tin_range,lwd=2))+
  layer(sp.points(points[points$obs==0,],col=&quot;black&quot;,cex=2,lwd=4))+ #add absences
  layer(sp.points(points[points$obs==1,],col=&quot;red&quot;,cex=2,lwd=4))    #add presences
&nbsp;
## quick accuracy assessment
predpoints=extract(pred,points,sp=T)
boxplot(layer~obs,data=predpoints@data,ylab=&quot;Estimated Propability of Occurrence&quot;,xlab=&quot;Observed Presence/Absence&quot;)
&nbsp;
## to exclude the 'psuedo-absence' points, add this: [pointsd$type!=&quot;psuedo&quot;,]
## after pointsd@data
&nbsp;
## what if we only used percent forest?
boxplot(forest~obs,data=pointsd@data,ylab=&quot;Percent Forest&quot;,xlab=&quot;Observed Presence/Absence&quot;)
&nbsp;
##########################
## the polygons of the parks (and the associate presence/absence status) is available in 
## /home/user/ost4sem/exercise/Solitary_Tinamou/shp/protected_areas
## How would you use these polygons rather than the point data?
## check out the help for the extract function.</pre>

<p>
<a href="/lib/exe/detail.php?id=wiki%3Aspec_distrib&amp;media=wiki:prdpm.png" class="media" title="wiki:prdpm.png"><img src="/lib/exe/fetch.php?w=600&amp;tok=1b4491&amp;media=wiki:prdpm.png" class="media" alt="" width="600" /></a>
<a href="/lib/exe/detail.php?id=wiki%3Aspec_distrib&amp;media=wiki:prdfad.png" class="media wikilink2" title="wiki:prdfad.png"><img src="/lib/exe/fetch.php?w=600&amp;tok=b95308&amp;media=wiki:prdfad.png" class="media" alt="" width="600" /></a>
</p>

</div>
<!-- EDIT2 SECTION "Autoecology of Solitary Tinamou" [1024-] -->