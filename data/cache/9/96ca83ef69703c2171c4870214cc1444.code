length(which(complete.cases(import12[[1]]@data@values)==FALSE)) # complete.cases return a logical vector indicating which cases are complete i.e. have no missing values.
length(import12[[1]]@data@values)
import12[[5]]@data@values[which(complete.cases(import12[[1]]@data@values)==FALSE)]=NA # data cleaning
&nbsp;
mycolor=topo.colors(100)
mycolor[1]=&quot;#a6a6a6&quot; # or 808080 are grey
TITLE=c(&quot;Agriculture&quot;,&quot;Carbon above ground&quot;,&quot;Carbon in soil&quot;,&quot;Flood mitigation&quot;,&quot;Plant production&quot;,&quot;Solar energy&quot;,&quot;Aesthetic&quot;,&quot;Recreation&quot;,&quot;Tourism&quot;,&quot;Urban development&quot;,&quot;Wind energy&quot;,&quot;Zones of Cornwall&quot;)
png(paste(&quot;priority_maps.png&quot;,sep=&quot;&quot;), width = 1600, height = 1200)
nf &lt;- layout(matrix(c(1:12),3,4,byrow=TRUE), c(1,1), c(1,1), TRUE) ; layout.show(nf) ; par(mar=c(5,5,3,5))
for ( x in c(1,2,3,4,5,7,8,9,10,11,6) ){ 
r=import12[[x]]
plot(r, col=mycolor, legend=F, axes=F, main=TITLE[x],cex.main=3, cex=2, cex.legend=3, box=F)
if (x==6){plot(r, legend.only=TRUE, col=mycolor, legend.width=6, legend.shrink=0.75, axis.args=list(at=c(0,50,89),  labels=c(0,50,100),  cex.axis=2.2))}
}
r=import12[[12]]
plot(r, col=c(&quot;blue&quot;,&quot;red&quot;,&quot;green3&quot;,&quot;orange&quot;), legend=F, axes=F, main=&quot;Zones of Cornwall&quot;,cex.main=3, cex=1.8, box=F)
legend(131000,110000,c(&quot;Coastal&quot;,&quot;West&quot;,&quot;Centre&quot;,&quot;East&quot;), bty = &quot;n&quot;,  pch=c(15,15,15,15), pt.cex=c(2.5,2.5,2.5),  cex=3,  col=c(&quot;blue&quot;,&quot;red&quot;,&quot;green3&quot;,&quot;orange&quot;))
dev.off()