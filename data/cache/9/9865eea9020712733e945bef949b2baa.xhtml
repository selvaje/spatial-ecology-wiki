
<h1 class="sectionedit1" id="languages_software_integrationbash_and_r">Languages/Software integration: BASH and R</h1>
<div class="level1">

<p>
Often there is a need to switch from one language to another one. The different languages need to communicate by passing files and variables, from one to the other one.<br/>

<br/>

This is an example of a <em>for bash loop</em> where I use bash to initialize an R script using the  <a href="http://en.wikipedia.org/wiki/End-of-file" class="urlextern" target="blanc" title="http://en.wikipedia.org/wiki/End-of-file" rel="nofollow noopener">EOF</a> function.<br/>

<br/>

The  <em>export</em> bash function and the <em>Sys.getenv()</em> R function allows to exchange variables between R and bash. We can use this functionality to embed an R command in bash.<br/>

</p>

</div>
<!-- EDIT1 SECTION "Languages/Software integration: BASH and R" [1-572] -->
<h2 class="sectionedit2" id="bash_for_loop_and_r">Bash For loop and R</h2>
<div class="level2">
<dl class="code">
<dt><a href="/dokuwiki/doku.php?do=export_code&amp;id=wiki:langintegratitheory2&amp;codeblock=0" title="Download Snippet" class="mediafile mf_sh">bash_r.sh</a></dt>
<dd><pre class="code bash"><span class="kw3">export</span> <span class="re2">INDIR</span>=<span class="sy0">/</span>data<span class="sy0">/</span>ost4sem<span class="sy0">/</span>exercise<span class="sy0">/</span>basic_adv_gdalogr<span class="sy0">/</span>fagus_sylvatica<span class="sy0">/</span>
<span class="kw3">export</span> <span class="re2">OUTDIR</span>=<span class="sy0">/</span>data<span class="sy0">/</span>ost4sem<span class="sy0">/</span>exercise<span class="sy0">/</span>basic_adv_gdalogr<span class="sy0">/</span>fagus_sylvatica<span class="sy0">/</span>
&nbsp;
<span class="co0"># To compare processing speed, let's use the command time</span>
&nbsp;
<span class="kw1">time</span> <span class="br0">&#40;</span>
<span class="kw1">for</span> <span class="kw2">file</span> <span class="kw1">in</span> <span class="re1">$INDIR</span><span class="sy0">/</span><span class="nu0">20</span>?<span class="nu0">0</span>_TSSP_??-ENS-A2-SP20_43023435.tif  ; <span class="kw1">do</span> 
&nbsp;
<span class="kw3">export</span>  <span class="re2">filename</span>=$<span class="br0">&#40;</span><span class="kw2">basename</span> <span class="re1">$file</span> .tif<span class="br0">&#41;</span>
&nbsp;
R <span class="re5">--vanilla</span> <span class="re5">--no-readline</span>   <span class="re5">-q</span>  <span class="co2">&lt;&lt;'EOF'
&nbsp;
library(raster)
&nbsp;
INDIR = Sys.getenv(c('INDIR'))
OUTDIR = Sys.getenv(c('OUTDIR'))
filename = Sys.getenv(c('filename'))
&nbsp;
paste(&quot;start to process &quot;,INDIR,&quot;/&quot;,filename,&quot;.tif&quot;, sep=&quot;&quot; )
&nbsp;
data=raster(paste(INDIR,&quot;/&quot;,filename,&quot;.tif&quot;,sep=&quot;&quot;))
r1 = crop(data, extent(3825000,4527900,2565000,3080000))
writeRaster(r1 , paste(OUTDIR,&quot;/&quot;,filename,&quot;_crop.tif&quot;,sep=&quot;&quot;) , overwrite=TRUE )
&nbsp;
# if you get a file you can export with write.table
# if you get a number you can use Sys.setenv() to export the variable in R:
&nbsp;
EOF</span>
&nbsp;
<span class="kw1">done</span> 
<span class="br0">&#41;</span></pre>
</dd></dl>

</div>
<!-- EDIT2 SECTION "Bash For loop and R" [573-1512] -->
<h2 class="sectionedit3" id="bash_multicore_for_loop_and_r">Bash multicore for loop and R</h2>
<div class="level2">

<p>
The previous example can be transformed in multicore using xargs command.<br/>

The xargs command allows to pass the an argument to each single processor using the -n and -P options.<br/>

In our case the one image will be passed to one processor and the second image will be passed to the other processor. 
</p>
<dl class="code">
<dt><a href="/dokuwiki/doku.php?do=export_code&amp;id=wiki:langintegratitheory2&amp;codeblock=1" title="Download Snippet" class="mediafile mf_sh">bash_r_xargs.sh</a></dt>
<dd><pre class="code bash"><span class="kw3">export</span> <span class="re2">INDIR</span>=<span class="sy0">/</span>data<span class="sy0">/</span>ost4sem<span class="sy0">/</span>exercise<span class="sy0">/</span>basic_adv_gdalogr<span class="sy0">/</span>fagus_sylvatica<span class="sy0">/</span>
<span class="kw3">export</span> <span class="re2">OUTDIR</span>=<span class="sy0">/</span>data<span class="sy0">/</span>ost4sem<span class="sy0">/</span>exercise<span class="sy0">/</span>basic_adv_gdalogr<span class="sy0">/</span>fagus_sylvatica<span class="sy0">/</span>
&nbsp;
<span class="kw1">time</span> <span class="br0">&#40;</span>
&nbsp;
<span class="kw2">ls</span> <span class="re1">$INDIR</span><span class="sy0">/</span><span class="nu0">20</span>?<span class="nu0">0</span>_TSSP_??-ENS-A2-SP20_43023435.tif  <span class="sy0">|</span> <span class="kw2">xargs</span> <span class="re5">-n</span> <span class="nu0">1</span> <span class="re5">-P</span> <span class="nu0">6</span> <span class="kw2">bash</span>  <span class="re5">-c</span> $<span class="st_h">'
&nbsp;
file=$1
export  filename=$(basename $file .tif)
&nbsp;
# pay attention to single quote that under xargs it need to escape by the \
&nbsp;
R --vanilla --no-readline   -q  &lt;&lt;\'</span>EOF<span class="co3">\'</span>
&nbsp;
library<span class="br0">&#40;</span>raster<span class="br0">&#41;</span>
&nbsp;
INDIR = Sys.getenv<span class="br0">&#40;</span>c<span class="br0">&#40;</span><span class="co3">\'</span>INDIR<span class="co3">\'</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
OUTDIR = Sys.getenv<span class="br0">&#40;</span>c<span class="br0">&#40;</span><span class="co3">\'</span>OUTDIR<span class="co3">\'</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
filename = Sys.getenv<span class="br0">&#40;</span>c<span class="br0">&#40;</span><span class="co3">\'</span>filename<span class="co3">\'</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
&nbsp;
paste0<span class="br0">&#40;</span><span class="st0">&quot;start to process &quot;</span>,INDIR,<span class="st0">&quot;/&quot;</span>,filename,<span class="st0">&quot;.tif&quot;</span><span class="br0">&#41;</span>
&nbsp;
<span class="re2">data</span>=raster<span class="br0">&#40;</span>paste<span class="br0">&#40;</span>INDIR,<span class="st0">&quot;/&quot;</span>,filename,<span class="st0">&quot;.tif&quot;</span>,<span class="re2">sep</span>=<span class="st0">&quot;&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
r1 = crop<span class="br0">&#40;</span>data, extent<span class="br0">&#40;</span><span class="nu0">3825000</span>,<span class="nu0">4527900</span>,<span class="nu0">2565000</span>,<span class="nu0">3080000</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
&nbsp;
paste0<span class="br0">&#40;</span><span class="st0">&quot;start to export &quot;</span>,INDIR,<span class="st0">&quot;/&quot;</span>,filename,<span class="st0">&quot;_crop.tif&quot;</span><span class="br0">&#41;</span>
&nbsp;
writeRaster<span class="br0">&#40;</span>r1 , paste<span class="br0">&#40;</span>OUTDIR,<span class="st0">&quot;/&quot;</span>,filename,<span class="st0">&quot;_crop.tif&quot;</span>,<span class="re2">sep</span>=<span class="st0">&quot;&quot;</span><span class="br0">&#41;</span> , <span class="re2">overwrite</span>=TRUE<span class="br0">&#41;</span>
&nbsp;
<span class="co0"># if you get a file you can export with write.table</span>
<span class="co0"># if you get a number you can use Sys.setenv() to export the variable in BASH:</span>
&nbsp;
EOF
&nbsp;
<span class="st_h">' _  
&nbsp;
)</span></pre>
</dd></dl>

<p>
<strong>Exercise</strong><br/>

Search for a raster function in R able to calculate the standard deviation within a 3&times;3 circular moving window.<br/>

Apply the function to the crop image and export as bio<em>*</em>crop_stdev.tif.<br/>

</p>

</div>
<!-- EDIT3 SECTION "Bash multicore for loop and R" [1513-] -->