
<h1 class="sectionedit1" id="linking_weather_data_with_socio-economic_dataspatial_interpolation">LINKING WEATHER DATA WITH SOCIO-ECONOMIC DATA: SPATIAL INTERPOLATION</h1>
<div class="level1">

<p>
Project proposal can be downloaded at: <a href="http://www.spatial-ecology.net/ost4sem/project/unidk2010/ECOWETHER/documents/VNProject.pdf" class="urlextern" target="blanc" title="http://www.spatial-ecology.net/ost4sem/project/unidk2010/ECOWETHER/documents/VNProject.pdf" rel="nofollow noopener"> VNProject.pdf </a>.
</p>

<p>
<br/>

</p>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;LINKING WEATHER DATA WITH SOCIO-ECONOMIC DATA: SPATIAL INTERPOLATION&quot;,&quot;hid&quot;:&quot;linking_weather_data_with_socio-economic_dataspatial_interpolation&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:1,&quot;range&quot;:&quot;1-242&quot;} -->
<h2 class="sectionedit2" id="introduction">INTRODUCTION</h2>
<div class="level2">

<p>
The aim of this project is to interpolate the weather data for locations in which socio-economic data are available based on the weather data provided by all 172 weather stations in Vietnam. Socio-economic data are derived from Vietnam Household Living Standard Surveys (VHLSSs) which follows The World Bank&#039;s LSMS standards. Since 2002, the VHLSSs have been conducted every second year. The surveys interview 9,000 households in 3000 communes (out of 10,000 communes) in Vietnam.
Weather data are observed from 172 weather station collected on a daily basis. The data are available for the period 1975-2006.
<br/>

<br/>

</p>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;INTRODUCTION&quot;,&quot;hid&quot;:&quot;introduction&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:2,&quot;range&quot;:&quot;243-884&quot;} -->
<h3 class="sectionedit3" id="project_objectives">Project objectives</h3>
<div class="level3">

<p>
The Project aims at predicting the daily total rainfall for 3000 VHLSS communes for 365 days in 2006.
<br/>

<br/>

</p>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Project objectives&quot;,&quot;hid&quot;:&quot;project_objectives&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:3,&quot;range&quot;:&quot;885-1024&quot;} -->
<h2 class="sectionedit4" id="metadata">METADATA</h2>
<div class="level2">

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;METADATA&quot;,&quot;hid&quot;:&quot;metadata&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:4,&quot;range&quot;:&quot;1025-1045&quot;} -->
<h3 class="sectionedit5" id="raster_data">Raster data</h3>
<div class="level3">

<p>
Raster data include:
</p>
<ul>
<li class="level1"><div class="li"> ASTER GDEM at the resolution 30m. The data can be downloaded free of charge at: <a href="http://www.gdem.aster.ersdac.or.jp/" class="urlextern" target="blanc" title="http://www.gdem.aster.ersdac.or.jp/" rel="nofollow noopener">http://www.gdem.aster.ersdac.or.jp/</a></div>
</li>
</ul>

<p>
<br/>

<br/>

</p>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Raster data&quot;,&quot;hid&quot;:&quot;raster_data&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:5,&quot;range&quot;:&quot;1046-1214&quot;} -->
<h3 class="sectionedit6" id="vector_data">Vector Data</h3>
<div class="level3">

<p>
Vector data include:
</p>
<ul>
<li class="level1"><div class="li"> Locations of 172 weather stations. The information is in the form of ESRI shape-files. </div>
</li>
<li class="level1"><div class="li"> The boundary of Vietnam in a shape-file.</div>
</li>
<li class="level1"><div class="li"> The boundaries of VHLSS communes in a shape-file</div>
</li>
</ul>

<p>
Accessibility: Contact the author to obtain the shape-files via email at: trung@foi.dk
<br/>

<br/>

</p>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Vector Data&quot;,&quot;hid&quot;:&quot;vector_data&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:6,&quot;range&quot;:&quot;1215-1541&quot;} -->
<h3 class="sectionedit7" id="text_files">Text files</h3>
<div class="level3">

<p>
Daily rainfall data for the period January 01 - December 30, 2006 are in Stata format. This file can be imported in R for use with geoR or other gis packages.
<br/>

<br/>

</p>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Text files&quot;,&quot;hid&quot;:&quot;text_files&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:7,&quot;range&quot;:&quot;1542-1728&quot;} -->
<h2 class="sectionedit8" id="method">METHOD</h2>
<div class="level2">

<p>
First, we start by building a bash script to employ GRASS GIS to process a number of sources of data in the form of raster and shape files. Global Digital Elevation Model (GDEM) at 30m resolution provides us with geographical characteristics. The data are in raster format and can be obtained free of charge (see below). GRASS GIS is called to extract evelevation, aspect, and slope. Grids of cells at 1km resoluation are also created.
</p>

<p>
The grids of latitude, longitude and the spatial indicators are then overlayed with the vector of the location of the meteorological stations and the vector of VHLSS communes. The final output of this task is two tables with the coordinates of the spatial indicators: small table at meteorological stations and big table at all the VHLSS communes.
</p>

<p>
These two tables are input of the R script which interpolates rainfall at the locations in the big table by the methods kriging and co-kriging. The output at this stage is 365 text files which contain the predicted rainfall for all the VHLSS communes of each day of the year 2006.
</p>

<p>
<br/>

</p>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;METHOD&quot;,&quot;hid&quot;:&quot;method&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:8,&quot;range&quot;:&quot;1729-2820&quot;} -->
<h2 class="sectionedit9" id="data_processing">DATA PROCESSING</h2>
<div class="level2">

<p>
<br/>

</p>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;DATA PROCESSING&quot;,&quot;hid&quot;:&quot;data_processing&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:9,&quot;range&quot;:&quot;2821-2851&quot;} -->
<h3 class="sectionedit10" id="grass_gis">GRASS GIS</h3>
<div class="level3">

<p>
The first part of the bash file is to set the paths of folders so that later on we can make use of the so-called &#039;relative&#039; paths. Relative paths allow users to adapt the bash file easily to run on their machine.
</p>
<pre class="code bash"><span class="co0"># Title: This script processes the ASTER GDEM</span>
<span class="co0"># Author: Le Dang Trung</span>
<span class="co0"># Email: trung@foi.dk</span>
<span class="co0"># Org: Institute of Food and Resource Economics, University of Copenhagen</span>
&nbsp;
<span class="co0">##########################################################################################################################################</span>
<span class="co0">#     Folders settings                                                                                                                   #</span>
<span class="co0">##########################################################################################################################################</span>
<span class="co0"># project (mother) folder</span>
<span class="kw3">export</span> <span class="re2">projfolder</span>=<span class="st_h">'/home/user/Dropbox/OSGIScourse/VNspatial'</span>
&nbsp;
<span class="co0"># data folder for Gdem</span>
<span class="kw3">export</span> <span class="re2">data_gdem</span>=<span class="st_h">'/home/user/Dropbox/Data/Meteo/GDEM'</span>
&nbsp;
<span class="co0"># folder for grass database</span>
<span class="kw3">export</span> <span class="re2">data_grassvn</span>=<span class="re1">$projfolder</span><span class="sy0">/</span>grassdb<span class="sy0">/</span>vietnam
&nbsp;
<span class="co0"># folder for shapefiles</span>
<span class="kw3">export</span> <span class="re2">data_shpfiles</span>=<span class="st_h">'/home/user/Dropbox/OSGIScourse/VNproject'</span>
&nbsp;
<span class="co0"># folder for raster files</span>
<span class="kw2">mkdir</span> <span class="re1">$projfolder</span><span class="sy0">/</span>raster
<span class="kw3">export</span> <span class="re2">data_raster</span>=<span class="re1">$projfolder</span><span class="sy0">/</span>raster
&nbsp;
<span class="co0"># folder for vector files</span>
<span class="kw2">mkdir</span> <span class="re1">$projfolder</span><span class="sy0">/</span>vector
<span class="kw3">export</span> <span class="re2">data_vector</span>=<span class="re1">$projfolder</span><span class="sy0">/</span>vector</pre>

<p>
<br/>

Next, we call GRASS GIS to process GDEM .tif files which have been downloaded. The command <strong>gdalwarp</strong> is used to combine all the tiles together and produced a &#039;mosaic&#039;. We call it VNmosaic.tif.
</p>
<pre class="code bash"><span class="co0">##########################################################################################################################################</span>
<span class="co0">#     Combine all tiles of GDEM                                                                                                          #</span>
<span class="co0">##########################################################################################################################################</span>
<span class="co0"># identify the meta info of the gdem</span>
gdalinfo <span class="re1">$data_gdem</span><span class="sy0">/</span>ASTGTM_N19E106_dem.tif
&nbsp;
<span class="co0"># combine all the tiles and set resolution at ~ 1km</span>
<span class="kw1">if</span> <span class="br0">&#91;</span> <span class="re5">-f</span> <span class="re1">$data_raster</span><span class="sy0">/</span>VNmosaic.tif <span class="br0">&#93;</span> ; <span class="kw1">then</span>
  <span class="kw3">echo</span> <span class="st_h">'The file VNmosaic.tif already exist'</span>
<span class="kw1">else</span>
  <span class="kw2">rm</span> <span class="re5">-f</span> <span class="re1">$data_raster</span><span class="sy0">/</span>VNmosaic.tif
  gdalwarp <span class="re5">-tr</span> <span class="nu0">0.01</span> <span class="nu0">0.01</span> -s_srs EPSG:<span class="nu0">4326</span> -t_srs EPSG:<span class="nu0">4326</span> <span class="re1">$data_gdem</span><span class="sy0">/</span>AST<span class="sy0">*</span>_dem.tif <span class="re1">$data_raster</span><span class="sy0">/</span>VNmosaic.tif
<span class="kw1">fi</span></pre>

<p>
<br/>

We then go to GRASS GIS to process the maps. But we need to &#039;integrate&#039; GRASS into the operating system first. We do it as follows:
</p>
<pre class="code bash"><span class="co0">##########################################################################################################################################</span>
<span class="co0">#     GRASS to process maps (GDEM and others)                                                                                            #</span>
<span class="co0">##########################################################################################################################################</span>
<span class="co0"># create a grass location for the project</span>
<span class="kw3">cd</span> <span class="re1">$data_raster</span>
<span class="kw2">rm</span> <span class="re5">-f</span> <span class="re1">$projfolder</span><span class="sy0">/</span>grassdb<span class="sy0">/</span>vietnam
<span class="kw2">bash</span> <span class="re1">$projfolder</span><span class="sy0">/</span>scripts<span class="sy0">/</span>create_location.sh VNmosaic.tif vietnam <span class="re1">$projfolder</span><span class="sy0">/</span>grassdb
&nbsp;
<span class="co0"># integrate GRASS into the OS system</span>
<span class="kw3">echo</span> <span class="st0">&quot;LOCATION_NAME: vietnam&quot;</span> <span class="sy0">&gt;</span>  <span class="re1">$HOME</span><span class="sy0">/</span>.grassrc6
<span class="kw3">echo</span> <span class="st0">&quot;MAPSET: PERMANENT&quot;</span>            <span class="sy0">&gt;&gt;</span> <span class="re1">$HOME</span><span class="sy0">/</span>.grassrc6
<span class="kw3">echo</span> <span class="st0">&quot;DIGITIZER: none&quot;</span>        <span class="sy0">&gt;&gt;</span> <span class="re1">$HOME</span><span class="sy0">/</span>.grassrc6
<span class="kw3">echo</span> <span class="st0">&quot;GRASS_GUI: text&quot;</span>        <span class="sy0">&gt;&gt;</span> <span class="re1">$HOME</span><span class="sy0">/</span>.grassrc6
<span class="kw3">echo</span> <span class="st0">&quot;GISDBASE: <span class="es2">$projfolder</span>/grassdb&quot;</span>     <span class="sy0">&gt;&gt;</span> <span class="re1">$HOME</span><span class="sy0">/</span>.grassrc6
<span class="kw3">export</span> <span class="re2">GISBASE</span>=<span class="sy0">/</span>usr<span class="sy0">/</span>lib<span class="sy0">/</span>grass64
<span class="kw3">export</span> <span class="re2">PATH</span>=<span class="re1">$PATH</span>:<span class="re1">$GISBASE</span><span class="sy0">/</span>bin:<span class="re1">$GISBASE</span><span class="sy0">/</span>scripts
<span class="kw3">export</span> <span class="re2">LD_LIBRARY_PATH</span>=<span class="st0">&quot;<span class="es2">$GISBASE</span>/lib&quot;</span>
<span class="kw3">export</span> <span class="re2">GISRC</span>=~<span class="sy0">/</span>.grassrc6
<span class="kw3">export</span> <span class="re2">GIS_LOCK</span>=<span class="re4">$$</span>
g.version
g.gisenv</pre>

<p>
<br/>

The next step is to convert the shapefiles of province boudaries, meteo stations, the coast and the VHLSS communes to vector maps so that later on we can do computations. Two commands <strong>ogr2ogr</strong> and <strong>v.in.ogr</strong> are used.
</p>
<pre class="code bash"><span class="co0"># identify the meta info of the VN province boundary shapefile and create a new shapefile, then put it in the vector folder</span>
ogrinfo <span class="re1">$data_shpfiles</span><span class="sy0">/</span>VN_tinh_poly.shp
ogr2ogr -s_srs EPSG:<span class="nu0">4326</span> -t_srs EPSG:<span class="nu0">4326</span> <span class="re1">$data_vector</span><span class="sy0">/</span>VN64provWGS84.shp <span class="re1">$data_shpfiles</span><span class="sy0">/</span>VN_tinh_poly.shp 
&nbsp;
<span class="co0"># identify the meta info of the Meteo stations shapefile and create a new shapefile, then put it in the vector folder</span>
ogrinfo <span class="re1">$data_shpfiles</span><span class="sy0">/</span>VNMeteo.shp
ogr2ogr -s_srs EPSG:<span class="nu0">4326</span> -t_srs EPSG:<span class="nu0">4326</span> <span class="re1">$data_vector</span><span class="sy0">/</span>VNMeteo.shp <span class="re1">$data_shpfiles</span><span class="sy0">/</span>VNMeteo.shp 
&nbsp;
<span class="co0"># display layers to check the overlapping</span>
openev2 <span class="re1">$data_raster</span><span class="sy0">/</span>VNmosaic.tif <span class="re1">$data_vector</span><span class="sy0">/</span>VN64provWGS84.shp <span class="re1">$data_vector</span><span class="sy0">/</span>VNMeteo.shp
&nbsp;
<span class="co0"># convert the province boundary shapefile to vector</span>
v.in.ogr <span class="re2">dsn</span>=<span class="re1">$data_vector</span> <span class="re2">layer</span>=VN64provWGS84 <span class="re2">output</span>=VN64provWGS84 <span class="re5">--overwrite</span>
&nbsp;
<span class="co0"># convert the meteo stations shapefile to vector</span>
v.in.ogr <span class="re2">dsn</span>=<span class="re1">$data_vector</span> <span class="re2">layer</span>=VNMeteo <span class="re2">output</span>=VNMeteo <span class="re5">--overwrite</span>
&nbsp;
<span class="co0"># convert the VN coast shapefile to vector</span>
ogrinfo <span class="re1">$data_shpfiles</span><span class="sy0">/</span>vncoast.shp
ogr2ogr -s_srs EPSG:<span class="nu0">4326</span> -t_srs EPSG:<span class="nu0">4326</span> <span class="re1">$data_vector</span><span class="sy0">/</span>VNcoast.shp <span class="re1">$data_shpfiles</span><span class="sy0">/</span>vncoast.shp 
v.in.ogr <span class="re2">dsn</span>=<span class="re1">$data_vector</span> <span class="re2">layer</span>=VNcoast <span class="re2">output</span>=VNcoast <span class="re5">--overwrite</span>
&nbsp;
<span class="co0"># convert the VHLSS shapefile to vector</span>
ogrinfo <span class="re1">$data_shpfiles</span><span class="sy0">/</span>VHLSS06coms.shp
ogr2ogr -s_srs EPSG:<span class="nu0">4326</span> -t_srs EPSG:<span class="nu0">4326</span> <span class="re1">$data_vector</span><span class="sy0">/</span>VHLSS06coms.shp <span class="re1">$data_shpfiles</span><span class="sy0">/</span>VHLSS06coms.shp 
v.in.ogr <span class="re2">dsn</span>=<span class="re1">$data_vector</span> <span class="re2">layer</span>=VHLSS06coms <span class="re2">output</span>=VHLSS06coms <span class="re5">--overwrite</span></pre>

<p>
Since the GDEM we downloaded cover a larger region, we want to clip to define a smaller regions which fully cover Vietnam&#039;s areas which are defined by the province boundaries shape file. From this point on, we will be efficiently working in Vietnam region.
</p>
<pre class="code bash"><span class="co0"># clip the GDEM raster to keep only Vietnam's region</span>
g.region <span class="re5">-p</span>
g.region <span class="re2">vect</span>=VN64provWGS84,VNMeteo <span class="re2">save</span>=Vietnam <span class="re5">--overwrite</span>
<span class="co0">#g.region n=23 s=20 w=103 e=107 save=Vietnam --overwrite</span>
<span class="co0">#g.region n=22 s=21 w=105 e=107 save=Vietnam --overwrite</span>
g.region <span class="re5">-p</span>
&nbsp;
<span class="co0"># refine the GDEM to cover only Vietnam's region</span>
r.mapcalc <span class="re2">Reggdem</span>=VNmosaic.tif
&nbsp;
<span class="co0"># clip all the project's vector maps to cover only the region</span>
v.in.region <span class="re2">output</span>=VectRegion <span class="re5">--overwrite</span>
v.select <span class="re2">ainput</span>=VNMeteo <span class="re2">binput</span>=VectRegion <span class="re2">output</span>=RegMeteo <span class="re5">--overwrite</span>
v.select <span class="re2">ainput</span>=VN64provWGS84 <span class="re2">binput</span>=VectRegion <span class="re2">output</span>=Reg64provWGS84 <span class="re5">--overwrite</span>
v.select <span class="re2">ainput</span>=VNcoast <span class="re2">binput</span>=VectRegion <span class="re2">output</span>=RegCoast <span class="re5">--overwrite</span></pre>

<p>
Next, we extract elevation, aspect, slope, and the coordinates at the Meteo stations from the GDEM and store them in the database table of the Meteo shape file. Distance from the locations to the coast is also calculated. This is our &#039;small&#039; table.
</p>
<pre class="code bash"><span class="co0"># extract land surface parameters based on GDEM</span>
r.slope.aspect <span class="re2">elevation</span>=Reggdem <span class="re2">slope</span>=Regslope <span class="re2">aspect</span>=Regaspect <span class="re5">--overwrite</span>
&nbsp;
<span class="co0"># create the table of atributes for the Meteo points</span>
<span class="co0">#v.db.droptable -f map=VNMeteo</span>
<span class="co0">#v.db.addtable VNMeteo col=&quot;VNaspect double,VNslope double&quot;</span>
v.db.addcol RegMeteo <span class="re2">col</span>=<span class="st0">&quot;Regelev double,Regaspect double,Regslope double&quot;</span>
v.what.rast <span class="re2">rast</span>=Reggdem <span class="re2">vect</span>=RegMeteo <span class="re2">col</span>=Regelev
v.what.rast <span class="re2">rast</span>=Regaspect <span class="re2">vect</span>=RegMeteo <span class="re2">col</span>=Regaspect
v.what.rast <span class="re2">rast</span>=Regslope <span class="re2">vect</span>=RegMeteo <span class="re2">col</span>=Regslope
&nbsp;
<span class="co0"># add distance from the coast</span>
v.db.addcol RegMeteo <span class="re2">col</span>=<span class="st0">&quot;DMetCoast double&quot;</span>
v.distance <span class="re2">from</span>=RegMeteo <span class="re2">to</span>=RegCoast <span class="re2">output</span>=DMeteoCoast <span class="re2">upload</span>=dist <span class="re2">column</span>=DMetCoast <span class="re5">--overwrite</span>
&nbsp;
&nbsp;
<span class="co0"># drop unneccessary columns in VNMeteo table</span>
db.columns <span class="re2">table</span>=VNMeteo
<span class="kw1">for</span> <span class="kw2">col</span> <span class="kw1">in</span> Data_YES Commune District Province F9 F10; <span class="kw1">do</span>
  v.db.dropcol <span class="re2">map</span>=RegMeteo <span class="re2">column</span>=<span class="re1">$col</span>
<span class="kw1">done</span>
db.columns <span class="re2">table</span>=RegMeteo
v.db.select RegMeteo <span class="sy0">|</span> <span class="kw2">head</span></pre>

<p>
Finally, we do the same thing for the &#039;big&#039; table. One thing different is we add municipality identifiers to this big table so that later on we can compute the mean rainfall for each of the commune by averaging rainfall over all the cell in the commune.
</p>
<pre class="code bash"><span class="co0">##########################################################################################################################################</span>
<span class="co0">#     GRASS to create the table of indicators for the bigger areas to be predicted                                                       #</span>
<span class="co0">##########################################################################################################################################</span>
<span class="co0"># create vector map of region to interpolate</span>
r.to.vect <span class="re2">input</span>=Reggdem <span class="re2">output</span>=BiggerAreas <span class="re2">feature</span>=point <span class="re5">--overwrite</span>
v.select <span class="re2">ainput</span>=BiggerAreas <span class="re2">binput</span>=VHLSS06coms <span class="re2">output</span>=VHLSSareas <span class="re5">--overwrite</span>
v.db.droptable <span class="re2">map</span>=VHLSSareas <span class="re5">-f</span>
v.db.addtable <span class="re2">map</span>=VHLSSareas <span class="re2">columns</span>=<span class="st0">&quot;Lon double,Lat double,Regelev double,Regaspect double,Regslope double,DMetCoast double,comID integer&quot;</span>
v.to.db <span class="re2">map</span>=VHLSSareas <span class="re2">type</span>=point <span class="re2">option</span>=coor <span class="re2">column</span>=Lon,Lat
&nbsp;
<span class="co0">#v.db.addtable VNMeteo col=&quot;VNaspect double,VNslope double&quot;</span>
v.what.rast <span class="re2">rast</span>=Reggdem <span class="re2">vect</span>=VHLSSareas <span class="re2">col</span>=Regelev
v.what.rast <span class="re2">rast</span>=Regaspect <span class="re2">vect</span>=VHLSSareas <span class="re2">col</span>=Regaspect
v.what.rast <span class="re2">rast</span>=Regslope <span class="re2">vect</span>=VHLSSareas <span class="re2">col</span>=Regslope
&nbsp;
<span class="co0"># add distance from the coast</span>
v.distance <span class="re2">from</span>=VHLSSareas <span class="re2">to</span>=RegCoast <span class="re2">output</span>=DMeteoCoast <span class="re2">upload</span>=dist <span class="re2">column</span>=DMetCoast <span class="re5">--overwrite</span>
&nbsp;
<span class="co0"># add commune ID to the bigger table</span>
v.what.vect VHLSSareas <span class="re2">col</span>=comID <span class="re2">qvector</span>=VHLSS06coms <span class="re2">qcol</span>=<span class="kw2">cat</span></pre>

<p>
<br/>

<br/>

</p>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;GRASS GIS&quot;,&quot;hid&quot;:&quot;grass_gis&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:10,&quot;range&quot;:&quot;2852-11776&quot;} -->
<h3 class="sectionedit11" id="r">R</h3>
<div class="level3">

<p>
The GRASS script has finished its job and now we move onto working in R. In short, we need to load the two tables and conduct the kriging interpolcations using the <strong>automap</strong> package. First, we set the environment for R to work.
</p>
<pre class="code R"># title         : VNspatial.R
# purpose       : interpolation of meteorological data in Vietnam using daily observations from weather stations
# authors       : Le Dang Trung
# last update   : 
# inputs        : 
# outputs       : predicted data for each of VHLSS communes on a daily basis
# remarks 1     : 
&nbsp;
#----------------------------------------------------------------------------------------------------------------------------------------#
# Initial settings:                                                                                                                      #
#----------------------------------------------------------------------------------------------------------------------------------------#
# call R to load into the OS
R
&nbsp;
# install needed packages from the Internet
#install.packages(&quot;maptools&quot;, dependencies=TRUE)
#install.packages(&quot;gstat&quot;, dependencies=TRUE)
#install.packages(&quot;rgdal&quot;, dependencies=TRUE)
#install.packages(&quot;lattice&quot;, dependencies=TRUE)
&nbsp;
# load needed liabraries
library(maptools)
library(gstat)
library(rgdal)
library(lattice)
library(foreign)
library(automap)
library(sp)
library(akima)
library(RSAGA)
library(geoR)
library(spatstat)
&nbsp;
# set path to the working directory
setwd(&quot;/home/user/Dropbox/OSGIScourse/VNspatial/data&quot;)
getwd()</pre>

<p>
<br/>

Next, we import the two tables:
</p>
<pre class="code R">#----------------------------------------------------------------------------------------------------------------------------------------#
# Data import to R:                                                                                                                      #
#----------------------------------------------------------------------------------------------------------------------------------------#
# import the spatial indicators produced by the Grass job
RegMeteo = read.dbf(&quot;/home/user/Dropbox/OSGIScourse/VNspatial/grassdb/vietnam/PERMANENT/dbf/RegMeteo.dbf&quot;)
&nbsp;
# import rainfall from Stata format
VNrainfall &lt;- read.dta(&quot;Rainfall2006.dta&quot;)
str(VNrainfall) # Total rainfall for 365 days (2006) at 172 locations
&nbsp;
# put all indicator together
VNdata = merge(VNrainfall, RegMeteo, by=c(&quot;ID&quot;))
str(VNdata)
&nbsp;
VNdataOK &lt;- VNdata[complete.cases(VNdata$Rainfall,VNdata$Regelev,VNdata$Regaspect,VNdata$Regslope,VNdata$DMetCoast,VNdata$Lat,VNdata$Lon), ]
&nbsp;
# import bigger areas to be predicted
Bigdata = read.dbf(&quot;/home/user/Dropbox/OSGIScourse/VNspatial/grassdb/vietnam/PERMANENT/dbf/VHLSSareas.dbf&quot;)
BigdataOK &lt;- Bigdata[complete.cases(Bigdata$Regelev,Bigdata$Regaspect,Bigdata$Regslope,Bigdata$DMetCoast,Bigdata$Lat,Bigdata$Lon), ]</pre>

<p>
<br/>

We need to set spatial coordinates to create spatial data for the package <strong>sp</strong> and <strong>gstat</strong> to work:
</p>
<pre class="code R"># set cooridnate
coordinates(VNdataOK) = ~ Lon + Lat
coordinates(BigdataOK) = ~ Lon + Lat
# loop over date in 365 days of 2006</pre>

<p>
Now, the data for kriging are ready. We do the interpolation for everyday of the 2006. The output which contains the municipality identifiers, kriged rainfall, co-kriged rainfall and the date is stored in an external text files which are ready to combine with the socio-economic data files.
</p>
<pre class="code R">i &lt;- 16802
while(i &lt;= 17166) {
  i
  rain1day &lt;- subset(VNdataOK,VNdataOK$date==i)
&nbsp;
  # Kriging interpolation
  krige = autoKrige(Rainfall ~ 1,rain1day,BigdataOK, model = c(&quot;Sph&quot;, &quot;Exp&quot;, &quot;Gau&quot;, &quot;Ste&quot;))
  Rainfall_krige=krige$krige_output$var1.pred
  rain_krige &lt;-aggregate(Rainfall_krige, by=list(BigdataOK$comID),FUN=mean)
  names(rain_krige)[c(1,2)] &lt;- c(&quot;comID&quot;, &quot;rain_krige&quot;)
&nbsp;
  # Co-kriging interpolation
  cokrige = autoKrige(Rainfall~Lat+Lon+Regelev+Regaspect+Regslope+DMetCoast,rain1day,BigdataOK, model = c(&quot;Sph&quot;, &quot;Exp&quot;, &quot;Gau&quot;, &quot;Ste&quot;))
  Rainfall_cokrige=cokrige$krige_output$var1.pred
  rain_cokrige &lt;-aggregate(Rainfall_cokrige, by=list(BigdataOK$comID),FUN=mean)
  names(rain_cokrige)[c(1,2)] &lt;- c(&quot;comID&quot;, &quot;rain_cokrige&quot;)
&nbsp;
  textfile &lt;- merge(rain_krige, rain_cokrige, by=c(&quot;comID&quot;))
  textfile$date &lt;- i
&nbsp;
  # write the textfile data frame to a text file
   write.table(textfile, file=paste(&quot;Rain_Krige&quot;,i,&quot;.txt&quot;,sep=&quot;&quot;), sep=&quot;\t&quot;, col.names = NA)
&nbsp;
  # export graph
  graph = paste(&quot;Rain_Krige&quot;,i,&quot;.png&quot;,sep=&quot;&quot;)
  png(graph); plot(krige); dev.off()
  graph = paste(&quot;Rain_coKrige&quot;,i,&quot;.png&quot;,sep=&quot;&quot;)
  png(graph); plot(cokrige); dev.off()
&nbsp;
  # work on the next day
  i &lt;-i+1
  }</pre>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;R&quot;,&quot;hid&quot;:&quot;r&quot;,&quot;codeblockOffset&quot;:7,&quot;secid&quot;:11,&quot;range&quot;:&quot;11777-16374&quot;} -->
<h2 class="sectionedit12" id="results_and_discussion">RESULTS and DISCUSSION</h2>
<div class="level2">

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;RESULTS and DISCUSSION&quot;,&quot;hid&quot;:&quot;results_and_discussion&quot;,&quot;codeblockOffset&quot;:11,&quot;secid&quot;:12,&quot;range&quot;:&quot;16375-16409&quot;} -->
<h3 class="sectionedit13" id="interpolation_results">Interpolation Results</h3>
<div class="level3">

<p>
Maps of interpolation results have been produced for both kriging and co-kriging on a daily basis. Below are some examples<br/>

<br/>

<strong>July 12th, 2006: Kriging interpolation of Rainfall</strong><br/>

<a href="/dokuwiki/lib/exe/detail.php?id=wikidk%3Adk10ecowether&amp;media=wikidk:rain_krige16994.png" class="media" title="wikidk:rain_krige16994.png"><img src="/dokuwiki/lib/exe/fetch.php?media=wikidk:rain_krige16994.png" class="media" alt="" /></a>
<br/>

<br/>

<strong>July 12th, 2006: Co-Kriging interpolation of Rainfall</strong><br/>

<a href="/dokuwiki/lib/exe/detail.php?id=wikidk%3Adk10ecowether&amp;media=wikidk:rain_cokrige16994.png" class="media" title="wikidk:rain_cokrige16994.png"><img src="/dokuwiki/lib/exe/fetch.php?media=wikidk:rain_cokrige16994.png" class="media" alt="" /></a>
<br/>

<br/>

<strong>Text files of output look like this:</strong><br/>

<a href="/dokuwiki/lib/exe/detail.php?id=wikidk%3Adk10ecowether&amp;media=wikidk:predictedrainfall.png" class="media" title="wikidk:predictedrainfall.png"><img src="/dokuwiki/lib/exe/fetch.php?media=wikidk:predictedrainfall.png" class="media" alt="" /></a>
</p>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Interpolation Results&quot;,&quot;hid&quot;:&quot;interpolation_results&quot;,&quot;codeblockOffset&quot;:11,&quot;secid&quot;:13,&quot;range&quot;:&quot;16410-16845&quot;} -->
<h3 class="sectionedit14" id="caveats_and_improvements">Caveats and Improvements</h3>
<div class="level3">

<p>
<br/>

The current method of interpolation is subject to several caveats. One of them is that predicted rainfall can be negative which is impossible in reality. 
The negative predicted values are due to the fact that OLS model has applied while in this case a Tobit model should be employed.
Therefore, incorporation of Tobit model in the kriging process is a good way to improve the interpolation process.
<br/>

Finally, we also need to conduct model validation.
</p>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Caveats and Improvements&quot;,&quot;hid&quot;:&quot;caveats_and_improvements&quot;,&quot;codeblockOffset&quot;:11,&quot;secid&quot;:14,&quot;range&quot;:&quot;16846-&quot;} -->